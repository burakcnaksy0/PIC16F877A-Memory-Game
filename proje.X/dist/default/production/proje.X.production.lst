

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jun 03 13:11:47 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=3
    31                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=3
    39                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 12/10/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0004                     fsr             equ	4
    81     0004                     fsr0            equ	4
    82     0000                     indf            equ	0
    83     0000                     indf0           equ	0
    84     0002                     pc              equ	2
    85     0002                     pcl             equ	2
    86     000A                     pclath          equ	10
    87     0003                     status          equ	3
    88     0000                     INDF            equ	0	;# 
    89     0001                     TMR0            equ	1	;# 
    90     0002                     PCL             equ	2	;# 
    91     0003                     STATUS          equ	3	;# 
    92     0004                     FSR             equ	4	;# 
    93     0005                     PORTA           equ	5	;# 
    94     0006                     PORTB           equ	6	;# 
    95     0007                     PORTC           equ	7	;# 
    96     0008                     PORTD           equ	8	;# 
    97     0009                     PORTE           equ	9	;# 
    98     000A                     PCLATH          equ	10	;# 
    99     000B                     INTCON          equ	11	;# 
   100     000C                     PIR1            equ	12	;# 
   101     000D                     PIR2            equ	13	;# 
   102     000E                     TMR1            equ	14	;# 
   103     000E                     TMR1L           equ	14	;# 
   104     000F                     TMR1H           equ	15	;# 
   105     0010                     T1CON           equ	16	;# 
   106     0011                     TMR2            equ	17	;# 
   107     0012                     T2CON           equ	18	;# 
   108     0013                     SSPBUF          equ	19	;# 
   109     0014                     SSPCON          equ	20	;# 
   110     0015                     CCPR1           equ	21	;# 
   111     0015                     CCPR1L          equ	21	;# 
   112     0016                     CCPR1H          equ	22	;# 
   113     0017                     CCP1CON         equ	23	;# 
   114     0018                     RCSTA           equ	24	;# 
   115     0019                     TXREG           equ	25	;# 
   116     001A                     RCREG           equ	26	;# 
   117     001B                     CCPR2           equ	27	;# 
   118     001B                     CCPR2L          equ	27	;# 
   119     001C                     CCPR2H          equ	28	;# 
   120     001D                     CCP2CON         equ	29	;# 
   121     001E                     ADRESH          equ	30	;# 
   122     001F                     ADCON0          equ	31	;# 
   123     0081                     OPTION_REG      equ	129	;# 
   124     0085                     TRISA           equ	133	;# 
   125     0086                     TRISB           equ	134	;# 
   126     0087                     TRISC           equ	135	;# 
   127     0088                     TRISD           equ	136	;# 
   128     0089                     TRISE           equ	137	;# 
   129     008C                     PIE1            equ	140	;# 
   130     008D                     PIE2            equ	141	;# 
   131     008E                     PCON            equ	142	;# 
   132     0091                     SSPCON2         equ	145	;# 
   133     0092                     PR2             equ	146	;# 
   134     0093                     SSPADD          equ	147	;# 
   135     0094                     SSPSTAT         equ	148	;# 
   136     0098                     TXSTA           equ	152	;# 
   137     0099                     SPBRG           equ	153	;# 
   138     009C                     CMCON           equ	156	;# 
   139     009D                     CVRCON          equ	157	;# 
   140     009E                     ADRESL          equ	158	;# 
   141     009F                     ADCON1          equ	159	;# 
   142     010C                     EEDATA          equ	268	;# 
   143     010D                     EEADR           equ	269	;# 
   144     010E                     EEDATH          equ	270	;# 
   145     010F                     EEADRH          equ	271	;# 
   146     018C                     EECON1          equ	396	;# 
   147     018D                     EECON2          equ	397	;# 
   148     0000                     INDF            equ	0	;# 
   149     0001                     TMR0            equ	1	;# 
   150     0002                     PCL             equ	2	;# 
   151     0003                     STATUS          equ	3	;# 
   152     0004                     FSR             equ	4	;# 
   153     0005                     PORTA           equ	5	;# 
   154     0006                     PORTB           equ	6	;# 
   155     0007                     PORTC           equ	7	;# 
   156     0008                     PORTD           equ	8	;# 
   157     0009                     PORTE           equ	9	;# 
   158     000A                     PCLATH          equ	10	;# 
   159     000B                     INTCON          equ	11	;# 
   160     000C                     PIR1            equ	12	;# 
   161     000D                     PIR2            equ	13	;# 
   162     000E                     TMR1            equ	14	;# 
   163     000E                     TMR1L           equ	14	;# 
   164     000F                     TMR1H           equ	15	;# 
   165     0010                     T1CON           equ	16	;# 
   166     0011                     TMR2            equ	17	;# 
   167     0012                     T2CON           equ	18	;# 
   168     0013                     SSPBUF          equ	19	;# 
   169     0014                     SSPCON          equ	20	;# 
   170     0015                     CCPR1           equ	21	;# 
   171     0015                     CCPR1L          equ	21	;# 
   172     0016                     CCPR1H          equ	22	;# 
   173     0017                     CCP1CON         equ	23	;# 
   174     0018                     RCSTA           equ	24	;# 
   175     0019                     TXREG           equ	25	;# 
   176     001A                     RCREG           equ	26	;# 
   177     001B                     CCPR2           equ	27	;# 
   178     001B                     CCPR2L          equ	27	;# 
   179     001C                     CCPR2H          equ	28	;# 
   180     001D                     CCP2CON         equ	29	;# 
   181     001E                     ADRESH          equ	30	;# 
   182     001F                     ADCON0          equ	31	;# 
   183     0081                     OPTION_REG      equ	129	;# 
   184     0085                     TRISA           equ	133	;# 
   185     0086                     TRISB           equ	134	;# 
   186     0087                     TRISC           equ	135	;# 
   187     0088                     TRISD           equ	136	;# 
   188     0089                     TRISE           equ	137	;# 
   189     008C                     PIE1            equ	140	;# 
   190     008D                     PIE2            equ	141	;# 
   191     008E                     PCON            equ	142	;# 
   192     0091                     SSPCON2         equ	145	;# 
   193     0092                     PR2             equ	146	;# 
   194     0093                     SSPADD          equ	147	;# 
   195     0094                     SSPSTAT         equ	148	;# 
   196     0098                     TXSTA           equ	152	;# 
   197     0099                     SPBRG           equ	153	;# 
   198     009C                     CMCON           equ	156	;# 
   199     009D                     CVRCON          equ	157	;# 
   200     009E                     ADRESL          equ	158	;# 
   201     009F                     ADCON1          equ	159	;# 
   202     010C                     EEDATA          equ	268	;# 
   203     010D                     EEADR           equ	269	;# 
   204     010E                     EEDATH          equ	270	;# 
   205     010F                     EEADRH          equ	271	;# 
   206     018C                     EECON1          equ	396	;# 
   207     018D                     EECON2          equ	397	;# 
   208                           
   209                           	psect	idataBANK0
   210     0DAD                     __pidataBANK0:
   211                           
   212                           ;initializer for _showSpeed
   213     0DAD  34F4               	retlw	244
   214     0DAE  3401               	retlw	1
   215                           
   216                           ;initializer for _level
   217     0DAF  3401               	retlw	1
   218     0DB0  3400               	retlw	0
   219     0001                     _TMR0           set	1
   220     0008                     _PORTD          set	8
   221     000B                     _INTCONbits     set	11
   222     0034                     _RB4            set	52
   223     0039                     _RC1            set	57
   224     003D                     _RC5            set	61
   225     003C                     _RC4            set	60
   226     003B                     _RC3            set	59
   227     003A                     _RC2            set	58
   228     0038                     _RC0            set	56
   229     0033                     _RB3            set	51
   230     0032                     _RB2            set	50
   231     0031                     _RB1            set	49
   232     0030                     _RB0            set	48
   233     0043                     _RD3            set	67
   234     0042                     _RD2            set	66
   235     0041                     _RD1            set	65
   236     0040                     _RD0            set	64
   237     009F                     _ADCON1         set	159
   238     0081                     _OPTION_REGbits set	129
   239     0087                     _TRISC          set	135
   240     0088                     _TRISD          set	136
   241     0086                     _TRISB          set	134
   242     010C                     _EEDATA         set	268
   243     010D                     _EEADR          set	269
   244     018D                     _EECON2         set	397
   245     018C                     _EECON1bits     set	396
   246                           
   247                           	psect	strings
   248     0003                     __pstrings:
   249     0003                     stringtab:
   250     0003                     __stringtab:
   251                           
   252                           ;	String table - string pointers are 1 byte each
   253     0003  1BFF               	btfsc	btemp+1,7
   254     0004  280D               	ljmp	stringcode
   255     0005  1383               	bcf	3,7
   256     0006  187F               	btfsc	btemp+1,0
   257     0007  1783               	bsf	3,7
   258     0008  0800               	movf	0,w
   259     0009  0A84               	incf	4,f
   260     000A  1903               	skipnz
   261     000B  0AFF               	incf	btemp+1,f
   262     000C  0008               	return
   263     000D                     stringcode:
   264     000D                     stringdir:
   265     000D  3000               	movlw	high stringdir
   266     000E  008A               	movwf	10
   267     000F  0804               	movf	4,w
   268     0010  0A84               	incf	4,f
   269     0011  0782               	addwf	2,f
   270     0012                     __stringbase:
   271     0012  3400               	retlw	0
   272     0013                     __end_of__stringtab:
   273     0013                     STR_2:
   274     0013  3446               	retlw	70	;'F'
   275     0014  3469               	retlw	105	;'i'
   276     0015  3472               	retlw	114	;'r'
   277     0016  3473               	retlw	115	;'s'
   278     0017  3474               	retlw	116	;'t'
   279     0018  3420               	retlw	32	;' '
   280     0019  3470               	retlw	112	;'p'
   281     001A  3472               	retlw	114	;'r'
   282     001B  3465               	retlw	101	;'e'
   283     001C  3473               	retlw	115	;'s'
   284     001D  3473               	retlw	115	;'s'
   285     001E  3420               	retlw	32	;' '
   286     001F  3453               	retlw	83	;'S'
   287     0020  3454               	retlw	84	;'T'
   288     0021  3441               	retlw	65	;'A'
   289     0022  3452               	retlw	82	;'R'
   290     0023  3454               	retlw	84	;'T'
   291     0024  3400               	retlw	0
   292     0025                     STR_12:
   293     0025  3443               	retlw	67	;'C'
   294     0026  344F               	retlw	79	;'O'
   295     0027  344E               	retlw	78	;'N'
   296     0028  3447               	retlw	71	;'G'
   297     0029  3452               	retlw	82	;'R'
   298     002A  3441               	retlw	65	;'A'
   299     002B  3454               	retlw	84	;'T'
   300     002C  3455               	retlw	85	;'U'
   301     002D  344C               	retlw	76	;'L'
   302     002E  3441               	retlw	65	;'A'
   303     002F  3454               	retlw	84	;'T'
   304     0030  3449               	retlw	73	;'I'
   305     0031  344F               	retlw	79	;'O'
   306     0032  344E               	retlw	78	;'N'
   307     0033  3453               	retlw	83	;'S'
   308     0034  3421               	retlw	33	;'!'
   309     0035  3400               	retlw	0
   310     0036                     STR_13:
   311     0036  3447               	retlw	71	;'G'
   312     0037  3461               	retlw	97	;'a'
   313     0038  346D               	retlw	109	;'m'
   314     0039  3465               	retlw	101	;'e'
   315     003A  3420               	retlw	32	;' '
   316     003B  3463               	retlw	99	;'c'
   317     003C  346F               	retlw	111	;'o'
   318     003D  346D               	retlw	109	;'m'
   319     003E  3470               	retlw	112	;'p'
   320     003F  346C               	retlw	108	;'l'
   321     0040  3465               	retlw	101	;'e'
   322     0041  3474               	retlw	116	;'t'
   323     0042  3465               	retlw	101	;'e'
   324     0043  3464               	retlw	100	;'d'
   325     0044  342E               	retlw	46	;'.'
   326     0045  3400               	retlw	0
   327     0046                     STR_9:
   328     0046  3454               	retlw	84	;'T'
   329     0047  3468               	retlw	104	;'h'
   330     0048  3465               	retlw	101	;'e'
   331     0049  3420               	retlw	32	;' '
   332     004A  344D               	retlw	77	;'M'
   333     004B  3465               	retlw	101	;'e'
   334     004C  346D               	retlw	109	;'m'
   335     004D  346F               	retlw	111	;'o'
   336     004E  3472               	retlw	114	;'r'
   337     004F  3479               	retlw	121	;'y'
   338     0050  3420               	retlw	32	;' '
   339     0051  3447               	retlw	71	;'G'
   340     0052  3461               	retlw	97	;'a'
   341     0053  346D               	retlw	109	;'m'
   342     0054  3465               	retlw	101	;'e'
   343     0055  3400               	retlw	0
   344     0056                     STR_7:
   345     0056  344E               	retlw	78	;'N'
   346     0057  3445               	retlw	69	;'E'
   347     0058  3457               	retlw	87	;'W'
   348     0059  3420               	retlw	32	;' '
   349     005A  3452               	retlw	82	;'R'
   350     005B  3445               	retlw	69	;'E'
   351     005C  3443               	retlw	67	;'C'
   352     005D  344F               	retlw	79	;'O'
   353     005E  3452               	retlw	82	;'R'
   354     005F  3444               	retlw	68	;'D'
   355     0060  3421               	retlw	33	;'!'
   356     0061  3400               	retlw	0
   357     0062                     STR_10:
   358     0062  3450               	retlw	80	;'P'
   359     0063  3472               	retlw	114	;'r'
   360     0064  3465               	retlw	101	;'e'
   361     0065  3473               	retlw	115	;'s'
   362     0066  3473               	retlw	115	;'s'
   363     0067  3420               	retlw	32	;' '
   364     0068  3453               	retlw	83	;'S'
   365     0069  3454               	retlw	84	;'T'
   366     006A  3441               	retlw	65	;'A'
   367     006B  3452               	retlw	82	;'R'
   368     006C  3454               	retlw	84	;'T'
   369     006D  3400               	retlw	0
   370     006E                     STR_11:
   371     006E  3447               	retlw	71	;'G'
   372     006F  3475               	retlw	117	;'u'
   373     0070  3465               	retlw	101	;'e'
   374     0071  3473               	retlw	115	;'s'
   375     0072  3473               	retlw	115	;'s'
   376     0073  3420               	retlw	32	;' '
   377     0074  346E               	retlw	110	;'n'
   378     0075  346F               	retlw	111	;'o'
   379     0076  3477               	retlw	119	;'w'
   380     0077  3421               	retlw	33	;'!'
   381     0078  3400               	retlw	0
   382     0079                     STR_15:
   383     0079  344E               	retlw	78	;'N'
   384     007A  3465               	retlw	101	;'e'
   385     007B  3478               	retlw	120	;'x'
   386     007C  3474               	retlw	116	;'t'
   387     007D  3420               	retlw	32	;' '
   388     007E  346C               	retlw	108	;'l'
   389     007F  3465               	retlw	101	;'e'
   390     0080  3476               	retlw	118	;'v'
   391     0081  3465               	retlw	101	;'e'
   392     0082  346C               	retlw	108	;'l'
   393     0083  3400               	retlw	0
   394     0084                     STR_14:
   395     0084  3443               	retlw	67	;'C'
   396     0085  344F               	retlw	79	;'O'
   397     0086  3452               	retlw	82	;'R'
   398     0087  3452               	retlw	82	;'R'
   399     0088  3445               	retlw	69	;'E'
   400     0089  3443               	retlw	67	;'C'
   401     008A  3454               	retlw	84	;'T'
   402     008B  3421               	retlw	33	;'!'
   403     008C  3400               	retlw	0
   404     008D                     STR_8:
   405     008D  3453               	retlw	83	;'S'
   406     008E  3463               	retlw	99	;'c'
   407     008F  346F               	retlw	111	;'o'
   408     0090  3472               	retlw	114	;'r'
   409     0091  3465               	retlw	101	;'e'
   410     0092  343A               	retlw	58	;':'
   411     0093  3420               	retlw	32	;' '
   412     0094  3400               	retlw	0
   413     0095                     STR_5:
   414     0095  3420               	retlw	32	;' '
   415     0096  344C               	retlw	76	;'L'
   416     0097  3465               	retlw	101	;'e'
   417     0098  3476               	retlw	118	;'v'
   418     0099  3465               	retlw	101	;'e'
   419     009A  346C               	retlw	108	;'l'
   420     009B  343A               	retlw	58	;':'
   421     009C  3400               	retlw	0
   422     009D                     STR_16:
   423     009D  3457               	retlw	87	;'W'
   424     009E  3452               	retlw	82	;'R'
   425     009F  344F               	retlw	79	;'O'
   426     00A0  344E               	retlw	78	;'N'
   427     00A1  3447               	retlw	71	;'G'
   428     00A2  3421               	retlw	33	;'!'
   429     00A3  3400               	retlw	0
   430     00A4                     STR_1:
   431     00A4  3445               	retlw	69	;'E'
   432     00A5  3452               	retlw	82	;'R'
   433     00A6  3452               	retlw	82	;'R'
   434     00A7  344F               	retlw	79	;'O'
   435     00A8  3452               	retlw	82	;'R'
   436     00A9  3421               	retlw	33	;'!'
   437     00AA  3400               	retlw	0
   438     00AB                     STR_4:
   439     00AB  3453               	retlw	83	;'S'
   440     00AC  3463               	retlw	99	;'c'
   441     00AD  346F               	retlw	111	;'o'
   442     00AE  3472               	retlw	114	;'r'
   443     00AF  3465               	retlw	101	;'e'
   444     00B0  343A               	retlw	58	;':'
   445     00B1  3400               	retlw	0
   446     00B2                     STR_6:
   447     00B2  3448               	retlw	72	;'H'
   448     00B3  3469               	retlw	105	;'i'
   449     00B4  3467               	retlw	103	;'g'
   450     00B5  3468               	retlw	104	;'h'
   451     00B6  343A               	retlw	58	;':'
   452     00B7  3400               	retlw	0
   453     00B8                     STR_3:
   454     00B8  3425               	retlw	37	;'%'
   455     00B9  3475               	retlw	117	;'u'
   456     00BA  3400               	retlw	0
   457     008D                     STR_17          equ	STR_8
   458                           
   459                           	psect	cinit
   460     07D3                     start_initialization:	
   461                           ; #config settings
   462                           
   463     07D3                     __initialization:
   464                           
   465                           ; Initialize objects allocated to BANK0
   466     07D3  120A  158A  25AD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   467     07D8  00E4               	movwf	__pdataBANK0& (0+127)
   468     07D9  120A  158A  25AE  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   469     07DE  00E5               	movwf	(__pdataBANK0+1)& (0+127)
   470     07DF  120A  158A  25AF  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   471     07E4  00E6               	movwf	(__pdataBANK0+2)& (0+127)
   472     07E5  120A  158A  25B0  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   473     07EA  00E7               	movwf	(__pdataBANK0+3)& (0+127)
   474                           
   475                           ; Clear objects allocated to BANK1
   476     07EB  1383               	bcf	3,7	;select IRP bank0
   477     07EC  30A0               	movlw	low __pbssBANK1
   478     07ED  0084               	movwf	4
   479     07EE  30CA               	movlw	low (__pbssBANK1+42)
   480     07EF  120A  158A  25B1  120A  118A  	fcall	clear_ram0
   481                           
   482                           ; Clear objects allocated to BANK0
   483     07F4  3054               	movlw	low __pbssBANK0
   484     07F5  0084               	movwf	4
   485     07F6  3064               	movlw	low (__pbssBANK0+16)
   486     07F7  120A  158A  25B1  120A  118A  	fcall	clear_ram0
   487     07FC                     end_of_initialization:	
   488                           ;End of C runtime variable initialization code
   489                           
   490     07FC                     __end_of__initialization:
   491     07FC  0183               	clrf	3
   492     07FD  120A  118A  2E7F   	ljmp	_main	;jump to C main() function
   493                           
   494                           	psect	bssBANK0
   495     0054                     __pbssBANK0:
   496     0054                     _width:
   497     0054                     	ds	2
   498     0056                     _prec:
   499     0056                     	ds	2
   500     0058                     _highScore:
   501     0058                     	ds	2
   502     005A                     _inputIndex:
   503     005A                     	ds	2
   504     005C                     _score:
   505     005C                     	ds	2
   506     005E                     _flags:
   507     005E                     	ds	1
   508     005F                     _gameState:
   509     005F                     	ds	1
   510     0060                     _seed:
   511     0060                     	ds	4
   512                           
   513                           	psect	dataBANK0
   514     0064                     __pdataBANK0:
   515     0064                     _showSpeed:
   516     0064                     	ds	2
   517     0066                     _level:
   518     0066                     	ds	2
   519                           
   520                           	psect	bssBANK1
   521     00A0                     __pbssBANK1:
   522     00A0                     _dbuf:
   523     00A0                     	ds	32
   524     00C0                     _sequence:
   525     00C0                     	ds	10
   526                           
   527                           	psect	clrtext
   528     0DB1                     clear_ram0:	
   529                           ;	Called with FSR containing the base address, and
   530                           ;	W with the last address+1
   531                           
   532     0DB1  0064               	clrwdt	;clear the watchdog before getting into this loop
   533     0DB2                     clrloop0:
   534     0DB2  0180               	clrf	0	;clear RAM location pointed to by FSR
   535     0DB3  0A84               	incf	4,f	;increment pointer
   536     0DB4  0604               	xorwf	4,w	;XOR with final address
   537     0DB5  1903               	btfsc	3,2	;have we reached the end yet?
   538     0DB6  3400               	retlw	0	;all done for this memory range, return
   539     0DB7  0604               	xorwf	4,w	;XOR again to restore value
   540     0DB8  2DB2               	goto	clrloop0	;do the next byte
   541                           
   542                           	psect	cstackCOMMON
   543     0070                     __pcstackCOMMON:
   544     0070                     ?_Lcd_Clear:
   545     0070                     ?_srand:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_putch:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_delay_ms:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_generateSequence:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_showSequence:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?_getUserInput:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ?_checkInvalidButtonPress:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?_Lcd_Command:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?_Lcd_Char:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_Lcd_Init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_updateScoreDisplay:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ?_eeprom_read:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ?_eeprom_write:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ?_initGame:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ?_updateHighScore:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ?_waitForStart:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ?_resetGame:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     ?_main:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ?_fputc:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ?___lwdiv:	
   603                           ; 2 bytes @ 0x0
   604                           
   605     0070                     ?___lwmod:	
   606                           ; 2 bytes @ 0x0
   607                           
   608     0070                     ?___lmul:	
   609                           ; 2 bytes @ 0x0
   610                           
   611     0070                     eeprom_read@address:	
   612                           ; 4 bytes @ 0x0
   613                           
   614     0070                     eeprom_write@data:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     putch@c:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     delay_ms@ms:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ___lwdiv@divisor:	
   624                           ; 2 bytes @ 0x0
   625                           
   626     0070                     ___lwmod@divisor:	
   627                           ; 2 bytes @ 0x0
   628                           
   629     0070                     fputc@c:	
   630                           ; 2 bytes @ 0x0
   631                           
   632     0070                     srand@s:	
   633                           ; 2 bytes @ 0x0
   634                           
   635     0070                     ___lmul@multiplier:	
   636                           ; 2 bytes @ 0x0
   637                           
   638     0070                     ??_putch:	
   639                           ; 4 bytes @ 0x0
   640                           
   641     0070                     ??_eeprom_read:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ??_resetGame:	
   645                           ; 1 bytes @ 0x0
   646                           
   647                           
   648                           ; 1 bytes @ 0x0
   649     0070                     	ds	1
   650     0071                     eeprom_write@address:
   651     0071                     ??_eeprom_write:	
   652                           ; 1 bytes @ 0x1
   653                           
   654                           
   655                           ; 1 bytes @ 0x1
   656     0071                     	ds	1
   657     0072                     ___lwdiv@dividend:
   658     0072                     ___lwmod@dividend:	
   659                           ; 2 bytes @ 0x2
   660                           
   661     0072                     fputc@fp:	
   662                           ; 2 bytes @ 0x2
   663                           
   664     0072                     ??_srand:	
   665                           ; 2 bytes @ 0x2
   666                           
   667     0072                     ??_delay_ms:	
   668                           ; 1 bytes @ 0x2
   669                           
   670     0072                     ??_initGame:	
   671                           ; 1 bytes @ 0x2
   672                           
   673                           
   674                           ; 1 bytes @ 0x2
   675     0072                     	ds	2
   676     0074                     initGame@storedScore:
   677     0074                     ___lwmod@counter:	
   678                           ; 1 bytes @ 0x4
   679                           
   680     0074                     ___lwdiv@quotient:	
   681                           ; 1 bytes @ 0x4
   682                           
   683     0074                     ___lmul@multiplicand:	
   684                           ; 2 bytes @ 0x4
   685                           
   686     0074                     ??_fputc:	
   687                           ; 4 bytes @ 0x4
   688                           
   689     0074                     ??_showSequence:	
   690                           ; 1 bytes @ 0x4
   691                           
   692     0074                     ??_getUserInput:	
   693                           ; 1 bytes @ 0x4
   694                           
   695     0074                     ??_Lcd_Command:	
   696                           ; 1 bytes @ 0x4
   697                           
   698     0074                     ??_Lcd_Char:	
   699                           ; 1 bytes @ 0x4
   700                           
   701     0074                     ??___lwdiv:	
   702                           ; 1 bytes @ 0x4
   703                           
   704     0074                     ??___lwmod:	
   705                           ; 1 bytes @ 0x4
   706                           
   707                           
   708                           ; 1 bytes @ 0x4
   709     0074                     	ds	1
   710     0075                     Lcd_Command@cmd:
   711     0075                     Lcd_Char@data:	
   712                           ; 1 bytes @ 0x5
   713                           
   714                           
   715                           ; 1 bytes @ 0x5
   716     0075                     	ds	1
   717     0076                     ?_Lcd_Set_Cursor:
   718     0076                     ?_Lcd_String:	
   719                           ; 1 bytes @ 0x6
   720                           
   721     0076                     Lcd_Set_Cursor@column:	
   722                           ; 1 bytes @ 0x6
   723                           
   724     0076                     ___lwdiv@counter:	
   725                           ; 1 bytes @ 0x6
   726                           
   727     0076                     showSequence@i:	
   728                           ; 1 bytes @ 0x6
   729                           
   730     0076                     Lcd_String@str:	
   731                           ; 2 bytes @ 0x6
   732                           
   733     0076                     ??_Lcd_Clear:	
   734                           ; 2 bytes @ 0x6
   735                           
   736     0076                     ??_Lcd_Init:	
   737                           ; 1 bytes @ 0x6
   738                           
   739                           
   740                           ; 1 bytes @ 0x6
   741     0076                     	ds	1
   742     0077                     Lcd_Set_Cursor@row:
   743     0077                     ??_Lcd_Set_Cursor:	
   744                           ; 1 bytes @ 0x7
   745                           
   746                           
   747                           ; 1 bytes @ 0x7
   748     0077                     	ds	1
   749     0078                     Lcd_Set_Cursor@pos:
   750     0078                     ??_Lcd_String:	
   751                           ; 1 bytes @ 0x8
   752                           
   753     0078                     ??___lmul:	
   754                           ; 1 bytes @ 0x8
   755                           
   756                           
   757                           ; 1 bytes @ 0x8
   758     0078                     	ds	1
   759     0079                     ___lmul@product:
   760     0079                     ??_checkInvalidButtonPress:	
   761                           ; 4 bytes @ 0x9
   762                           
   763     0079                     ??_waitForStart:	
   764                           ; 1 bytes @ 0x9
   765                           
   766                           
   767                           ; 1 bytes @ 0x9
   768     0079                     	ds	4
   769     007D                     vfprintf@cfmt:
   770     007D                     ??_vfprintf:	
   771                           ; 1 bytes @ 0xD
   772                           
   773     007D                     ??_generateSequence:	
   774                           ; 1 bytes @ 0xD
   775                           
   776                           
   777                           ; 1 bytes @ 0xD
   778     007D                     	ds	1
   779     007E                     ??_Lcd_Number:
   780     007E                     ??_updateScoreDisplay:	
   781                           ; 1 bytes @ 0xE
   782                           
   783                           
   784                           	psect	cstackBANK0
   785     0020                     __pcstackBANK0:	
   786                           ; 1 bytes @ 0xE
   787                           
   788     0020                     ?_vfpfcnvrt:
   789     0020                     ?_rand:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0020                     vfpfcnvrt@fp:	
   793                           ; 2 bytes @ 0x0
   794                           
   795                           
   796                           ; 2 bytes @ 0x0
   797     0020                     	ds	2
   798     0022                     vfpfcnvrt@fmt:
   799     0022                     ??_rand:	
   800                           ; 1 bytes @ 0x2
   801                           
   802                           
   803                           ; 1 bytes @ 0x2
   804     0022                     	ds	1
   805     0023                     vfpfcnvrt@ap:
   806                           
   807                           ; 1 bytes @ 0x3
   808     0023                     	ds	1
   809     0024                     ??_vfpfcnvrt:
   810                           
   811                           ; 1 bytes @ 0x4
   812     0024                     	ds	2
   813     0026                     generateSequence@i:
   814     0026                     vfpfcnvrt@convarg:	
   815                           ; 2 bytes @ 0x6
   816                           
   817                           
   818                           ; 4 bytes @ 0x6
   819     0026                     	ds	4
   820     002A                     vfpfcnvrt@cp:
   821                           
   822                           ; 1 bytes @ 0xA
   823     002A                     	ds	1
   824     002B                     vfpfcnvrt@c:
   825                           
   826                           ; 1 bytes @ 0xB
   827     002B                     	ds	1
   828     002C                     ?_vfprintf:
   829     002C                     vfprintf@fp:	
   830                           ; 2 bytes @ 0xC
   831                           
   832                           
   833                           ; 2 bytes @ 0xC
   834     002C                     	ds	2
   835     002E                     vfprintf@fmt:
   836                           
   837                           ; 1 bytes @ 0xE
   838     002E                     	ds	1
   839     002F                     vfprintf@ap:
   840                           
   841                           ; 1 bytes @ 0xF
   842     002F                     	ds	1
   843     0030                     ?_sprintf:
   844     0030                     sprintf@s:	
   845                           ; 2 bytes @ 0x10
   846                           
   847                           
   848                           ; 1 bytes @ 0x10
   849     0030                     	ds	1
   850     0031                     sprintf@fmt:
   851                           
   852                           ; 1 bytes @ 0x11
   853     0031                     	ds	3
   854     0034                     ??_sprintf:
   855                           
   856                           ; 1 bytes @ 0x14
   857     0034                     	ds	1
   858     0035                     sprintf@ap:
   859                           
   860                           ; 1 bytes @ 0x15
   861     0035                     	ds	1
   862     0036                     sprintf@f:
   863                           
   864                           ; 11 bytes @ 0x16
   865     0036                     	ds	11
   866     0041                     ?_Lcd_Number:
   867     0041                     Lcd_Number@number:	
   868                           ; 1 bytes @ 0x21
   869                           
   870                           
   871                           ; 2 bytes @ 0x21
   872     0041                     	ds	2
   873     0043                     Lcd_Number@buffer:
   874                           
   875                           ; 10 bytes @ 0x23
   876     0043                     	ds	10
   877     004D                     ??_updateHighScore:
   878                           
   879                           ; 1 bytes @ 0x2D
   880     004D                     	ds	2
   881     004F                     _updateHighScore$227:
   882                           
   883                           ; 2 bytes @ 0x2F
   884     004F                     	ds	2
   885     0051                     updateHighScore@scoreToSave:
   886                           
   887                           ; 1 bytes @ 0x31
   888     0051                     	ds	1
   889     0052                     ??_main:
   890                           
   891                           ; 1 bytes @ 0x32
   892     0052                     	ds	2
   893                           
   894                           	psect	maintext
   895     067F                     __pmaintext:	
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 307 in file "proje.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : B00/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0
   917 ;;      Temps:          0       2       0       0       0
   918 ;;      Totals:         0       2       0       0       0
   919 ;;Total ram usage:        2 bytes
   920 ;; Hardware stack levels required when called: 7
   921 ;; This function calls:
   922 ;;		_Lcd_Clear
   923 ;;		_Lcd_Init
   924 ;;		_Lcd_Number
   925 ;;		_Lcd_Set_Cursor
   926 ;;		_Lcd_String
   927 ;;		_delay_ms
   928 ;;		_generateSequence
   929 ;;		_getUserInput
   930 ;;		_initGame
   931 ;;		_resetGame
   932 ;;		_showSequence
   933 ;;		_srand
   934 ;;		_updateHighScore
   935 ;;		_updateScoreDisplay
   936 ;;		_waitForStart
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942     067F                     _main:	
   943                           ;psect for function _main
   944                           
   945     067F                     l1846:	
   946                           ;incstack = 0
   947                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   948                           
   949                           
   950                           ;proje.c: 308:     TRISB = 0xFF;
   951     067F  30FF               	movlw	255
   952     0680  1683               	bsf	3,5	;RP0=1, select bank1
   953     0681  1303               	bcf	3,6	;RP1=0, select bank1
   954     0682  0086               	movwf	6	;volatile
   955     0683                     l1848:
   956                           
   957                           ;proje.c: 309:     TRISD = 0x00;
   958     0683  0188               	clrf	8	;volatile
   959                           
   960                           ;proje.c: 310:     TRISC = 0x00;
   961     0684  0187               	clrf	7	;volatile
   962                           
   963                           ;proje.c: 311:     PORTD = 0x00;
   964     0685  1283               	bcf	3,5	;RP0=0, select bank0
   965     0686  1303               	bcf	3,6	;RP1=0, select bank0
   966     0687  0188               	clrf	8	;volatile
   967     0688                     l1850:
   968                           
   969                           ;proje.c: 312:     OPTION_REGbits.nRBPU = 1;
   970     0688  1683               	bsf	3,5	;RP0=1, select bank1
   971     0689  1303               	bcf	3,6	;RP1=0, select bank1
   972     068A  1781               	bsf	1,7	;volatile
   973     068B                     l1852:
   974                           
   975                           ;proje.c: 313:     ADCON1 = 0x06;
   976     068B  3006               	movlw	6
   977     068C  009F               	movwf	31	;volatile
   978     068D                     l1854:
   979                           
   980                           ;proje.c: 314:     Lcd_Init();
   981     068D  120A  158A  2704  120A  118A  	fcall	_Lcd_Init
   982     0692                     l1856:
   983                           
   984                           ;proje.c: 315:     Lcd_Clear();
   985     0692  120A  158A  25E1  120A  118A  	fcall	_Lcd_Clear
   986     0697                     l1858:
   987                           
   988                           ;proje.c: 316:     srand(TMR0);
   989     0697  1283               	bcf	3,5	;RP0=0, select bank0
   990     0698  1303               	bcf	3,6	;RP1=0, select bank0
   991     0699  0801               	movf	1,w	;volatile
   992     069A  00D2               	movwf	??_main
   993     069B  01D3               	clrf	??_main+1
   994     069C  0852               	movf	??_main,w
   995     069D  00F0               	movwf	srand@s
   996     069E  0853               	movf	??_main+1,w
   997     069F  00F1               	movwf	srand@s+1
   998     06A0  120A  158A  25C5  120A  118A  	fcall	_srand
   999     06A5                     l1860:
  1000                           
  1001                           ;proje.c: 317:     initGame();
  1002     06A5  120A  158A  264F  120A  118A  	fcall	_initGame
  1003     06AA                     l1862:
  1004                           
  1005                           ;proje.c: 320:         waitForStart();
  1006     06AA  120A  118A  2153  120A  118A  	fcall	_waitForStart
  1007                           
  1008                           ;proje.c: 321:         while (gameState == GAME_RUNNING) {
  1009     06AF  2FC8               	goto	l1914
  1010     06B0                     l1864:
  1011                           
  1012                           ;proje.c: 322:             updateScoreDisplay();
  1013     06B0  120A  118A  2101  120A  118A  	fcall	_updateScoreDisplay
  1014     06B5                     l1866:
  1015                           
  1016                           ;proje.c: 323:             delay_ms(1000);
  1017     06B5  30E8               	movlw	232
  1018     06B6  00F0               	movwf	delay_ms@ms
  1019     06B7  3003               	movlw	3
  1020     06B8  00F1               	movwf	delay_ms@ms+1
  1021     06B9  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1022     06BE                     l1868:
  1023                           
  1024                           ;proje.c: 324:             generateSequence();
  1025     06BE  120A  158A  2694  120A  118A  	fcall	_generateSequence
  1026     06C3                     l1870:
  1027                           
  1028                           ;proje.c: 325:             showSequence();
  1029     06C3  120A  118A  2281  120A  118A  	fcall	_showSequence
  1030     06C8                     l1872:
  1031                           
  1032                           ;proje.c: 326:             delay_ms(300);
  1033     06C8  302C               	movlw	44
  1034     06C9  00F0               	movwf	delay_ms@ms
  1035     06CA  3001               	movlw	1
  1036     06CB  00F1               	movwf	delay_ms@ms+1
  1037     06CC  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1038     06D1                     l1874:
  1039                           
  1040                           ;proje.c: 327:             Lcd_Clear();
  1041     06D1  120A  158A  25E1  120A  118A  	fcall	_Lcd_Clear
  1042     06D6                     l1876:
  1043                           
  1044                           ;proje.c: 328:             Lcd_Set_Cursor(1, 1);
  1045     06D6  01F6               	clrf	Lcd_Set_Cursor@column
  1046     06D7  0AF6               	incf	Lcd_Set_Cursor@column,f
  1047     06D8  3001               	movlw	1
  1048     06D9  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1049                           
  1050                           ;proje.c: 329:             Lcd_String("Guess now!");
  1051     06DE  305C               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1052     06DF  00F6               	movwf	Lcd_String@str
  1053     06E0  3080               	movlw	128
  1054     06E1  00F7               	movwf	Lcd_String@str+1
  1055     06E2  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1056     06E7                     l1878:
  1057                           
  1058                           ;proje.c: 330:             delay_ms(450);
  1059     06E7  30C2               	movlw	194
  1060     06E8  00F0               	movwf	delay_ms@ms
  1061     06E9  3001               	movlw	1
  1062     06EA  00F1               	movwf	delay_ms@ms+1
  1063     06EB  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1064     06F0                     l1880:
  1065                           
  1066                           ;proje.c: 331:             if (getUserInput()) {
  1067     06F0  120A  118A  24FD  120A  118A  	fcall	_getUserInput
  1068     06F5  3A00               	xorlw	0
  1069     06F6  1903               	skipnz
  1070     06F7  2EF9               	goto	u2311
  1071     06F8  2EFA               	goto	u2310
  1072     06F9                     u2311:
  1073     06F9  2F8C               	goto	l1904
  1074     06FA                     u2310:
  1075     06FA                     l1882:
  1076                           
  1077                           ;proje.c: 332:                 score += level;
  1078     06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1079     06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1080     06FC  0866               	movf	_level,w
  1081     06FD  07DC               	addwf	_score,f
  1082     06FE  1803               	skipnc
  1083     06FF  0ADD               	incf	_score+1,f
  1084     0700  0867               	movf	_level+1,w
  1085     0701  07DD               	addwf	_score+1,f
  1086                           
  1087                           ;proje.c: 333:                 level++;
  1088     0702  3001               	movlw	1
  1089     0703  07E6               	addwf	_level,f
  1090     0704  1803               	skipnc
  1091     0705  0AE7               	incf	_level+1,f
  1092     0706  3000               	movlw	0
  1093     0707  07E7               	addwf	_level+1,f
  1094                           
  1095                           ;proje.c: 334:                 if (showSpeed > 100)
  1096     0708  3000               	movlw	0
  1097     0709  0265               	subwf	_showSpeed+1,w
  1098     070A  3065               	movlw	101
  1099     070B  1903               	skipnz
  1100     070C  0264               	subwf	_showSpeed,w
  1101     070D  1C03               	skipc
  1102     070E  2F10               	goto	u2321
  1103     070F  2F11               	goto	u2320
  1104     0710                     u2321:
  1105     0710  2F17               	goto	l224
  1106     0711                     u2320:
  1107     0711                     l1884:
  1108                           
  1109                           ;proje.c: 335:                     showSpeed -= 50;
  1110     0711  3032               	movlw	50
  1111     0712  02E4               	subwf	_showSpeed,f
  1112     0713  3000               	movlw	0
  1113     0714  1C03               	skipc
  1114     0715  03E5               	decf	_showSpeed+1,f
  1115     0716  02E5               	subwf	_showSpeed+1,f
  1116     0717                     l224:
  1117                           
  1118                           ;proje.c: 336:                 if (level > 10) {
  1119     0717  3000               	movlw	0
  1120     0718  0267               	subwf	_level+1,w
  1121     0719  300B               	movlw	11
  1122     071A  1903               	skipnz
  1123     071B  0266               	subwf	_level,w
  1124     071C  1C03               	skipc
  1125     071D  2F1F               	goto	u2331
  1126     071E  2F20               	goto	u2330
  1127     071F                     u2331:
  1128     071F  2F5B               	goto	l1896
  1129     0720                     u2330:
  1130     0720                     l1886:
  1131                           
  1132                           ;proje.c: 337:                     Lcd_Clear();
  1133     0720  120A  158A  25E1  120A  118A  	fcall	_Lcd_Clear
  1134                           
  1135                           ;proje.c: 338:                     Lcd_Set_Cursor(1, 1);
  1136     0725  01F6               	clrf	Lcd_Set_Cursor@column
  1137     0726  0AF6               	incf	Lcd_Set_Cursor@column,f
  1138     0727  3001               	movlw	1
  1139     0728  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1140     072D                     l1888:
  1141                           
  1142                           ;proje.c: 339:                     Lcd_String("CONGRATULATIONS!");
  1143     072D  3013               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1144     072E  00F6               	movwf	Lcd_String@str
  1145     072F  3080               	movlw	128
  1146     0730  00F7               	movwf	Lcd_String@str+1
  1147     0731  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1148     0736                     l1890:
  1149                           
  1150                           ;proje.c: 340:                     Lcd_Set_Cursor(2, 1);
  1151     0736  01F6               	clrf	Lcd_Set_Cursor@column
  1152     0737  0AF6               	incf	Lcd_Set_Cursor@column,f
  1153     0738  3002               	movlw	2
  1154     0739  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1155                           
  1156                           ;proje.c: 341:                     Lcd_String("Game completed.");
  1157     073E  3024               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1158     073F  00F6               	movwf	Lcd_String@str
  1159     0740  3080               	movlw	128
  1160     0741  00F7               	movwf	Lcd_String@str+1
  1161     0742  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1162     0747                     l1892:
  1163                           
  1164                           ;proje.c: 342:                     delay_ms(3000);
  1165     0747  30B8               	movlw	184
  1166     0748  00F0               	movwf	delay_ms@ms
  1167     0749  300B               	movlw	11
  1168     074A  00F1               	movwf	delay_ms@ms+1
  1169     074B  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1170     0750                     l1894:
  1171                           
  1172                           ;proje.c: 343:                     updateHighScore();
  1173     0750  120A  118A  2216  120A  118A  	fcall	_updateHighScore
  1174                           
  1175                           ;proje.c: 344:                     resetGame();
  1176     0755  120A  158A  25D2  120A  118A  	fcall	_resetGame
  1177                           
  1178                           ;proje.c: 345:                     break;
  1179     075A  2EAA               	goto	l1862
  1180     075B                     l1896:
  1181                           
  1182                           ;proje.c: 347:                 Lcd_Clear();
  1183     075B  120A  158A  25E1  120A  118A  	fcall	_Lcd_Clear
  1184                           
  1185                           ;proje.c: 348:                 Lcd_Set_Cursor(1, 1);
  1186     0760  01F6               	clrf	Lcd_Set_Cursor@column
  1187     0761  0AF6               	incf	Lcd_Set_Cursor@column,f
  1188     0762  3001               	movlw	1
  1189     0763  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1190     0768                     l1898:
  1191                           
  1192                           ;proje.c: 349:                 Lcd_String("CORRECT!");
  1193     0768  3072               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1194     0769  00F6               	movwf	Lcd_String@str
  1195     076A  3080               	movlw	128
  1196     076B  00F7               	movwf	Lcd_String@str+1
  1197     076C  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1198     0771                     l1900:
  1199                           
  1200                           ;proje.c: 350:                 Lcd_Set_Cursor(2, 1);
  1201     0771  01F6               	clrf	Lcd_Set_Cursor@column
  1202     0772  0AF6               	incf	Lcd_Set_Cursor@column,f
  1203     0773  3002               	movlw	2
  1204     0774  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1205                           
  1206                           ;proje.c: 351:                 Lcd_String("Next level");
  1207     0779  3067               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1208     077A  00F6               	movwf	Lcd_String@str
  1209     077B  3080               	movlw	128
  1210     077C  00F7               	movwf	Lcd_String@str+1
  1211     077D  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1212     0782                     l1902:
  1213                           
  1214                           ;proje.c: 352:                 delay_ms(1000);
  1215     0782  30E8               	movlw	232
  1216     0783  00F0               	movwf	delay_ms@ms
  1217     0784  3003               	movlw	3
  1218     0785  00F1               	movwf	delay_ms@ms+1
  1219     0786  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1220                           
  1221                           ;proje.c: 353:             } else {
  1222     078B  2FC8               	goto	l1914
  1223     078C                     l1904:
  1224                           
  1225                           ;proje.c: 354:                 Lcd_Clear();
  1226     078C  120A  158A  25E1  120A  118A  	fcall	_Lcd_Clear
  1227                           
  1228                           ;proje.c: 355:                 Lcd_Set_Cursor(1, 1);
  1229     0791  01F6               	clrf	Lcd_Set_Cursor@column
  1230     0792  0AF6               	incf	Lcd_Set_Cursor@column,f
  1231     0793  3001               	movlw	1
  1232     0794  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1233     0799                     l1906:
  1234                           
  1235                           ;proje.c: 356:                 Lcd_String("WRONG!");
  1236     0799  308B               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1237     079A  00F6               	movwf	Lcd_String@str
  1238     079B  3080               	movlw	128
  1239     079C  00F7               	movwf	Lcd_String@str+1
  1240     079D  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1241     07A2                     l1908:
  1242                           
  1243                           ;proje.c: 357:                 Lcd_Set_Cursor(2, 1);
  1244     07A2  01F6               	clrf	Lcd_Set_Cursor@column
  1245     07A3  0AF6               	incf	Lcd_Set_Cursor@column,f
  1246     07A4  3002               	movlw	2
  1247     07A5  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1248                           
  1249                           ;proje.c: 358:                 Lcd_String("Score: ");
  1250     07AA  307B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1251     07AB  00F6               	movwf	Lcd_String@str
  1252     07AC  3080               	movlw	128
  1253     07AD  00F7               	movwf	Lcd_String@str+1
  1254     07AE  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1255                           
  1256                           ;proje.c: 359:                 Lcd_Number(score);
  1257     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1258     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1259     07B5  085D               	movf	_score+1,w
  1260     07B6  00C2               	movwf	Lcd_Number@number+1
  1261     07B7  085C               	movf	_score,w
  1262     07B8  00C1               	movwf	Lcd_Number@number
  1263     07B9  120A  158A  2636  120A  118A  	fcall	_Lcd_Number
  1264     07BE                     l1910:
  1265                           
  1266                           ;proje.c: 360:                 delay_ms(2000);
  1267     07BE  30D0               	movlw	208
  1268     07BF  00F0               	movwf	delay_ms@ms
  1269     07C0  3007               	movlw	7
  1270     07C1  00F1               	movwf	delay_ms@ms+1
  1271     07C2  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1272     07C7  2F50               	goto	l1894
  1273     07C8                     l1914:
  1274                           
  1275                           ;proje.c: 321:         while (gameState == GAME_RUNNING) {
  1276     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1277     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1278     07CA  035F               	decf	_gameState,w
  1279     07CB  1903               	btfsc	3,2
  1280     07CC  2FCE               	goto	u2341
  1281     07CD  2FCF               	goto	u2340
  1282     07CE                     u2341:
  1283     07CE  2EB0               	goto	l1864
  1284     07CF                     u2340:
  1285     07CF  2EAA               	goto	l1862
  1286     07D0  120A  118A  2800   	ljmp	start
  1287     07D3                     __end_of_main:
  1288                           
  1289                           	psect	text1
  1290     0153                     __ptext1:	
  1291 ;; *************** function _waitForStart *****************
  1292 ;; Defined at:
  1293 ;;		line 276 in file "proje.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0
  1310 ;;      Totals:         0       0       0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 4
  1314 ;; This function calls:
  1315 ;;		_Lcd_Clear
  1316 ;;		_Lcd_Set_Cursor
  1317 ;;		_Lcd_String
  1318 ;;		_checkInvalidButtonPress
  1319 ;;		_delay_ms
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325     0153                     _waitForStart:	
  1326                           ;psect for function _waitForStart
  1327                           
  1328     0153                     l1814:	
  1329                           ;incstack = 0
  1330                           ; Regs used in _waitForStart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1331                           
  1332                           
  1333                           ;proje.c: 277:     gameState = GAME_WAITING;
  1334     0153  1283               	bcf	3,5	;RP0=0, select bank0
  1335     0154  1303               	bcf	3,6	;RP1=0, select bank0
  1336     0155  01DF               	clrf	_gameState
  1337     0156                     l1816:
  1338                           
  1339                           ;proje.c: 279:         Lcd_Clear();
  1340     0156  120A  158A  25E1  120A  118A  	fcall	_Lcd_Clear
  1341     015B                     l1818:
  1342                           
  1343                           ;proje.c: 280:         Lcd_Set_Cursor(1, 1);
  1344     015B  01F6               	clrf	Lcd_Set_Cursor@column
  1345     015C  0AF6               	incf	Lcd_Set_Cursor@column,f
  1346     015D  3001               	movlw	1
  1347     015E  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1348     0163                     l1820:
  1349                           
  1350                           ;proje.c: 281:         Lcd_String("The Memory Game");
  1351     0163  3034               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1352     0164  00F6               	movwf	Lcd_String@str
  1353     0165  3080               	movlw	128
  1354     0166  00F7               	movwf	Lcd_String@str+1
  1355     0167  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1356     016C                     l1822:
  1357                           
  1358                           ;proje.c: 282:         Lcd_Set_Cursor(2, 1);
  1359     016C  01F6               	clrf	Lcd_Set_Cursor@column
  1360     016D  0AF6               	incf	Lcd_Set_Cursor@column,f
  1361     016E  3002               	movlw	2
  1362     016F  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1363     0174                     l1824:
  1364                           
  1365                           ;proje.c: 283:         Lcd_String("Press START");
  1366     0174  3050               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1367     0175  00F6               	movwf	Lcd_String@str
  1368     0176  3080               	movlw	128
  1369     0177  00F7               	movwf	Lcd_String@str+1
  1370     0178  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1371                           
  1372                           ;proje.c: 284:         while (RB4 == 1) {
  1373     017D  2992               	goto	l1832
  1374     017E                     l1826:
  1375                           
  1376                           ;proje.c: 285:             if(checkInvalidButtonPress()) {
  1377     017E  120A  118A  21B0  120A  118A  	fcall	_checkInvalidButtonPress
  1378     0183  3A00               	xorlw	0
  1379     0184  1903               	skipnz
  1380     0185  2987               	goto	u2271
  1381     0186  2988               	goto	u2270
  1382     0187                     u2271:
  1383     0187  2989               	goto	l1830
  1384     0188                     u2270:
  1385     0188  2998               	goto	l205
  1386     0189                     l1830:
  1387                           
  1388                           ;proje.c: 288:             delay_ms(50);
  1389     0189  3032               	movlw	50
  1390     018A  00F0               	movwf	delay_ms@ms
  1391     018B  3000               	movlw	0
  1392     018C  00F1               	movwf	delay_ms@ms+1
  1393     018D  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1394     0192                     l1832:
  1395                           
  1396                           ;proje.c: 284:         while (RB4 == 1) {
  1397     0192  1283               	bcf	3,5	;RP0=0, select bank0
  1398     0193  1303               	bcf	3,6	;RP1=0, select bank0
  1399     0194  1A06               	btfsc	6,4	;volatile
  1400     0195  2997               	goto	u2281
  1401     0196  2998               	goto	u2280
  1402     0197                     u2281:
  1403     0197  297E               	goto	l1826
  1404     0198                     u2280:
  1405     0198                     l205:
  1406                           
  1407                           ;proje.c: 290:         if (RB4 == 0) {
  1408     0198  1283               	bcf	3,5	;RP0=0, select bank0
  1409     0199  1303               	bcf	3,6	;RP1=0, select bank0
  1410     019A  1A06               	btfsc	6,4	;volatile
  1411     019B  299D               	goto	u2291
  1412     019C  299E               	goto	u2290
  1413     019D                     u2291:
  1414     019D  2956               	goto	l1816
  1415     019E                     u2290:
  1416     019E                     l207:
  1417     019E  1E06               	btfss	6,4	;volatile
  1418     019F  29A1               	goto	u2301
  1419     01A0  29A2               	goto	u2300
  1420     01A1                     u2301:
  1421     01A1  299E               	goto	l207
  1422     01A2                     u2300:
  1423     01A2                     l1836:
  1424                           
  1425                           ;proje.c: 292:             delay_ms(200);
  1426     01A2  30C8               	movlw	200
  1427     01A3  00F0               	movwf	delay_ms@ms
  1428     01A4  3000               	movlw	0
  1429     01A5  00F1               	movwf	delay_ms@ms+1
  1430     01A6  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1431     01AB                     l210:	
  1432                           ;proje.c: 293:             break;
  1433                           
  1434                           
  1435                           ;proje.c: 296:     gameState = GAME_RUNNING;
  1436     01AB  3001               	movlw	1
  1437     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1438     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1439     01AE  00DF               	movwf	_gameState
  1440     01AF                     l212:
  1441     01AF  0008               	return
  1442     01B0                     __end_of_waitForStart:
  1443                           
  1444                           	psect	text2
  1445     01B0                     __ptext2:	
  1446 ;; *************** function _checkInvalidButtonPress *****************
  1447 ;; Defined at:
  1448 ;;		line 139 in file "proje.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      unsigned char 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1462 ;;      Params:         0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0
  1465 ;;      Totals:         0       0       0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 3
  1469 ;; This function calls:
  1470 ;;		_Lcd_Clear
  1471 ;;		_Lcd_Set_Cursor
  1472 ;;		_Lcd_String
  1473 ;;		_delay_ms
  1474 ;; This function is called by:
  1475 ;;		_waitForStart
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479     01B0                     _checkInvalidButtonPress:	
  1480                           ;psect for function _checkInvalidButtonPress
  1481                           
  1482     01B0                     l1604:	
  1483                           ;incstack = 0
  1484                           ; Regs used in _checkInvalidButtonPress: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  1485                           
  1486                           
  1487                           ;proje.c: 140:     if (gameState == GAME_WAITING) {
  1488     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1489     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1490     01B2  085F               	movf	_gameState,w
  1491     01B3  1D03               	btfss	3,2
  1492     01B4  29B6               	goto	u1981
  1493     01B5  29B7               	goto	u1980
  1494     01B6                     u1981:
  1495     01B6  2A14               	goto	l1634
  1496     01B7                     u1980:
  1497     01B7                     l1606:
  1498                           
  1499                           ;proje.c: 141:         if (RB0 == 0 || RB1 == 0 || RB2 == 0 || RB3 == 0) {
  1500     01B7  1C06               	btfss	6,0	;volatile
  1501     01B8  29BA               	goto	u1991
  1502     01B9  29BB               	goto	u1990
  1503     01BA                     u1991:
  1504     01BA  29C7               	goto	l1614
  1505     01BB                     u1990:
  1506     01BB                     l1608:
  1507     01BB  1C86               	btfss	6,1	;volatile
  1508     01BC  29BE               	goto	u2001
  1509     01BD  29BF               	goto	u2000
  1510     01BE                     u2001:
  1511     01BE  29C7               	goto	l1614
  1512     01BF                     u2000:
  1513     01BF                     l1610:
  1514     01BF  1D06               	btfss	6,2	;volatile
  1515     01C0  29C2               	goto	u2011
  1516     01C1  29C3               	goto	u2010
  1517     01C2                     u2011:
  1518     01C2  29C7               	goto	l1614
  1519     01C3                     u2010:
  1520     01C3                     l1612:
  1521     01C3  1986               	btfsc	6,3	;volatile
  1522     01C4  29C6               	goto	u2021
  1523     01C5  29C7               	goto	u2020
  1524     01C6                     u2021:
  1525     01C6  2A14               	goto	l1634
  1526     01C7                     u2020:
  1527     01C7                     l1614:
  1528                           
  1529                           ;proje.c: 142:             Lcd_Clear();
  1530     01C7  120A  158A  25E1  120A  118A  	fcall	_Lcd_Clear
  1531                           
  1532                           ;proje.c: 143:             Lcd_Set_Cursor(1, 1);
  1533     01CC  01F6               	clrf	Lcd_Set_Cursor@column
  1534     01CD  0AF6               	incf	Lcd_Set_Cursor@column,f
  1535     01CE  3001               	movlw	1
  1536     01CF  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1537     01D4                     l1616:
  1538                           
  1539                           ;proje.c: 144:             Lcd_String("ERROR!");
  1540     01D4  3092               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1541     01D5  00F6               	movwf	Lcd_String@str
  1542     01D6  3080               	movlw	128
  1543     01D7  00F7               	movwf	Lcd_String@str+1
  1544     01D8  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1545     01DD                     l1618:
  1546                           
  1547                           ;proje.c: 145:             Lcd_Set_Cursor(2, 1);
  1548     01DD  01F6               	clrf	Lcd_Set_Cursor@column
  1549     01DE  0AF6               	incf	Lcd_Set_Cursor@column,f
  1550     01DF  3002               	movlw	2
  1551     01E0  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1552                           
  1553                           ;proje.c: 146:             Lcd_String("First press START");
  1554     01E5  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1555     01E6  00F6               	movwf	Lcd_String@str
  1556     01E7  3080               	movlw	128
  1557     01E8  00F7               	movwf	Lcd_String@str+1
  1558     01E9  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1559     01EE                     l1620:
  1560                           
  1561                           ;proje.c: 147:             delay_ms(2000);
  1562     01EE  30D0               	movlw	208
  1563     01EF  00F0               	movwf	delay_ms@ms
  1564     01F0  3007               	movlw	7
  1565     01F1  00F1               	movwf	delay_ms@ms+1
  1566     01F2  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1567     01F7                     l144:	
  1568                           ;proje.c: 148:             while (RB0 == 0 || RB1 == 0 || RB2 == 0 || RB3 == 0);
  1569                           
  1570     01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1571     01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1572     01F9  1C06               	btfss	6,0	;volatile
  1573     01FA  29FC               	goto	u2031
  1574     01FB  29FD               	goto	u2030
  1575     01FC                     u2031:
  1576     01FC  29F7               	goto	l144
  1577     01FD                     u2030:
  1578     01FD                     l1622:
  1579     01FD  1C86               	btfss	6,1	;volatile
  1580     01FE  2A00               	goto	u2041
  1581     01FF  2A01               	goto	u2040
  1582     0200                     u2041:
  1583     0200  29F7               	goto	l144
  1584     0201                     u2040:
  1585     0201                     l1624:
  1586     0201  1D06               	btfss	6,2	;volatile
  1587     0202  2A04               	goto	u2051
  1588     0203  2A05               	goto	u2050
  1589     0204                     u2051:
  1590     0204  29F7               	goto	l144
  1591     0205                     u2050:
  1592     0205                     l1626:
  1593     0205  1D86               	btfss	6,3	;volatile
  1594     0206  2A08               	goto	u2061
  1595     0207  2A09               	goto	u2060
  1596     0208                     u2061:
  1597     0208  29F7               	goto	l144
  1598     0209                     u2060:
  1599     0209                     l1628:
  1600                           
  1601                           ;proje.c: 149:             delay_ms(200);
  1602     0209  30C8               	movlw	200
  1603     020A  00F0               	movwf	delay_ms@ms
  1604     020B  3000               	movlw	0
  1605     020C  00F1               	movwf	delay_ms@ms+1
  1606     020D  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1607     0212                     l1630:
  1608                           
  1609                           ;proje.c: 150:             return 1;
  1610     0212  3001               	movlw	1
  1611     0213  2A15               	goto	l147
  1612     0214                     l1634:
  1613                           
  1614                           ;proje.c: 153:     return 0;
  1615     0214  3000               	movlw	0
  1616     0215                     l147:
  1617     0215  0008               	return
  1618     0216                     __end_of_checkInvalidButtonPress:
  1619                           
  1620                           	psect	text3
  1621     0101                     __ptext3:	
  1622 ;; *************** function _updateScoreDisplay *****************
  1623 ;; Defined at:
  1624 ;;		line 219 in file "proje.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 6
  1645 ;; This function calls:
  1646 ;;		_Lcd_Clear
  1647 ;;		_Lcd_Number
  1648 ;;		_Lcd_Set_Cursor
  1649 ;;		_Lcd_String
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655     0101                     _updateScoreDisplay:	
  1656                           ;psect for function _updateScoreDisplay
  1657                           
  1658     0101                     l1766:	
  1659                           ;incstack = 0
  1660                           ; Regs used in _updateScoreDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1661                           
  1662                           
  1663                           ;proje.c: 220:     Lcd_Clear();
  1664     0101  120A  158A  25E1  120A  118A  	fcall	_Lcd_Clear
  1665                           
  1666                           ;proje.c: 221:     Lcd_Set_Cursor(1, 1);
  1667     0106  01F6               	clrf	Lcd_Set_Cursor@column
  1668     0107  0AF6               	incf	Lcd_Set_Cursor@column,f
  1669     0108  3001               	movlw	1
  1670     0109  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1671     010E                     l1768:
  1672                           
  1673                           ;proje.c: 222:     Lcd_String("Score:");
  1674     010E  3099               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1675     010F  00F6               	movwf	Lcd_String@str
  1676     0110  3080               	movlw	128
  1677     0111  00F7               	movwf	Lcd_String@str+1
  1678     0112  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1679     0117                     l1770:
  1680                           
  1681                           ;proje.c: 223:     Lcd_Number(score);
  1682     0117  1283               	bcf	3,5	;RP0=0, select bank0
  1683     0118  1303               	bcf	3,6	;RP1=0, select bank0
  1684     0119  085D               	movf	_score+1,w
  1685     011A  00C2               	movwf	Lcd_Number@number+1
  1686     011B  085C               	movf	_score,w
  1687     011C  00C1               	movwf	Lcd_Number@number
  1688     011D  120A  158A  2636  120A  118A  	fcall	_Lcd_Number
  1689     0122                     l1772:
  1690                           
  1691                           ;proje.c: 224:     Lcd_String(" Level:");
  1692     0122  3083               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1693     0123  00F6               	movwf	Lcd_String@str
  1694     0124  3080               	movlw	128
  1695     0125  00F7               	movwf	Lcd_String@str+1
  1696     0126  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1697     012B                     l1774:
  1698                           
  1699                           ;proje.c: 225:     Lcd_Number(level);
  1700     012B  1283               	bcf	3,5	;RP0=0, select bank0
  1701     012C  1303               	bcf	3,6	;RP1=0, select bank0
  1702     012D  0867               	movf	_level+1,w
  1703     012E  00C2               	movwf	Lcd_Number@number+1
  1704     012F  0866               	movf	_level,w
  1705     0130  00C1               	movwf	Lcd_Number@number
  1706     0131  120A  158A  2636  120A  118A  	fcall	_Lcd_Number
  1707                           
  1708                           ;proje.c: 226:     Lcd_Set_Cursor(2, 1);
  1709     0136  01F6               	clrf	Lcd_Set_Cursor@column
  1710     0137  0AF6               	incf	Lcd_Set_Cursor@column,f
  1711     0138  3002               	movlw	2
  1712     0139  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1713     013E                     l1776:
  1714                           
  1715                           ;proje.c: 227:     Lcd_String("High:");
  1716     013E  30A0               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1717     013F  00F6               	movwf	Lcd_String@str
  1718     0140  3080               	movlw	128
  1719     0141  00F7               	movwf	Lcd_String@str+1
  1720     0142  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1721     0147                     l1778:
  1722                           
  1723                           ;proje.c: 228:     Lcd_Number(highScore);
  1724     0147  1283               	bcf	3,5	;RP0=0, select bank0
  1725     0148  1303               	bcf	3,6	;RP1=0, select bank0
  1726     0149  0859               	movf	_highScore+1,w
  1727     014A  00C2               	movwf	Lcd_Number@number+1
  1728     014B  0858               	movf	_highScore,w
  1729     014C  00C1               	movwf	Lcd_Number@number
  1730     014D  120A  158A  2636  120A  118A  	fcall	_Lcd_Number
  1731     0152                     l176:
  1732     0152  0008               	return
  1733     0153                     __end_of_updateScoreDisplay:
  1734                           
  1735                           	psect	text4
  1736     0216                     __ptext4:	
  1737 ;; *************** function _updateHighScore *****************
  1738 ;; Defined at:
  1739 ;;		line 261 in file "proje.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  scoreToSave     1   49[BANK0 ] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         0       0       0       0       0
  1754 ;;      Locals:         0       3       0       0       0
  1755 ;;      Temps:          0       2       0       0       0
  1756 ;;      Totals:         0       5       0       0       0
  1757 ;;Total ram usage:        5 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 6
  1760 ;; This function calls:
  1761 ;;		_Lcd_Clear
  1762 ;;		_Lcd_Number
  1763 ;;		_Lcd_Set_Cursor
  1764 ;;		_Lcd_String
  1765 ;;		_delay_ms
  1766 ;;		_eeprom_write
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772     0216                     _updateHighScore:	
  1773                           ;psect for function _updateHighScore
  1774                           
  1775     0216                     l1790:	
  1776                           ;incstack = 0
  1777                           ; Regs used in _updateHighScore: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1778                           
  1779                           
  1780                           ;proje.c: 262:     if (score > highScore) {
  1781     0216  1283               	bcf	3,5	;RP0=0, select bank0
  1782     0217  1303               	bcf	3,6	;RP1=0, select bank0
  1783     0218  085D               	movf	_score+1,w
  1784     0219  0259               	subwf	_highScore+1,w
  1785     021A  1D03               	skipz
  1786     021B  2A1E               	goto	u2255
  1787     021C  085C               	movf	_score,w
  1788     021D  0258               	subwf	_highScore,w
  1789     021E                     u2255:
  1790     021E  1803               	skipnc
  1791     021F  2A21               	goto	u2251
  1792     0220  2A22               	goto	u2250
  1793     0221                     u2251:
  1794     0221  2A80               	goto	l198
  1795     0222                     u2250:
  1796     0222                     l1792:
  1797                           
  1798                           ;proje.c: 263:         highScore = score;
  1799     0222  085D               	movf	_score+1,w
  1800     0223  00D9               	movwf	_highScore+1
  1801     0224  085C               	movf	_score,w
  1802     0225  00D8               	movwf	_highScore
  1803                           
  1804                           ;proje.c: 264:         unsigned char scoreToSave = (highScore > 255) ? 255 : (unsigned c
      +                          har)highScore;
  1805     0226  3001               	movlw	1
  1806     0227  0259               	subwf	_highScore+1,w
  1807     0228  3000               	movlw	0
  1808     0229  1903               	skipnz
  1809     022A  0258               	subwf	_highScore,w
  1810     022B  1803               	skipnc
  1811     022C  2A2E               	goto	u2261
  1812     022D  2A2F               	goto	u2260
  1813     022E                     u2261:
  1814     022E  2A37               	goto	l1796
  1815     022F                     u2260:
  1816     022F                     l1794:
  1817     022F  0858               	movf	_highScore,w
  1818     0230  00CD               	movwf	??_updateHighScore
  1819     0231  01CE               	clrf	??_updateHighScore+1
  1820     0232  084D               	movf	??_updateHighScore,w
  1821     0233  00CF               	movwf	_updateHighScore$227
  1822     0234  084E               	movf	??_updateHighScore+1,w
  1823     0235  00D0               	movwf	_updateHighScore$227+1
  1824     0236  2A3B               	goto	l197
  1825     0237                     l1796:
  1826     0237  30FF               	movlw	255
  1827     0238  00CF               	movwf	_updateHighScore$227
  1828     0239  3000               	movlw	0
  1829     023A  00D0               	movwf	_updateHighScore$227+1
  1830     023B                     l197:
  1831     023B  084F               	movf	_updateHighScore$227,w
  1832     023C  00D1               	movwf	updateHighScore@scoreToSave
  1833     023D                     l1798:
  1834                           
  1835                           ;proje.c: 265:         eeprom_write(0x00, scoreToSave);
  1836     023D  0851               	movf	updateHighScore@scoreToSave,w
  1837     023E  00F0               	movwf	eeprom_write@data
  1838     023F  3000               	movlw	0
  1839     0240  120A  158A  2605  120A  118A  	fcall	_eeprom_write
  1840     0245                     l1800:
  1841                           
  1842                           ;proje.c: 266:         Lcd_Clear();
  1843     0245  120A  158A  25E1  120A  118A  	fcall	_Lcd_Clear
  1844     024A                     l1802:
  1845                           
  1846                           ;proje.c: 267:         Lcd_Set_Cursor(1, 1);
  1847     024A  01F6               	clrf	Lcd_Set_Cursor@column
  1848     024B  0AF6               	incf	Lcd_Set_Cursor@column,f
  1849     024C  3001               	movlw	1
  1850     024D  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1851     0252                     l1804:
  1852                           
  1853                           ;proje.c: 268:         Lcd_String("NEW RECORD!");
  1854     0252  3044               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1855     0253  00F6               	movwf	Lcd_String@str
  1856     0254  3080               	movlw	128
  1857     0255  00F7               	movwf	Lcd_String@str+1
  1858     0256  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1859     025B                     l1806:
  1860                           
  1861                           ;proje.c: 269:         Lcd_Set_Cursor(2, 1);
  1862     025B  01F6               	clrf	Lcd_Set_Cursor@column
  1863     025C  0AF6               	incf	Lcd_Set_Cursor@column,f
  1864     025D  3002               	movlw	2
  1865     025E  120A  158A  25F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1866     0263                     l1808:
  1867                           
  1868                           ;proje.c: 270:         Lcd_String("Score: ");
  1869     0263  307B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1870     0264  00F6               	movwf	Lcd_String@str
  1871     0265  3080               	movlw	128
  1872     0266  00F7               	movwf	Lcd_String@str+1
  1873     0267  120A  158A  26DE  120A  118A  	fcall	_Lcd_String
  1874     026C                     l1810:
  1875                           
  1876                           ;proje.c: 271:         Lcd_Number(highScore);
  1877     026C  1283               	bcf	3,5	;RP0=0, select bank0
  1878     026D  1303               	bcf	3,6	;RP1=0, select bank0
  1879     026E  0859               	movf	_highScore+1,w
  1880     026F  00C2               	movwf	Lcd_Number@number+1
  1881     0270  0858               	movf	_highScore,w
  1882     0271  00C1               	movwf	Lcd_Number@number
  1883     0272  120A  158A  2636  120A  118A  	fcall	_Lcd_Number
  1884     0277                     l1812:
  1885                           
  1886                           ;proje.c: 272:         delay_ms(2000);
  1887     0277  30D0               	movlw	208
  1888     0278  00F0               	movwf	delay_ms@ms
  1889     0279  3007               	movlw	7
  1890     027A  00F1               	movwf	delay_ms@ms+1
  1891     027B  120A  158A  261D  120A  118A  	fcall	_delay_ms
  1892     0280                     l198:
  1893     0280  0008               	return
  1894     0281                     __end_of_updateHighScore:
  1895                           
  1896                           	psect	text5
  1897     0DF1                     __ptext5:	
  1898 ;; *************** function _Lcd_Set_Cursor *****************
  1899 ;; Defined at:
  1900 ;;		line 199 in file "proje.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  row             1    wreg     unsigned char 
  1903 ;;  column          1    6[COMMON] unsigned char 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  row             1    7[COMMON] unsigned char 
  1906 ;;  pos             1    8[COMMON] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         1       0       0       0       0
  1917 ;;      Locals:         2       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0
  1919 ;;      Totals:         3       0       0       0       0
  1920 ;;Total ram usage:        3 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 2
  1923 ;; This function calls:
  1924 ;;		_Lcd_Command
  1925 ;; This function is called by:
  1926 ;;		_checkInvalidButtonPress
  1927 ;;		_updateScoreDisplay
  1928 ;;		_updateHighScore
  1929 ;;		_waitForStart
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934     0DF1                     _Lcd_Set_Cursor:	
  1935                           ;psect for function _Lcd_Set_Cursor
  1936                           
  1937                           
  1938                           ;incstack = 0
  1939                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1940                           ;Lcd_Set_Cursor@row stored from wreg
  1941     0DF1  00F7               	movwf	Lcd_Set_Cursor@row
  1942     0DF2                     l1554:
  1943                           
  1944                           ;proje.c: 200:     unsigned char pos;;proje.c: 201:     if (row == 1)
  1945     0DF2  0377               	decf	Lcd_Set_Cursor@row,w
  1946     0DF3  1D03               	btfss	3,2
  1947     0DF4  2DF6               	goto	u1891
  1948     0DF5  2DF7               	goto	u1890
  1949     0DF6                     u1891:
  1950     0DF6  2DFB               	goto	l1558
  1951     0DF7                     u1890:
  1952     0DF7                     l1556:
  1953                           
  1954                           ;proje.c: 202:         pos = 0x80 + column - 1;
  1955     0DF7  0876               	movf	Lcd_Set_Cursor@column,w
  1956     0DF8  3E7F               	addlw	127
  1957     0DF9  00F8               	movwf	Lcd_Set_Cursor@pos
  1958     0DFA  2DFE               	goto	l1560
  1959     0DFB                     l1558:
  1960                           
  1961                           ;proje.c: 204:         pos = 0xC0 + column - 1;
  1962     0DFB  0876               	movf	Lcd_Set_Cursor@column,w
  1963     0DFC  3EBF               	addlw	191
  1964     0DFD  00F8               	movwf	Lcd_Set_Cursor@pos
  1965     0DFE                     l1560:
  1966                           
  1967                           ;proje.c: 205:     Lcd_Command(pos);
  1968     0DFE  0878               	movf	Lcd_Set_Cursor@pos,w
  1969     0DFF  120A  118A  238B  120A  158A  	fcall	_Lcd_Command
  1970     0E04                     l164:
  1971     0E04  0008               	return
  1972     0E05                     __end_of_Lcd_Set_Cursor:
  1973                           
  1974                           	psect	text6
  1975     0E36                     __ptext6:	
  1976 ;; *************** function _Lcd_Number *****************
  1977 ;; Defined at:
  1978 ;;		line 213 in file "proje.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  number          2   33[BANK0 ] unsigned int 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  buffer         10   35[BANK0 ] unsigned char [10]
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         0       2       0       0       0
  1993 ;;      Locals:         0      10       0       0       0
  1994 ;;      Temps:          0       0       0       0       0
  1995 ;;      Totals:         0      12       0       0       0
  1996 ;;Total ram usage:       12 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; Hardware stack levels required when called: 5
  1999 ;; This function calls:
  2000 ;;		_Lcd_String
  2001 ;;		_sprintf
  2002 ;; This function is called by:
  2003 ;;		_updateScoreDisplay
  2004 ;;		_updateHighScore
  2005 ;;		_main
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009     0E36                     _Lcd_Number:	
  2010                           ;psect for function _Lcd_Number
  2011                           
  2012     0E36                     l1638:	
  2013                           ;incstack = 0
  2014                           ; Regs used in _Lcd_Number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2015                           
  2016                           
  2017                           ;proje.c: 214:     char buffer[10];;proje.c: 215:     sprintf(buffer, "%u", number);
  2018     0E36  3043               	movlw	(low (Lcd_Number@buffer| 0))& (0+255)
  2019     0E37  1283               	bcf	3,5	;RP0=0, select bank0
  2020     0E38  1303               	bcf	3,6	;RP1=0, select bank0
  2021     0E39  00B0               	movwf	sprintf@s
  2022     0E3A  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2023     0E3B  00B1               	movwf	sprintf@fmt
  2024     0E3C  0842               	movf	Lcd_Number@number+1,w
  2025     0E3D  00B3               	movwf	?_sprintf+3
  2026     0E3E  0841               	movf	Lcd_Number@number,w
  2027     0E3F  00B2               	movwf	?_sprintf+2
  2028     0E40  120A  158A  2671  120A  158A  	fcall	_sprintf
  2029                           
  2030                           ;proje.c: 216:     Lcd_String(buffer);
  2031     0E45  3043               	movlw	(low (Lcd_Number@buffer| 0))& (0+255)
  2032     0E46  00F6               	movwf	Lcd_String@str
  2033     0E47  3000               	movlw	0
  2034     0E48  00F7               	movwf	Lcd_String@str+1
  2035     0E49  120A  158A  26DE  120A  158A  	fcall	_Lcd_String
  2036     0E4E                     l173:
  2037     0E4E  0008               	return
  2038     0E4F                     __end_of_Lcd_Number:
  2039                           
  2040                           	psect	text7
  2041     0E71                     __ptext7:	
  2042 ;; *************** function _sprintf *****************
  2043 ;; Defined at:
  2044 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  s               1   16[BANK0 ] PTR unsigned char 
  2047 ;;		 -> Lcd_Number@buffer(10), 
  2048 ;;  fmt             1   17[BANK0 ] PTR const unsigned char 
  2049 ;;		 -> STR_3(3), 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  f              11   22[BANK0 ] struct _IO_FILE
  2052 ;;  ret             2    0        int 
  2053 ;;  ap              1   21[BANK0 ] PTR void [1]
  2054 ;;		 -> ?_sprintf(2), 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  2   16[BANK0 ] int 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         0       4       0       0       0
  2065 ;;      Locals:         0      12       0       0       0
  2066 ;;      Temps:          0       1       0       0       0
  2067 ;;      Totals:         0      17       0       0       0
  2068 ;;Total ram usage:       17 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 4
  2071 ;; This function calls:
  2072 ;;		_vfprintf
  2073 ;; This function is called by:
  2074 ;;		_Lcd_Number
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078     0E71                     _sprintf:	
  2079                           ;psect for function _sprintf
  2080                           
  2081     0E71                     l1570:	
  2082                           ;incstack = 0
  2083                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2084                           
  2085     0E71  3032               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2086     0E72  1283               	bcf	3,5	;RP0=0, select bank0
  2087     0E73  1303               	bcf	3,6	;RP1=0, select bank0
  2088     0E74  00B5               	movwf	sprintf@ap
  2089     0E75                     l1572:
  2090     0E75  0830               	movf	sprintf@s,w
  2091     0E76  00B6               	movwf	sprintf@f
  2092     0E77  3000               	movlw	0
  2093     0E78  00B7               	movwf	sprintf@f+1
  2094     0E79                     l1574:
  2095     0E79  01B8               	clrf	sprintf@f+2
  2096     0E7A  01B9               	clrf	sprintf@f+3
  2097     0E7B                     l1576:
  2098     0E7B  01BF               	clrf	sprintf@f+9
  2099     0E7C  01C0               	clrf	sprintf@f+10
  2100     0E7D                     l1578:
  2101     0E7D  3036               	movlw	low sprintf@f
  2102     0E7E  00AC               	movwf	vfprintf@fp
  2103     0E7F  3000               	movlw	high sprintf@f
  2104     0E80  00AD               	movwf	vfprintf@fp+1
  2105     0E81  0831               	movf	sprintf@fmt,w
  2106     0E82  00AE               	movwf	vfprintf@fmt
  2107     0E83  3035               	movlw	(low (sprintf@ap| 0))& (0+255)
  2108     0E84  00AF               	movwf	vfprintf@ap
  2109     0E85  120A  158A  26B9  120A  158A  	fcall	_vfprintf
  2110     0E8A                     l1580:
  2111     0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  2112     0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  2113     0E8C  0838               	movf	sprintf@f+2,w
  2114     0E8D  0730               	addwf	sprintf@s,w
  2115     0E8E  00B4               	movwf	??_sprintf
  2116     0E8F  0834               	movf	??_sprintf,w
  2117     0E90  0084               	movwf	4
  2118     0E91  1383               	bcf	3,7	;select IRP bank0
  2119     0E92  0180               	clrf	0
  2120     0E93                     l779:
  2121     0E93  0008               	return
  2122     0E94                     __end_of_sprintf:
  2123                           
  2124                           	psect	text8
  2125     0EB9                     __ptext8:	
  2126 ;; *************** function _vfprintf *****************
  2127 ;; Defined at:
  2128 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  2131 ;;		 -> sprintf@f(11), 
  2132 ;;  fmt             1   14[BANK0 ] PTR const unsigned char 
  2133 ;;		 -> STR_3(3), 
  2134 ;;  ap              1   15[BANK0 ] PTR PTR void 
  2135 ;;		 -> sprintf@ap(1), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  2138 ;;		 -> STR_3(3), 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2   12[BANK0 ] int 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2148 ;;      Params:         0       4       0       0       0
  2149 ;;      Locals:         1       0       0       0       0
  2150 ;;      Temps:          0       0       0       0       0
  2151 ;;      Totals:         1       4       0       0       0
  2152 ;;Total ram usage:        5 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 3
  2155 ;; This function calls:
  2156 ;;		_vfpfcnvrt
  2157 ;; This function is called by:
  2158 ;;		_sprintf
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162     0EB9                     _vfprintf:	
  2163                           ;psect for function _vfprintf
  2164                           
  2165     0EB9                     l1542:	
  2166                           ;incstack = 0
  2167                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2168                           
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2171     0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  2172     0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  2173     0EBB  082E               	movf	vfprintf@fmt,w
  2174     0EBC  00FD               	movwf	vfprintf@cfmt
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2177     0EBD  2ECD               	goto	l1546
  2178     0EBE                     l1544:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2181     0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  2182     0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  2183     0EC0  082C               	movf	vfprintf@fp,w
  2184     0EC1  00A0               	movwf	vfpfcnvrt@fp
  2185     0EC2  082D               	movf	vfprintf@fp+1,w
  2186     0EC3  00A1               	movwf	vfpfcnvrt@fp+1
  2187     0EC4  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2188     0EC5  00A2               	movwf	vfpfcnvrt@fmt
  2189     0EC6  082F               	movf	vfprintf@ap,w
  2190     0EC7  00A3               	movwf	vfpfcnvrt@ap
  2191     0EC8  120A  118A  25BB  120A  158A  	fcall	_vfpfcnvrt
  2192     0ECD                     l1546:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2195     0ECD  087D               	movf	vfprintf@cfmt,w
  2196     0ECE  0084               	movwf	4
  2197     0ECF  120A  118A  200D  120A  158A  	fcall	stringdir
  2198     0ED4  3A00               	xorlw	0
  2199     0ED5  1D03               	skipz
  2200     0ED6  2ED8               	goto	u1881
  2201     0ED7  2ED9               	goto	u1880
  2202     0ED8                     u1881:
  2203     0ED8  2EBE               	goto	l1544
  2204     0ED9                     u1880:
  2205     0ED9                     l1548:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2208     0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  2209     0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  2210     0EDB  01AC               	clrf	?_vfprintf
  2211     0EDC  01AD               	clrf	?_vfprintf+1
  2212     0EDD                     l823:
  2213     0EDD  0008               	return
  2214     0EDE                     __end_of_vfprintf:
  2215                           
  2216                           	psect	text9
  2217     05BB                     __ptext9:	
  2218 ;; *************** function _vfpfcnvrt *****************
  2219 ;; Defined at:
  2220 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2223 ;;		 -> sprintf@f(11), 
  2224 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  2225 ;;		 -> vfprintf@cfmt(1), 
  2226 ;;  ap              1    3[BANK0 ] PTR PTR void 
  2227 ;;		 -> sprintf@ap(1), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  convarg         4    6[BANK0 ] struct .
  2230 ;;  c               1   11[BANK0 ] unsigned char 
  2231 ;;  cp              1   10[BANK0 ] PTR unsigned char 
  2232 ;;		 -> STR_3(3), 
  2233 ;;  done            1    0        _Bool 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         0       4       0       0       0
  2244 ;;      Locals:         0       6       0       0       0
  2245 ;;      Temps:          0       2       0       0       0
  2246 ;;      Totals:         0      12       0       0       0
  2247 ;;Total ram usage:       12 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 2
  2250 ;; This function calls:
  2251 ;;		___lwdiv
  2252 ;;		___lwmod
  2253 ;;		_fputc
  2254 ;; This function is called by:
  2255 ;;		_vfprintf
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259     05BB                     _vfpfcnvrt:	
  2260                           ;psect for function _vfpfcnvrt
  2261                           
  2262     05BB                     l1454:	
  2263                           ;incstack = 0
  2264                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2265                           
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2268     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2269     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2270     05BD  0822               	movf	vfpfcnvrt@fmt,w
  2271     05BE  0084               	movwf	4
  2272     05BF  0800               	movf	0,w
  2273     05C0  0084               	movwf	4
  2274     05C1  120A  118A  200D  120A  118A  	fcall	stringdir
  2275     05C6  3A25               	xorlw	37
  2276     05C7  1D03               	skipz
  2277     05C8  2DCA               	goto	u1371
  2278     05C9  2DCB               	goto	u1370
  2279     05CA                     u1371:
  2280     05CA  2E65               	goto	l1492
  2281     05CB                     u1370:
  2282     05CB                     l1456:
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2285     05CB  0822               	movf	vfpfcnvrt@fmt,w
  2286     05CC  0084               	movwf	4
  2287     05CD  3001               	movlw	1
  2288     05CE  0780               	addwf	0,f
  2289     05CF                     l1458:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2292     05CF  01D4               	clrf	_width
  2293     05D0  01D5               	clrf	_width+1
  2294     05D1  3000               	movlw	0
  2295     05D2  00DE               	movwf	_flags
  2296     05D3                     l1460:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2299     05D3  30FF               	movlw	255
  2300     05D4  00D6               	movwf	_prec
  2301     05D5  30FF               	movlw	255
  2302     05D6  00D7               	movwf	_prec+1
  2303     05D7                     l1462:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2306     05D7  0822               	movf	vfpfcnvrt@fmt,w
  2307     05D8  0084               	movwf	4
  2308     05D9  0800               	movf	0,w
  2309     05DA  00AA               	movwf	vfpfcnvrt@cp
  2310     05DB                     l1464:
  2311     05DB  082A               	movf	vfpfcnvrt@cp,w
  2312     05DC  0084               	movwf	4
  2313     05DD  120A  118A  200D  120A  118A  	fcall	stringdir
  2314     05E2  3A75               	xorlw	117
  2315     05E3  1D03               	skipz
  2316     05E4  2DE6               	goto	u1381
  2317     05E5  2DE7               	goto	u1380
  2318     05E6                     u1381:
  2319     05E6  2E5E               	goto	l1488
  2320     05E7                     u1380:
  2321     05E7                     l1466:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2324     05E7  0823               	movf	vfpfcnvrt@ap,w
  2325     05E8  0084               	movwf	4
  2326     05E9  1383               	bcf	3,7	;select IRP bank0
  2327     05EA  0800               	movf	0,w
  2328     05EB  00FF               	movwf	btemp+1
  2329     05EC  3002               	movlw	2
  2330     05ED  0780               	addwf	0,f
  2331     05EE  087F               	movf	btemp+1,w
  2332     05EF  0084               	movwf	4
  2333     05F0  0800               	movf	0,w
  2334     05F1  00A6               	movwf	vfpfcnvrt@convarg
  2335     05F2  0A84               	incf	4,f
  2336     05F3  0800               	movf	0,w
  2337     05F4  00A7               	movwf	vfpfcnvrt@convarg+1
  2338     05F5                     l1468:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2341     05F5  0822               	movf	vfpfcnvrt@fmt,w
  2342     05F6  0084               	movwf	4
  2343     05F7  082A               	movf	vfpfcnvrt@cp,w
  2344     05F8  3E01               	addlw	1
  2345     05F9  0080               	movwf	0
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2348     05FA  2E53               	goto	l1486
  2349     05FB                     l808:	
  2350                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1523:     case 'u
      +                          ':
  2351                           
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2354     05FB  3020               	movlw	32
  2355     05FC  00AB               	movwf	vfpfcnvrt@c
  2356     05FD                     l1470:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2359     05FD  3001               	movlw	1
  2360     05FE  02AB               	subwf	vfpfcnvrt@c,f
  2361     05FF  082B               	movf	vfpfcnvrt@c,w
  2362     0600  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2363     0601  0084               	movwf	4
  2364     0602  300A               	movlw	10
  2365     0603  00F0               	movwf	___lwmod@divisor
  2366     0604  3000               	movlw	0
  2367     0605  00F1               	movwf	___lwmod@divisor+1
  2368     0606  0827               	movf	vfpfcnvrt@convarg+1,w
  2369     0607  00F3               	movwf	___lwmod@dividend+1
  2370     0608  0826               	movf	vfpfcnvrt@convarg,w
  2371     0609  00F2               	movwf	___lwmod@dividend
  2372     060A  120A  158A  2735  120A  118A  	fcall	___lwmod
  2373     060F  0870               	movf	?___lwmod,w
  2374     0610  3E30               	addlw	48
  2375     0611  1383               	bcf	3,7	;select IRP bank1
  2376     0612  0080               	movwf	0
  2377     0613                     l1472:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2380     0613  300A               	movlw	10
  2381     0614  00F0               	movwf	___lwdiv@divisor
  2382     0615  3000               	movlw	0
  2383     0616  00F1               	movwf	___lwdiv@divisor+1
  2384     0617  1283               	bcf	3,5	;RP0=0, select bank0
  2385     0618  1303               	bcf	3,6	;RP1=0, select bank0
  2386     0619  0827               	movf	vfpfcnvrt@convarg+1,w
  2387     061A  00F3               	movwf	___lwdiv@dividend+1
  2388     061B  0826               	movf	vfpfcnvrt@convarg,w
  2389     061C  00F2               	movwf	___lwdiv@dividend
  2390     061D  120A  158A  276D  120A  118A  	fcall	___lwdiv
  2391     0622  0871               	movf	?___lwdiv+1,w
  2392     0623  1283               	bcf	3,5	;RP0=0, select bank0
  2393     0624  1303               	bcf	3,6	;RP1=0, select bank0
  2394     0625  00A7               	movwf	vfpfcnvrt@convarg+1
  2395     0626  0870               	movf	?___lwdiv,w
  2396     0627  00A6               	movwf	vfpfcnvrt@convarg
  2397     0628                     l1474:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2400     0628  0826               	movf	vfpfcnvrt@convarg,w
  2401     0629  0427               	iorwf	vfpfcnvrt@convarg+1,w
  2402     062A  1903               	btfsc	3,2
  2403     062B  2E2D               	goto	u1391
  2404     062C  2E2E               	goto	u1390
  2405     062D                     u1391:
  2406     062D  2E4C               	goto	l1482
  2407     062E                     u1390:
  2408     062E                     l1476:
  2409     062E  082B               	movf	vfpfcnvrt@c,w
  2410     062F  1D03               	btfss	3,2
  2411     0630  2E32               	goto	u1401
  2412     0631  2E33               	goto	u1400
  2413     0632                     u1401:
  2414     0632  2DFD               	goto	l1470
  2415     0633                     u1400:
  2416     0633  2E4C               	goto	l1482
  2417     0634                     l1478:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2420     0634  082B               	movf	vfpfcnvrt@c,w
  2421     0635  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2422     0636  0084               	movwf	4
  2423     0637  1383               	bcf	3,7	;select IRP bank1
  2424     0638  0800               	movf	0,w
  2425     0639  00A4               	movwf	??_vfpfcnvrt
  2426     063A  01A5               	clrf	??_vfpfcnvrt+1
  2427     063B  0824               	movf	??_vfpfcnvrt,w
  2428     063C  00F0               	movwf	fputc@c
  2429     063D  0825               	movf	??_vfpfcnvrt+1,w
  2430     063E  00F1               	movwf	fputc@c+1
  2431     063F  0820               	movf	vfpfcnvrt@fp,w
  2432     0640  00F2               	movwf	fputc@fp
  2433     0641  0821               	movf	vfpfcnvrt@fp+1,w
  2434     0642  00F3               	movwf	fputc@fp+1
  2435     0643  120A  118A  22F1  120A  118A  	fcall	_fputc
  2436     0648                     l1480:
  2437     0648  3001               	movlw	1
  2438     0649  1283               	bcf	3,5	;RP0=0, select bank0
  2439     064A  1303               	bcf	3,6	;RP1=0, select bank0
  2440     064B  07AB               	addwf	vfpfcnvrt@c,f
  2441     064C                     l1482:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2444     064C  3020               	movlw	32
  2445     064D  062B               	xorwf	vfpfcnvrt@c,w
  2446     064E  1D03               	btfss	3,2
  2447     064F  2E51               	goto	u1411
  2448     0650  2E52               	goto	u1410
  2449     0651                     u1411:
  2450     0651  2E34               	goto	l1478
  2451     0652                     u1410:
  2452     0652  2E7E               	goto	l816
  2453     0653                     l1486:
  2454     0653  082A               	movf	vfpfcnvrt@cp,w
  2455     0654  0084               	movwf	4
  2456     0655  120A  118A  200D  120A  118A  	fcall	stringdir
  2457                           
  2458                           ; Switch size 1, requested type "simple"
  2459                           ; Number of cases is 1, Range of values is 117 to 117
  2460                           ; switch strategies available:
  2461                           ; Name         Instructions Cycles
  2462                           ; simple_byte            4     3 (average)
  2463                           ; direct_byte           14    11 (fixed)
  2464                           ; jumptable            263     9 (fixed)
  2465                           ;	Chosen strategy is simple_byte
  2466     065A  3A75               	xorlw	117	; case 117
  2467     065B  1903               	skipnz
  2468     065C  2DFB               	goto	l808
  2469     065D  2E5E               	goto	l1488
  2470     065E                     l1488:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2473     065E  1283               	bcf	3,5	;RP0=0, select bank0
  2474     065F  1303               	bcf	3,6	;RP1=0, select bank0
  2475     0660  0822               	movf	vfpfcnvrt@fmt,w
  2476     0661  0084               	movwf	4
  2477     0662  3001               	movlw	1
  2478     0663  0780               	addwf	0,f
  2479     0664  2E7E               	goto	l816
  2480     0665                     l1492:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2483     0665  0822               	movf	vfpfcnvrt@fmt,w
  2484     0666  0084               	movwf	4
  2485     0667  0800               	movf	0,w
  2486     0668  0084               	movwf	4
  2487     0669  120A  118A  200D  120A  118A  	fcall	stringdir
  2488     066E  00A4               	movwf	??_vfpfcnvrt
  2489     066F  01A5               	clrf	??_vfpfcnvrt+1
  2490     0670  0824               	movf	??_vfpfcnvrt,w
  2491     0671  00F0               	movwf	fputc@c
  2492     0672  0825               	movf	??_vfpfcnvrt+1,w
  2493     0673  00F1               	movwf	fputc@c+1
  2494     0674  0820               	movf	vfpfcnvrt@fp,w
  2495     0675  00F2               	movwf	fputc@fp
  2496     0676  0821               	movf	vfpfcnvrt@fp+1,w
  2497     0677  00F3               	movwf	fputc@fp+1
  2498     0678  120A  118A  22F1  120A  118A  	fcall	_fputc
  2499     067D  2E5E               	goto	l1488
  2500     067E                     l816:
  2501     067E  0008               	return
  2502     067F                     __end_of_vfpfcnvrt:
  2503                           
  2504                           	psect	text10
  2505     02F1                     __ptext10:	
  2506 ;; *************** function _fputc *****************
  2507 ;; Defined at:
  2508 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  c               2    0[COMMON] int 
  2511 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  2512 ;;		 -> sprintf@f(11), 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  2    0[COMMON] int 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         4       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0
  2526 ;;      Temps:          9       0       0       0       0
  2527 ;;      Totals:        13       0       0       0       0
  2528 ;;Total ram usage:       13 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 1
  2531 ;; This function calls:
  2532 ;;		_putch
  2533 ;; This function is called by:
  2534 ;;		_vfpfcnvrt
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538     02F1                     _fputc:	
  2539                           ;psect for function _fputc
  2540                           
  2541     02F1                     l1434:	
  2542                           ;incstack = 0
  2543                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2544                           
  2545     02F1  0872               	movf	fputc@fp,w
  2546     02F2  0473               	iorwf	fputc@fp+1,w
  2547     02F3  1903               	btfsc	3,2
  2548     02F4  2AF6               	goto	u1311
  2549     02F5  2AF7               	goto	u1310
  2550     02F6                     u1311:
  2551     02F6  2AFD               	goto	l1438
  2552     02F7                     u1310:
  2553     02F7                     l1436:
  2554     02F7  0872               	movf	fputc@fp,w
  2555     02F8  0473               	iorwf	fputc@fp+1,w
  2556     02F9  1D03               	btfss	3,2
  2557     02FA  2AFC               	goto	u1321
  2558     02FB  2AFD               	goto	u1320
  2559     02FC                     u1321:
  2560     02FC  2B04               	goto	l1440
  2561     02FD                     u1320:
  2562     02FD                     l1438:
  2563     02FD  0870               	movf	fputc@c,w
  2564     02FE  120A  158A  25AC  120A  118A  	fcall	_putch
  2565     0303  2B8A               	goto	l835
  2566     0304                     l1440:
  2567     0304  0872               	movf	fputc@fp,w
  2568     0305  3E09               	addlw	9
  2569     0306  00F4               	movwf	??_fputc
  2570     0307  0873               	movf	fputc@fp+1,w
  2571     0308  1803               	skipnc
  2572     0309  3E01               	addlw	1
  2573     030A  3E00               	addlw	0
  2574     030B  00F5               	movwf	??_fputc+1
  2575     030C  0874               	movf	??_fputc,w
  2576     030D  0084               	movwf	4
  2577     030E  1783               	bsf	3,7
  2578     030F  1C75               	btfss	??_fputc+1,0
  2579     0310  1383               	bcf	3,7
  2580     0311  0800               	movf	0,w
  2581     0312  00F6               	movwf	??_fputc+2
  2582     0313  0A84               	incf	4,f
  2583     0314  0800               	movf	0,w
  2584     0315  00F7               	movwf	??_fputc+3
  2585     0316  0876               	movf	??_fputc+2,w
  2586     0317  0477               	iorwf	??_fputc+3,w
  2587     0318  1903               	btfsc	3,2
  2588     0319  2B1B               	goto	u1331
  2589     031A  2B1C               	goto	u1330
  2590     031B                     u1331:
  2591     031B  2B4E               	goto	l1444
  2592     031C                     u1330:
  2593     031C                     l1442:
  2594     031C  0872               	movf	fputc@fp,w
  2595     031D  3E09               	addlw	9
  2596     031E  00F4               	movwf	??_fputc
  2597     031F  0873               	movf	fputc@fp+1,w
  2598     0320  1803               	skipnc
  2599     0321  3E01               	addlw	1
  2600     0322  3E00               	addlw	0
  2601     0323  00F5               	movwf	??_fputc+1
  2602     0324  0874               	movf	??_fputc,w
  2603     0325  0084               	movwf	4
  2604     0326  1783               	bsf	3,7
  2605     0327  1C75               	btfss	??_fputc+1,0
  2606     0328  1383               	bcf	3,7
  2607     0329  0800               	movf	0,w
  2608     032A  00F6               	movwf	??_fputc+2
  2609     032B  0A84               	incf	4,f
  2610     032C  0800               	movf	0,w
  2611     032D  00F7               	movwf	??_fputc+3
  2612     032E  0872               	movf	fputc@fp,w
  2613     032F  3E02               	addlw	2
  2614     0330  00F8               	movwf	??_fputc+4
  2615     0331  0873               	movf	fputc@fp+1,w
  2616     0332  1803               	skipnc
  2617     0333  3E01               	addlw	1
  2618     0334  3E00               	addlw	0
  2619     0335  00F9               	movwf	??_fputc+5
  2620     0336  0878               	movf	??_fputc+4,w
  2621     0337  0084               	movwf	4
  2622     0338  1783               	bsf	3,7
  2623     0339  1C79               	btfss	??_fputc+5,0
  2624     033A  1383               	bcf	3,7
  2625     033B  0800               	movf	0,w
  2626     033C  00FA               	movwf	??_fputc+6
  2627     033D  0A84               	incf	4,f
  2628     033E  0800               	movf	0,w
  2629     033F  00FB               	movwf	??_fputc+7
  2630     0340  087B               	movf	??_fputc+7,w
  2631     0341  3A80               	xorlw	128
  2632     0342  00FC               	movwf	??_fputc+8
  2633     0343  0877               	movf	??_fputc+3,w
  2634     0344  3A80               	xorlw	128
  2635     0345  027C               	subwf	??_fputc+8,w
  2636     0346  1D03               	skipz
  2637     0347  2B4A               	goto	u1345
  2638     0348  0876               	movf	??_fputc+2,w
  2639     0349  027A               	subwf	??_fputc+6,w
  2640     034A                     u1345:
  2641     034A  1803               	skipnc
  2642     034B  2B4D               	goto	u1341
  2643     034C  2B4E               	goto	u1340
  2644     034D                     u1341:
  2645     034D  2B8A               	goto	l835
  2646     034E                     u1340:
  2647     034E                     l1444:
  2648     034E  0872               	movf	fputc@fp,w
  2649     034F  0084               	movwf	4
  2650     0350  1783               	bsf	3,7
  2651     0351  1C73               	btfss	fputc@fp+1,0
  2652     0352  1383               	bcf	3,7
  2653     0353  0800               	movf	0,w
  2654     0354  00F4               	movwf	??_fputc
  2655     0355  0A84               	incf	4,f
  2656     0356  0800               	movf	0,w
  2657     0357  00F5               	movwf	??_fputc+1
  2658     0358  0872               	movf	fputc@fp,w
  2659     0359  3E02               	addlw	2
  2660     035A  00F6               	movwf	??_fputc+2
  2661     035B  0873               	movf	fputc@fp+1,w
  2662     035C  1803               	skipnc
  2663     035D  3E01               	addlw	1
  2664     035E  3E00               	addlw	0
  2665     035F  00F7               	movwf	??_fputc+3
  2666     0360  0876               	movf	??_fputc+2,w
  2667     0361  0084               	movwf	4
  2668     0362  1783               	bsf	3,7
  2669     0363  1C77               	btfss	??_fputc+3,0
  2670     0364  1383               	bcf	3,7
  2671     0365  0800               	movf	0,w
  2672     0366  0774               	addwf	??_fputc,w
  2673     0367  00F9               	movwf	??_fputc+5
  2674     0368  0875               	movf	??_fputc+1,w
  2675     0369  00F8               	movwf	??_fputc+4
  2676     036A  1803               	skipnc
  2677     036B  0AF8               	incf	??_fputc+4,f
  2678     036C  1F80               	btfss	0,7
  2679     036D  2B6F               	goto	u1350
  2680     036E  03F8               	decf	??_fputc+4,f
  2681     036F                     u1350:
  2682     036F  0878               	movf	??_fputc+4,w
  2683     0370  00FA               	movwf	??_fputc+6
  2684     0371  0879               	movf	??_fputc+5,w
  2685     0372  0084               	movwf	4
  2686     0373  1783               	bsf	3,7
  2687     0374  1C7A               	btfss	??_fputc+6,0
  2688     0375  1383               	bcf	3,7
  2689     0376  0870               	movf	fputc@c,w
  2690     0377  0080               	movwf	0
  2691     0378  0872               	movf	fputc@fp,w
  2692     0379  3E02               	addlw	2
  2693     037A  00F4               	movwf	??_fputc
  2694     037B  0873               	movf	fputc@fp+1,w
  2695     037C  1803               	skipnc
  2696     037D  3E01               	addlw	1
  2697     037E  3E00               	addlw	0
  2698     037F  00F5               	movwf	??_fputc+1
  2699     0380  0874               	movf	??_fputc,w
  2700     0381  0084               	movwf	4
  2701     0382  1783               	bsf	3,7
  2702     0383  1C75               	btfss	??_fputc+1,0
  2703     0384  1383               	bcf	3,7
  2704     0385  3001               	movlw	1
  2705     0386  0780               	addwf	0,f
  2706     0387  0A84               	incf	4,f
  2707     0388  1803               	skipnc
  2708     0389  0A80               	incf	0,f
  2709     038A                     l835:
  2710     038A  0008               	return
  2711     038B                     __end_of_fputc:
  2712                           
  2713                           	psect	text11
  2714     0DAC                     __ptext11:	
  2715 ;; *************** function _putch *****************
  2716 ;; Defined at:
  2717 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  c               1    wreg     unsigned char 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  c               1    0[COMMON] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0
  2734 ;;      Totals:         0       0       0       0       0
  2735 ;;Total ram usage:        0 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_fputc
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744     0DAC                     _putch:	
  2745                           ;psect for function _putch
  2746                           
  2747     0DAC                     l846:	
  2748                           ;incstack = 0
  2749                           ; Regs used in _putch: [wreg]
  2750                           
  2751     0DAC  0008               	return
  2752     0DAD                     __end_of_putch:
  2753                           
  2754                           	psect	text12
  2755     0F35                     __ptext12:	
  2756 ;; *************** function ___lwmod *****************
  2757 ;; Defined at:
  2758 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  divisor         2    0[COMMON] unsigned int 
  2761 ;;  dividend        2    2[COMMON] unsigned int 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  counter         1    4[COMMON] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  2    0[COMMON] unsigned int 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         4       0       0       0       0
  2774 ;;      Locals:         1       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0
  2776 ;;      Totals:         5       0       0       0       0
  2777 ;;Total ram usage:        5 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_vfpfcnvrt
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786     0F35                     ___lwmod:	
  2787                           ;psect for function ___lwmod
  2788                           
  2789     0F35                     l1412:	
  2790                           ;incstack = 0
  2791                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2792                           
  2793     0F35  0870               	movf	___lwmod@divisor,w
  2794     0F36  0471               	iorwf	___lwmod@divisor+1,w
  2795     0F37  1903               	btfsc	3,2
  2796     0F38  2F3A               	goto	u1251
  2797     0F39  2F3B               	goto	u1250
  2798     0F3A                     u1251:
  2799     0F3A  2F68               	goto	l1430
  2800     0F3B                     u1250:
  2801     0F3B                     l1414:
  2802     0F3B  3001               	movlw	1
  2803     0F3C  00F4               	movwf	___lwmod@counter
  2804     0F3D  2F47               	goto	l1420
  2805     0F3E                     l1416:
  2806     0F3E  3001               	movlw	1
  2807     0F3F                     u1265:
  2808     0F3F  1003               	clrc
  2809     0F40  0DF0               	rlf	___lwmod@divisor,f
  2810     0F41  0DF1               	rlf	___lwmod@divisor+1,f
  2811     0F42  3EFF               	addlw	-1
  2812     0F43  1D03               	skipz
  2813     0F44  2F3F               	goto	u1265
  2814     0F45                     l1418:
  2815     0F45  3001               	movlw	1
  2816     0F46  07F4               	addwf	___lwmod@counter,f
  2817     0F47                     l1420:
  2818     0F47  1FF1               	btfss	___lwmod@divisor+1,7
  2819     0F48  2F4A               	goto	u1271
  2820     0F49  2F4B               	goto	u1270
  2821     0F4A                     u1271:
  2822     0F4A  2F3E               	goto	l1416
  2823     0F4B                     u1270:
  2824     0F4B                     l1422:
  2825     0F4B  0871               	movf	___lwmod@divisor+1,w
  2826     0F4C  0273               	subwf	___lwmod@dividend+1,w
  2827     0F4D  1D03               	skipz
  2828     0F4E  2F51               	goto	u1285
  2829     0F4F  0870               	movf	___lwmod@divisor,w
  2830     0F50  0272               	subwf	___lwmod@dividend,w
  2831     0F51                     u1285:
  2832     0F51  1C03               	skipc
  2833     0F52  2F54               	goto	u1281
  2834     0F53  2F55               	goto	u1280
  2835     0F54                     u1281:
  2836     0F54  2F5B               	goto	l1426
  2837     0F55                     u1280:
  2838     0F55                     l1424:
  2839     0F55  0870               	movf	___lwmod@divisor,w
  2840     0F56  02F2               	subwf	___lwmod@dividend,f
  2841     0F57  0871               	movf	___lwmod@divisor+1,w
  2842     0F58  1C03               	skipc
  2843     0F59  03F3               	decf	___lwmod@dividend+1,f
  2844     0F5A  02F3               	subwf	___lwmod@dividend+1,f
  2845     0F5B                     l1426:
  2846     0F5B  3001               	movlw	1
  2847     0F5C                     u1295:
  2848     0F5C  1003               	clrc
  2849     0F5D  0CF1               	rrf	___lwmod@divisor+1,f
  2850     0F5E  0CF0               	rrf	___lwmod@divisor,f
  2851     0F5F  3EFF               	addlw	-1
  2852     0F60  1D03               	skipz
  2853     0F61  2F5C               	goto	u1295
  2854     0F62                     l1428:
  2855     0F62  3001               	movlw	1
  2856     0F63  02F4               	subwf	___lwmod@counter,f
  2857     0F64  1D03               	btfss	3,2
  2858     0F65  2F67               	goto	u1301
  2859     0F66  2F68               	goto	u1300
  2860     0F67                     u1301:
  2861     0F67  2F4B               	goto	l1422
  2862     0F68                     u1300:
  2863     0F68                     l1430:
  2864     0F68  0873               	movf	___lwmod@dividend+1,w
  2865     0F69  00F1               	movwf	?___lwmod+1
  2866     0F6A  0872               	movf	___lwmod@dividend,w
  2867     0F6B  00F0               	movwf	?___lwmod
  2868     0F6C                     l606:
  2869     0F6C  0008               	return
  2870     0F6D                     __end_of___lwmod:
  2871                           
  2872                           	psect	text13
  2873     0F6D                     __ptext13:	
  2874 ;; *************** function ___lwdiv *****************
  2875 ;; Defined at:
  2876 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  divisor         2    0[COMMON] unsigned int 
  2879 ;;  dividend        2    2[COMMON] unsigned int 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  quotient        2    4[COMMON] unsigned int 
  2882 ;;  counter         1    6[COMMON] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  2    0[COMMON] unsigned int 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2892 ;;      Params:         4       0       0       0       0
  2893 ;;      Locals:         3       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0
  2895 ;;      Totals:         7       0       0       0       0
  2896 ;;Total ram usage:        7 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_vfpfcnvrt
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905     0F6D                     ___lwdiv:	
  2906                           ;psect for function ___lwdiv
  2907                           
  2908     0F6D                     l1386:	
  2909                           ;incstack = 0
  2910                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2911                           
  2912     0F6D  01F4               	clrf	___lwdiv@quotient
  2913     0F6E  01F5               	clrf	___lwdiv@quotient+1
  2914     0F6F                     l1388:
  2915     0F6F  0870               	movf	___lwdiv@divisor,w
  2916     0F70  0471               	iorwf	___lwdiv@divisor+1,w
  2917     0F71  1903               	btfsc	3,2
  2918     0F72  2F74               	goto	u1181
  2919     0F73  2F75               	goto	u1180
  2920     0F74                     u1181:
  2921     0F74  2FAA               	goto	l1408
  2922     0F75                     u1180:
  2923     0F75                     l1390:
  2924     0F75  3001               	movlw	1
  2925     0F76  00F6               	movwf	___lwdiv@counter
  2926     0F77  2F81               	goto	l1396
  2927     0F78                     l1392:
  2928     0F78  3001               	movlw	1
  2929     0F79                     u1195:
  2930     0F79  1003               	clrc
  2931     0F7A  0DF0               	rlf	___lwdiv@divisor,f
  2932     0F7B  0DF1               	rlf	___lwdiv@divisor+1,f
  2933     0F7C  3EFF               	addlw	-1
  2934     0F7D  1D03               	skipz
  2935     0F7E  2F79               	goto	u1195
  2936     0F7F                     l1394:
  2937     0F7F  3001               	movlw	1
  2938     0F80  07F6               	addwf	___lwdiv@counter,f
  2939     0F81                     l1396:
  2940     0F81  1FF1               	btfss	___lwdiv@divisor+1,7
  2941     0F82  2F84               	goto	u1201
  2942     0F83  2F85               	goto	u1200
  2943     0F84                     u1201:
  2944     0F84  2F78               	goto	l1392
  2945     0F85                     u1200:
  2946     0F85                     l1398:
  2947     0F85  3001               	movlw	1
  2948     0F86                     u1215:
  2949     0F86  1003               	clrc
  2950     0F87  0DF4               	rlf	___lwdiv@quotient,f
  2951     0F88  0DF5               	rlf	___lwdiv@quotient+1,f
  2952     0F89  3EFF               	addlw	-1
  2953     0F8A  1D03               	skipz
  2954     0F8B  2F86               	goto	u1215
  2955     0F8C  0871               	movf	___lwdiv@divisor+1,w
  2956     0F8D  0273               	subwf	___lwdiv@dividend+1,w
  2957     0F8E  1D03               	skipz
  2958     0F8F  2F92               	goto	u1225
  2959     0F90  0870               	movf	___lwdiv@divisor,w
  2960     0F91  0272               	subwf	___lwdiv@dividend,w
  2961     0F92                     u1225:
  2962     0F92  1C03               	skipc
  2963     0F93  2F95               	goto	u1221
  2964     0F94  2F96               	goto	u1220
  2965     0F95                     u1221:
  2966     0F95  2F9D               	goto	l1404
  2967     0F96                     u1220:
  2968     0F96                     l1400:
  2969     0F96  0870               	movf	___lwdiv@divisor,w
  2970     0F97  02F2               	subwf	___lwdiv@dividend,f
  2971     0F98  0871               	movf	___lwdiv@divisor+1,w
  2972     0F99  1C03               	skipc
  2973     0F9A  03F3               	decf	___lwdiv@dividend+1,f
  2974     0F9B  02F3               	subwf	___lwdiv@dividend+1,f
  2975     0F9C                     l1402:
  2976     0F9C  1474               	bsf	___lwdiv@quotient,0
  2977     0F9D                     l1404:
  2978     0F9D  3001               	movlw	1
  2979     0F9E                     u1235:
  2980     0F9E  1003               	clrc
  2981     0F9F  0CF1               	rrf	___lwdiv@divisor+1,f
  2982     0FA0  0CF0               	rrf	___lwdiv@divisor,f
  2983     0FA1  3EFF               	addlw	-1
  2984     0FA2  1D03               	skipz
  2985     0FA3  2F9E               	goto	u1235
  2986     0FA4                     l1406:
  2987     0FA4  3001               	movlw	1
  2988     0FA5  02F6               	subwf	___lwdiv@counter,f
  2989     0FA6  1D03               	btfss	3,2
  2990     0FA7  2FA9               	goto	u1241
  2991     0FA8  2FAA               	goto	u1240
  2992     0FA9                     u1241:
  2993     0FA9  2F85               	goto	l1398
  2994     0FAA                     u1240:
  2995     0FAA                     l1408:
  2996     0FAA  0875               	movf	___lwdiv@quotient+1,w
  2997     0FAB  00F1               	movwf	?___lwdiv+1
  2998     0FAC  0874               	movf	___lwdiv@quotient,w
  2999     0FAD  00F0               	movwf	?___lwdiv
  3000     0FAE                     l596:
  3001     0FAE  0008               	return
  3002     0FAF                     __end_of___lwdiv:
  3003                           
  3004                           	psect	text14
  3005     0EDE                     __ptext14:	
  3006 ;; *************** function _Lcd_String *****************
  3007 ;; Defined at:
  3008 ;;		line 208 in file "proje.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  str             2    6[COMMON] PTR const unsigned char 
  3011 ;;		 -> STR_17(8), STR_16(7), STR_15(11), STR_14(9), 
  3012 ;;		 -> STR_13(16), STR_12(17), STR_11(11), STR_10(12), 
  3013 ;;		 -> STR_9(16), STR_8(8), STR_7(12), STR_6(6), 
  3014 ;;		 -> STR_5(8), STR_4(7), Lcd_Number@buffer(10), STR_2(18), 
  3015 ;;		 -> STR_1(7), 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3027 ;;      Params:         2       0       0       0       0
  3028 ;;      Locals:         0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0
  3030 ;;      Totals:         2       0       0       0       0
  3031 ;;Total ram usage:        2 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 2
  3034 ;; This function calls:
  3035 ;;		_Lcd_Char
  3036 ;; This function is called by:
  3037 ;;		_checkInvalidButtonPress
  3038 ;;		_Lcd_Number
  3039 ;;		_updateScoreDisplay
  3040 ;;		_updateHighScore
  3041 ;;		_waitForStart
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046     0EDE                     _Lcd_String:	
  3047                           ;psect for function _Lcd_String
  3048                           
  3049     0EDE                     l1562:	
  3050                           ;incstack = 0
  3051                           ; Regs used in _Lcd_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3052                           
  3053                           
  3054                           ;proje.c: 209:     while (*str)
  3055     0EDE  2EF3               	goto	l1568
  3056     0EDF                     l1564:
  3057                           
  3058                           ;proje.c: 210:         Lcd_Char(*str++);
  3059     0EDF  0877               	movf	Lcd_String@str+1,w
  3060     0EE0  00FF               	movwf	btemp+1
  3061     0EE1  0876               	movf	Lcd_String@str,w
  3062     0EE2  0084               	movwf	4
  3063     0EE3  120A  118A  2003  120A  158A  	fcall	stringtab
  3064     0EE8  120A  118A  2444  120A  158A  	fcall	_Lcd_Char
  3065     0EED                     l1566:
  3066     0EED  3001               	movlw	1
  3067     0EEE  07F6               	addwf	Lcd_String@str,f
  3068     0EEF  1803               	skipnc
  3069     0EF0  0AF7               	incf	Lcd_String@str+1,f
  3070     0EF1  3000               	movlw	0
  3071     0EF2  07F7               	addwf	Lcd_String@str+1,f
  3072     0EF3                     l1568:
  3073                           
  3074                           ;proje.c: 209:     while (*str)
  3075     0EF3  0877               	movf	Lcd_String@str+1,w
  3076     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3077     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  3078     0EF6  00FF               	movwf	btemp+1
  3079     0EF7  0876               	movf	Lcd_String@str,w
  3080     0EF8  0084               	movwf	4
  3081     0EF9  120A  118A  2003  120A  158A  	fcall	stringtab
  3082     0EFE  3A00               	xorlw	0
  3083     0EFF  1D03               	skipz
  3084     0F00  2F02               	goto	u1901
  3085     0F01  2F03               	goto	u1900
  3086     0F02                     u1901:
  3087     0F02  2EDF               	goto	l1564
  3088     0F03                     u1900:
  3089     0F03                     l170:
  3090     0F03  0008               	return
  3091     0F04                     __end_of_Lcd_String:
  3092                           
  3093                           	psect	text15
  3094     0444                     __ptext15:	
  3095 ;; *************** function _Lcd_Char *****************
  3096 ;; Defined at:
  3097 ;;		line 170 in file "proje.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  data            1    wreg     unsigned char 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  data            1    5[COMMON] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0, pclath, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3111 ;;      Params:         0       0       0       0       0
  3112 ;;      Locals:         1       0       0       0       0
  3113 ;;      Temps:          1       0       0       0       0
  3114 ;;      Totals:         2       0       0       0       0
  3115 ;;Total ram usage:        2 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 1
  3118 ;; This function calls:
  3119 ;;		_delay_ms
  3120 ;; This function is called by:
  3121 ;;		_Lcd_String
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125     0444                     _Lcd_Char:	
  3126                           ;psect for function _Lcd_Char
  3127                           
  3128                           
  3129                           ;incstack = 0
  3130                           ; Regs used in _Lcd_Char: [wreg+status,2+status,0+pclath+cstack]
  3131                           ;Lcd_Char@data stored from wreg
  3132     0444  00F5               	movwf	Lcd_Char@data
  3133     0445                     l1520:
  3134                           
  3135                           ;proje.c: 171:     RC0 = 1;
  3136     0445  1283               	bcf	3,5	;RP0=0, select bank0
  3137     0446  1303               	bcf	3,6	;RP1=0, select bank0
  3138     0447  1407               	bsf	7,0	;volatile
  3139     0448                     l1522:
  3140                           
  3141                           ;proje.c: 172:     RC2 = (data >> 4) & 1;
  3142     0448  0875               	movf	Lcd_Char@data,w
  3143     0449  00F4               	movwf	??_Lcd_Char
  3144     044A  3004               	movlw	4
  3145     044B                     u1655:
  3146     044B  1003               	clrc
  3147     044C  0CF4               	rrf	??_Lcd_Char,f
  3148     044D  3EFF               	addlw	-1
  3149     044E  1D03               	skipz
  3150     044F  2C4B               	goto	u1655
  3151     0450  1874               	btfsc	??_Lcd_Char,0
  3152     0451  2C53               	goto	u1661
  3153     0452  2C57               	goto	u1660
  3154     0453                     u1661:
  3155     0453  1283               	bcf	3,5	;RP0=0, select bank0
  3156     0454  1303               	bcf	3,6	;RP1=0, select bank0
  3157     0455  1507               	bsf	7,2	;volatile
  3158     0456  2C5A               	goto	u1674
  3159     0457                     u1660:
  3160     0457  1283               	bcf	3,5	;RP0=0, select bank0
  3161     0458  1303               	bcf	3,6	;RP1=0, select bank0
  3162     0459  1107               	bcf	7,2	;volatile
  3163     045A                     u1674:
  3164                           
  3165                           ;proje.c: 173:     RC3 = (data >> 5) & 1;
  3166     045A  0875               	movf	Lcd_Char@data,w
  3167     045B  00F4               	movwf	??_Lcd_Char
  3168     045C  3005               	movlw	5
  3169     045D                     u1685:
  3170     045D  1003               	clrc
  3171     045E  0CF4               	rrf	??_Lcd_Char,f
  3172     045F  3EFF               	addlw	-1
  3173     0460  1D03               	skipz
  3174     0461  2C5D               	goto	u1685
  3175     0462  1874               	btfsc	??_Lcd_Char,0
  3176     0463  2C65               	goto	u1691
  3177     0464  2C69               	goto	u1690
  3178     0465                     u1691:
  3179     0465  1283               	bcf	3,5	;RP0=0, select bank0
  3180     0466  1303               	bcf	3,6	;RP1=0, select bank0
  3181     0467  1587               	bsf	7,3	;volatile
  3182     0468  2C6C               	goto	u1704
  3183     0469                     u1690:
  3184     0469  1283               	bcf	3,5	;RP0=0, select bank0
  3185     046A  1303               	bcf	3,6	;RP1=0, select bank0
  3186     046B  1187               	bcf	7,3	;volatile
  3187     046C                     u1704:
  3188                           
  3189                           ;proje.c: 174:     RC4 = (data >> 6) & 1;
  3190     046C  0875               	movf	Lcd_Char@data,w
  3191     046D  00F4               	movwf	??_Lcd_Char
  3192     046E  3006               	movlw	6
  3193     046F                     u1715:
  3194     046F  1003               	clrc
  3195     0470  0CF4               	rrf	??_Lcd_Char,f
  3196     0471  3EFF               	addlw	-1
  3197     0472  1D03               	skipz
  3198     0473  2C6F               	goto	u1715
  3199     0474  1874               	btfsc	??_Lcd_Char,0
  3200     0475  2C77               	goto	u1721
  3201     0476  2C7B               	goto	u1720
  3202     0477                     u1721:
  3203     0477  1283               	bcf	3,5	;RP0=0, select bank0
  3204     0478  1303               	bcf	3,6	;RP1=0, select bank0
  3205     0479  1607               	bsf	7,4	;volatile
  3206     047A  2C7E               	goto	u1734
  3207     047B                     u1720:
  3208     047B  1283               	bcf	3,5	;RP0=0, select bank0
  3209     047C  1303               	bcf	3,6	;RP1=0, select bank0
  3210     047D  1207               	bcf	7,4	;volatile
  3211     047E                     u1734:
  3212                           
  3213                           ;proje.c: 175:     RC5 = (data >> 7) & 1;
  3214     047E  0875               	movf	Lcd_Char@data,w
  3215     047F  00F4               	movwf	??_Lcd_Char
  3216     0480  3007               	movlw	7
  3217     0481                     u1745:
  3218     0481  1003               	clrc
  3219     0482  0CF4               	rrf	??_Lcd_Char,f
  3220     0483  3EFF               	addlw	-1
  3221     0484  1D03               	skipz
  3222     0485  2C81               	goto	u1745
  3223     0486  1874               	btfsc	??_Lcd_Char,0
  3224     0487  2C89               	goto	u1751
  3225     0488  2C8D               	goto	u1750
  3226     0489                     u1751:
  3227     0489  1283               	bcf	3,5	;RP0=0, select bank0
  3228     048A  1303               	bcf	3,6	;RP1=0, select bank0
  3229     048B  1687               	bsf	7,5	;volatile
  3230     048C  2C90               	goto	u1764
  3231     048D                     u1750:
  3232     048D  1283               	bcf	3,5	;RP0=0, select bank0
  3233     048E  1303               	bcf	3,6	;RP1=0, select bank0
  3234     048F  1287               	bcf	7,5	;volatile
  3235     0490                     u1764:
  3236     0490                     l1524:
  3237                           
  3238                           ;proje.c: 176:     RC1 = 1; delay_ms(1); RC1 = 0; delay_ms(2);
  3239     0490  1487               	bsf	7,1	;volatile
  3240     0491                     l1526:
  3241     0491  3001               	movlw	1
  3242     0492  00F0               	movwf	delay_ms@ms
  3243     0493  3000               	movlw	0
  3244     0494  00F1               	movwf	delay_ms@ms+1
  3245     0495  120A  158A  261D  120A  118A  	fcall	_delay_ms
  3246     049A                     l1528:
  3247     049A  1283               	bcf	3,5	;RP0=0, select bank0
  3248     049B  1303               	bcf	3,6	;RP1=0, select bank0
  3249     049C  1087               	bcf	7,1	;volatile
  3250     049D                     l1530:
  3251     049D  3002               	movlw	2
  3252     049E  00F0               	movwf	delay_ms@ms
  3253     049F  3000               	movlw	0
  3254     04A0  00F1               	movwf	delay_ms@ms+1
  3255     04A1  120A  158A  261D  120A  118A  	fcall	_delay_ms
  3256     04A6                     l1532:
  3257                           
  3258                           ;proje.c: 177:     RC2 = (data >> 0) & 1;
  3259     04A6  1875               	btfsc	Lcd_Char@data,0
  3260     04A7  2CA9               	goto	u1771
  3261     04A8  2CAD               	goto	u1770
  3262     04A9                     u1771:
  3263     04A9  1283               	bcf	3,5	;RP0=0, select bank0
  3264     04AA  1303               	bcf	3,6	;RP1=0, select bank0
  3265     04AB  1507               	bsf	7,2	;volatile
  3266     04AC  2CB0               	goto	u1784
  3267     04AD                     u1770:
  3268     04AD  1283               	bcf	3,5	;RP0=0, select bank0
  3269     04AE  1303               	bcf	3,6	;RP1=0, select bank0
  3270     04AF  1107               	bcf	7,2	;volatile
  3271     04B0                     u1784:
  3272                           
  3273                           ;proje.c: 178:     RC3 = (data >> 1) & 1;
  3274     04B0  0875               	movf	Lcd_Char@data,w
  3275     04B1  00F4               	movwf	??_Lcd_Char
  3276     04B2  3001               	movlw	1
  3277     04B3                     u1795:
  3278     04B3  1003               	clrc
  3279     04B4  0CF4               	rrf	??_Lcd_Char,f
  3280     04B5  3EFF               	addlw	-1
  3281     04B6  1D03               	skipz
  3282     04B7  2CB3               	goto	u1795
  3283     04B8  1874               	btfsc	??_Lcd_Char,0
  3284     04B9  2CBB               	goto	u1801
  3285     04BA  2CBF               	goto	u1800
  3286     04BB                     u1801:
  3287     04BB  1283               	bcf	3,5	;RP0=0, select bank0
  3288     04BC  1303               	bcf	3,6	;RP1=0, select bank0
  3289     04BD  1587               	bsf	7,3	;volatile
  3290     04BE  2CC2               	goto	u1814
  3291     04BF                     u1800:
  3292     04BF  1283               	bcf	3,5	;RP0=0, select bank0
  3293     04C0  1303               	bcf	3,6	;RP1=0, select bank0
  3294     04C1  1187               	bcf	7,3	;volatile
  3295     04C2                     u1814:
  3296                           
  3297                           ;proje.c: 179:     RC4 = (data >> 2) & 1;
  3298     04C2  0875               	movf	Lcd_Char@data,w
  3299     04C3  00F4               	movwf	??_Lcd_Char
  3300     04C4  3002               	movlw	2
  3301     04C5                     u1825:
  3302     04C5  1003               	clrc
  3303     04C6  0CF4               	rrf	??_Lcd_Char,f
  3304     04C7  3EFF               	addlw	-1
  3305     04C8  1D03               	skipz
  3306     04C9  2CC5               	goto	u1825
  3307     04CA  1874               	btfsc	??_Lcd_Char,0
  3308     04CB  2CCD               	goto	u1831
  3309     04CC  2CD1               	goto	u1830
  3310     04CD                     u1831:
  3311     04CD  1283               	bcf	3,5	;RP0=0, select bank0
  3312     04CE  1303               	bcf	3,6	;RP1=0, select bank0
  3313     04CF  1607               	bsf	7,4	;volatile
  3314     04D0  2CD4               	goto	u1844
  3315     04D1                     u1830:
  3316     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3317     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3318     04D3  1207               	bcf	7,4	;volatile
  3319     04D4                     u1844:
  3320                           
  3321                           ;proje.c: 180:     RC5 = (data >> 3) & 1;
  3322     04D4  0875               	movf	Lcd_Char@data,w
  3323     04D5  00F4               	movwf	??_Lcd_Char
  3324     04D6  3003               	movlw	3
  3325     04D7                     u1855:
  3326     04D7  1003               	clrc
  3327     04D8  0CF4               	rrf	??_Lcd_Char,f
  3328     04D9  3EFF               	addlw	-1
  3329     04DA  1D03               	skipz
  3330     04DB  2CD7               	goto	u1855
  3331     04DC  1874               	btfsc	??_Lcd_Char,0
  3332     04DD  2CDF               	goto	u1861
  3333     04DE  2CE3               	goto	u1860
  3334     04DF                     u1861:
  3335     04DF  1283               	bcf	3,5	;RP0=0, select bank0
  3336     04E0  1303               	bcf	3,6	;RP1=0, select bank0
  3337     04E1  1687               	bsf	7,5	;volatile
  3338     04E2  2CE6               	goto	u1874
  3339     04E3                     u1860:
  3340     04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3341     04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3342     04E5  1287               	bcf	7,5	;volatile
  3343     04E6                     u1874:
  3344     04E6                     l1534:
  3345                           
  3346                           ;proje.c: 181:     RC1 = 1; delay_ms(1); RC1 = 0; delay_ms(2);
  3347     04E6  1487               	bsf	7,1	;volatile
  3348     04E7                     l1536:
  3349     04E7  3001               	movlw	1
  3350     04E8  00F0               	movwf	delay_ms@ms
  3351     04E9  3000               	movlw	0
  3352     04EA  00F1               	movwf	delay_ms@ms+1
  3353     04EB  120A  158A  261D  120A  118A  	fcall	_delay_ms
  3354     04F0                     l1538:
  3355     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  3356     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  3357     04F2  1087               	bcf	7,1	;volatile
  3358     04F3                     l1540:
  3359     04F3  3002               	movlw	2
  3360     04F4  00F0               	movwf	delay_ms@ms
  3361     04F5  3000               	movlw	0
  3362     04F6  00F1               	movwf	delay_ms@ms+1
  3363     04F7  120A  158A  261D  120A  118A  	fcall	_delay_ms
  3364     04FC                     l153:
  3365     04FC  0008               	return
  3366     04FD                     __end_of_Lcd_Char:
  3367                           
  3368                           	psect	text16
  3369     0DE1                     __ptext16:	
  3370 ;; *************** function _Lcd_Clear *****************
  3371 ;; Defined at:
  3372 ;;		line 194 in file "proje.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, pclath, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 2
  3393 ;; This function calls:
  3394 ;;		_Lcd_Command
  3395 ;;		_delay_ms
  3396 ;; This function is called by:
  3397 ;;		_checkInvalidButtonPress
  3398 ;;		_updateScoreDisplay
  3399 ;;		_updateHighScore
  3400 ;;		_waitForStart
  3401 ;;		_main
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405     0DE1                     _Lcd_Clear:	
  3406                           ;psect for function _Lcd_Clear
  3407                           
  3408     0DE1                     l1552:	
  3409                           ;incstack = 0
  3410                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3411                           
  3412                           
  3413                           ;proje.c: 195:     Lcd_Command(0x01);
  3414     0DE1  3001               	movlw	1
  3415     0DE2  120A  118A  238B  120A  158A  	fcall	_Lcd_Command
  3416                           
  3417                           ;proje.c: 196:     delay_ms(2);
  3418     0DE7  3002               	movlw	2
  3419     0DE8  00F0               	movwf	delay_ms@ms
  3420     0DE9  3000               	movlw	0
  3421     0DEA  00F1               	movwf	delay_ms@ms+1
  3422     0DEB  120A  158A  261D  120A  158A  	fcall	_delay_ms
  3423     0DF0                     l159:
  3424     0DF0  0008               	return
  3425     0DF1                     __end_of_Lcd_Clear:
  3426                           
  3427                           	psect	text17
  3428     0DC5                     __ptext17:	
  3429 ;; *************** function _srand *****************
  3430 ;; Defined at:
  3431 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\rand.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  s               2    0[COMMON] unsigned int 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3445 ;;      Params:         2       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0
  3448 ;;      Totals:         2       0       0       0       0
  3449 ;;Total ram usage:        2 bytes
  3450 ;; Hardware stack levels used: 1
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458     0DC5                     _srand:	
  3459                           ;psect for function _srand
  3460                           
  3461     0DC5                     l1844:	
  3462                           ;incstack = 0
  3463                           ; Regs used in _srand: [wreg+status,2+status,0]
  3464                           
  3465     0DC5  0870               	movf	srand@s,w
  3466     0DC6  3EFF               	addlw	255
  3467     0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  3468     0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  3469     0DC9  00E0               	movwf	_seed
  3470     0DCA  0871               	movf	srand@s+1,w
  3471     0DCB  1803               	skipnc
  3472     0DCC  3E01               	addlw	1
  3473     0DCD  3EFF               	addlw	255
  3474     0DCE  00E1               	movwf	_seed+1
  3475     0DCF  01E2               	clrf	_seed+2
  3476     0DD0  01E3               	clrf	_seed+3
  3477     0DD1                     l851:
  3478     0DD1  0008               	return
  3479     0DD2                     __end_of_srand:
  3480                           
  3481                           	psect	text18
  3482     0281                     __ptext18:	
  3483 ;; *************** function _showSequence *****************
  3484 ;; Defined at:
  3485 ;;		line 80 in file "proje.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  i               2    6[COMMON] int 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3499 ;;      Params:         0       0       0       0       0
  3500 ;;      Locals:         2       0       0       0       0
  3501 ;;      Temps:          2       0       0       0       0
  3502 ;;      Totals:         4       0       0       0       0
  3503 ;;Total ram usage:        4 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; Hardware stack levels required when called: 1
  3506 ;; This function calls:
  3507 ;;		_delay_ms
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513     0281                     _showSequence:	
  3514                           ;psect for function _showSequence
  3515                           
  3516     0281                     l1670:	
  3517                           ;incstack = 0
  3518                           ; Regs used in _showSequence: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3519                           
  3520                           
  3521                           ;proje.c: 81:     for (int i = 0; i < level; i++) {
  3522     0281  01F6               	clrf	showSequence@i
  3523     0282  01F7               	clrf	showSequence@i+1
  3524     0283  2AE4               	goto	l1696
  3525     0284                     l100:	
  3526                           ;proje.c: 83:             case 1: RD0 = 1; delay_ms(showSpeed); RD0 = 0; break;
  3527                           
  3528     0284  1408               	bsf	8,0	;volatile
  3529     0285                     l1672:
  3530     0285  0865               	movf	_showSpeed+1,w
  3531     0286  00F1               	movwf	delay_ms@ms+1
  3532     0287  0864               	movf	_showSpeed,w
  3533     0288  00F0               	movwf	delay_ms@ms
  3534     0289  120A  158A  261D  120A  118A  	fcall	_delay_ms
  3535     028E                     l1674:
  3536     028E  1283               	bcf	3,5	;RP0=0, select bank0
  3537     028F  1303               	bcf	3,6	;RP1=0, select bank0
  3538     0290  1008               	bcf	8,0	;volatile
  3539     0291  2ACE               	goto	l1692
  3540     0292                     l102:	
  3541                           ;proje.c: 84:             case 2: RD1 = 1; delay_ms(showSpeed); RD1 = 0; break;
  3542                           
  3543     0292  1488               	bsf	8,1	;volatile
  3544     0293                     l1676:
  3545     0293  0865               	movf	_showSpeed+1,w
  3546     0294  00F1               	movwf	delay_ms@ms+1
  3547     0295  0864               	movf	_showSpeed,w
  3548     0296  00F0               	movwf	delay_ms@ms
  3549     0297  120A  158A  261D  120A  118A  	fcall	_delay_ms
  3550     029C                     l1678:
  3551     029C  1283               	bcf	3,5	;RP0=0, select bank0
  3552     029D  1303               	bcf	3,6	;RP1=0, select bank0
  3553     029E  1088               	bcf	8,1	;volatile
  3554     029F  2ACE               	goto	l1692
  3555     02A0                     l103:	
  3556                           ;proje.c: 85:             case 3: RD2 = 1; delay_ms(showSpeed); RD2 = 0; break;
  3557                           
  3558     02A0  1508               	bsf	8,2	;volatile
  3559     02A1                     l1680:
  3560     02A1  0865               	movf	_showSpeed+1,w
  3561     02A2  00F1               	movwf	delay_ms@ms+1
  3562     02A3  0864               	movf	_showSpeed,w
  3563     02A4  00F0               	movwf	delay_ms@ms
  3564     02A5  120A  158A  261D  120A  118A  	fcall	_delay_ms
  3565     02AA                     l1682:
  3566     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3567     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  3568     02AC  1108               	bcf	8,2	;volatile
  3569     02AD  2ACE               	goto	l1692
  3570     02AE                     l104:	
  3571                           ;proje.c: 86:             case 4: RD3 = 1; delay_ms(showSpeed); RD3 = 0; break;
  3572                           
  3573     02AE  1588               	bsf	8,3	;volatile
  3574     02AF                     l1684:
  3575     02AF  0865               	movf	_showSpeed+1,w
  3576     02B0  00F1               	movwf	delay_ms@ms+1
  3577     02B1  0864               	movf	_showSpeed,w
  3578     02B2  00F0               	movwf	delay_ms@ms
  3579     02B3  120A  158A  261D  120A  118A  	fcall	_delay_ms
  3580     02B8                     l1686:
  3581     02B8  1283               	bcf	3,5	;RP0=0, select bank0
  3582     02B9  1303               	bcf	3,6	;RP1=0, select bank0
  3583     02BA  1188               	bcf	8,3	;volatile
  3584     02BB  2ACE               	goto	l1692
  3585     02BC                     l1690:
  3586     02BC  0876               	movf	showSequence@i,w
  3587     02BD  3EC0               	addlw	(low (_sequence| 0))& (0+255)
  3588     02BE  0084               	movwf	4
  3589     02BF  1383               	bcf	3,7	;select IRP bank1
  3590     02C0  0800               	movf	0,w
  3591                           
  3592                           ; Switch size 1, requested type "simple"
  3593                           ; Number of cases is 4, Range of values is 1 to 4
  3594                           ; switch strategies available:
  3595                           ; Name         Instructions Cycles
  3596                           ; simple_byte           13     7 (average)
  3597                           ; direct_byte           23    11 (fixed)
  3598                           ; jumptable            263     9 (fixed)
  3599                           ;	Chosen strategy is simple_byte
  3600     02C1  3A01               	xorlw	1	; case 1
  3601     02C2  1903               	skipnz
  3602     02C3  2A84               	goto	l100
  3603     02C4  3A03               	xorlw	3	; case 2
  3604     02C5  1903               	skipnz
  3605     02C6  2A92               	goto	l102
  3606     02C7  3A01               	xorlw	1	; case 3
  3607     02C8  1903               	skipnz
  3608     02C9  2AA0               	goto	l103
  3609     02CA  3A07               	xorlw	7	; case 4
  3610     02CB  1903               	skipnz
  3611     02CC  2AAE               	goto	l104
  3612     02CD  2ACE               	goto	l1692
  3613     02CE                     l1692:
  3614                           
  3615                           ;proje.c: 88:         delay_ms(showSpeed / 2);
  3616     02CE  0865               	movf	_showSpeed+1,w
  3617     02CF  00F5               	movwf	??_showSequence+1
  3618     02D0  0864               	movf	_showSpeed,w
  3619     02D1  00F4               	movwf	??_showSequence
  3620     02D2  1003               	clrc
  3621     02D3  0CF5               	rrf	??_showSequence+1,f
  3622     02D4  0CF4               	rrf	??_showSequence,f
  3623     02D5  0874               	movf	??_showSequence,w
  3624     02D6  00F0               	movwf	delay_ms@ms
  3625     02D7  0875               	movf	??_showSequence+1,w
  3626     02D8  00F1               	movwf	delay_ms@ms+1
  3627     02D9  120A  158A  261D  120A  118A  	fcall	_delay_ms
  3628     02DE                     l1694:
  3629                           
  3630                           ;proje.c: 89:     }
  3631     02DE  3001               	movlw	1
  3632     02DF  07F6               	addwf	showSequence@i,f
  3633     02E0  1803               	skipnc
  3634     02E1  0AF7               	incf	showSequence@i+1,f
  3635     02E2  3000               	movlw	0
  3636     02E3  07F7               	addwf	showSequence@i+1,f
  3637     02E4                     l1696:
  3638     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  3639     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  3640     02E6  0867               	movf	_level+1,w
  3641     02E7  0277               	subwf	showSequence@i+1,w
  3642     02E8  1D03               	skipz
  3643     02E9  2AEC               	goto	u2095
  3644     02EA  0866               	movf	_level,w
  3645     02EB  0276               	subwf	showSequence@i,w
  3646     02EC                     u2095:
  3647     02EC  1C03               	skipc
  3648     02ED  2AEF               	goto	u2091
  3649     02EE  2AF0               	goto	u2090
  3650     02EF                     u2091:
  3651     02EF  2ABC               	goto	l1690
  3652     02F0                     u2090:
  3653     02F0                     l106:
  3654     02F0  0008               	return
  3655     02F1                     __end_of_showSequence:
  3656                           
  3657                           	psect	text19
  3658     0DD2                     __ptext19:	
  3659 ;; *************** function _resetGame *****************
  3660 ;; Defined at:
  3661 ;;		line 299 in file "proje.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         0       0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0
  3678 ;;      Totals:         0       0       0       0       0
  3679 ;;Total ram usage:        0 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_main
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688     0DD2                     _resetGame:	
  3689                           ;psect for function _resetGame
  3690                           
  3691     0DD2                     l1838:	
  3692                           ;incstack = 0
  3693                           ; Regs used in _resetGame: [wreg+status,2]
  3694                           
  3695                           
  3696                           ;proje.c: 300:     score = 0;
  3697     0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  3698     0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  3699     0DD4  01DC               	clrf	_score
  3700     0DD5  01DD               	clrf	_score+1
  3701     0DD6                     l1840:
  3702                           
  3703                           ;proje.c: 301:     level = 1;
  3704     0DD6  3001               	movlw	1
  3705     0DD7  00E6               	movwf	_level
  3706     0DD8  3000               	movlw	0
  3707     0DD9  00E7               	movwf	_level+1
  3708     0DDA                     l1842:
  3709                           
  3710                           ;proje.c: 302:     showSpeed = 500;
  3711     0DDA  30F4               	movlw	244
  3712     0DDB  00E4               	movwf	_showSpeed
  3713     0DDC  3001               	movlw	1
  3714     0DDD  00E5               	movwf	_showSpeed+1
  3715                           
  3716                           ;proje.c: 303:     gameState = GAME_WAITING;
  3717     0DDE  01DF               	clrf	_gameState
  3718                           
  3719                           ;proje.c: 304:     PORTD = 0x00;
  3720     0DDF  0188               	clrf	8	;volatile
  3721     0DE0                     l215:
  3722     0DE0  0008               	return
  3723     0DE1                     __end_of_resetGame:
  3724                           
  3725                           	psect	text20
  3726     0E4F                     __ptext20:	
  3727 ;; *************** function _initGame *****************
  3728 ;; Defined at:
  3729 ;;		line 251 in file "proje.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  storedScore     1    4[COMMON] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0, pclath, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3743 ;;      Params:         0       0       0       0       0
  3744 ;;      Locals:         1       0       0       0       0
  3745 ;;      Temps:          2       0       0       0       0
  3746 ;;      Totals:         3       0       0       0       0
  3747 ;;Total ram usage:        3 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 1
  3750 ;; This function calls:
  3751 ;;		_eeprom_read
  3752 ;;		_eeprom_write
  3753 ;; This function is called by:
  3754 ;;		_main
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758     0E4F                     _initGame:	
  3759                           ;psect for function _initGame
  3760                           
  3761     0E4F                     l1780:	
  3762                           ;incstack = 0
  3763                           ; Regs used in _initGame: [wreg+status,2+status,0+pclath+cstack]
  3764                           
  3765                           
  3766                           ;proje.c: 252:     unsigned char storedScore = eeprom_read(0x00);
  3767     0E4F  3000               	movlw	0
  3768     0E50  120A  158A  25B9  120A  158A  	fcall	_eeprom_read
  3769     0E55  00F4               	movwf	initGame@storedScore
  3770     0E56                     l1782:
  3771                           
  3772                           ;proje.c: 253:     if (storedScore == 0xFF) {
  3773     0E56  0A74               	incf	initGame@storedScore,w
  3774     0E57  1D03               	btfss	3,2
  3775     0E58  2E5A               	goto	u2241
  3776     0E59  2E5B               	goto	u2240
  3777     0E5A                     u2241:
  3778     0E5A  2E67               	goto	l1788
  3779     0E5B                     u2240:
  3780     0E5B                     l1784:
  3781                           
  3782                           ;proje.c: 254:         highScore = 0;
  3783     0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  3784     0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  3785     0E5D  01D8               	clrf	_highScore
  3786     0E5E  01D9               	clrf	_highScore+1
  3787     0E5F                     l1786:
  3788                           
  3789                           ;proje.c: 255:         eeprom_write(0x00, 0);
  3790     0E5F  01F0               	clrf	eeprom_write@data
  3791     0E60  3000               	movlw	0
  3792     0E61  120A  158A  2605  120A  158A  	fcall	_eeprom_write
  3793                           
  3794                           ;proje.c: 256:     } else {
  3795     0E66  2E70               	goto	l190
  3796     0E67                     l1788:
  3797                           
  3798                           ;proje.c: 257:         highScore = (unsigned int)storedScore;
  3799     0E67  0874               	movf	initGame@storedScore,w
  3800     0E68  00F2               	movwf	??_initGame
  3801     0E69  01F3               	clrf	??_initGame+1
  3802     0E6A  0872               	movf	??_initGame,w
  3803     0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  3804     0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  3805     0E6D  00D8               	movwf	_highScore
  3806     0E6E  0873               	movf	??_initGame+1,w
  3807     0E6F  00D9               	movwf	_highScore+1
  3808     0E70                     l190:
  3809     0E70  0008               	return
  3810     0E71                     __end_of_initGame:
  3811                           
  3812                           	psect	text21
  3813     0E05                     __ptext21:	
  3814 ;; *************** function _eeprom_write *****************
  3815 ;; Defined at:
  3816 ;;		line 237 in file "proje.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  address         1    wreg     unsigned char 
  3819 ;;  data            1    0[COMMON] unsigned char 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  address         1    1[COMMON] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3831 ;;      Params:         1       0       0       0       0
  3832 ;;      Locals:         1       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0
  3834 ;;      Totals:         2       0       0       0       0
  3835 ;;Total ram usage:        2 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_initGame
  3841 ;;		_updateHighScore
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845     0E05                     _eeprom_write:	
  3846                           ;psect for function _eeprom_write
  3847                           
  3848                           
  3849                           ;incstack = 0
  3850                           ; Regs used in _eeprom_write: [wreg]
  3851                           ;eeprom_write@address stored from wreg
  3852     0E05  00F1               	movwf	eeprom_write@address
  3853     0E06                     l1646:
  3854                           
  3855                           ;proje.c: 238:     EEADR = address;
  3856     0E06  0871               	movf	eeprom_write@address,w
  3857     0E07  1283               	bcf	3,5	;RP0=0, select bank2
  3858     0E08  1703               	bsf	3,6	;RP1=1, select bank2
  3859     0E09  008D               	movwf	13	;volatile
  3860                           
  3861                           ;proje.c: 239:     EEDATA = data;
  3862     0E0A  0870               	movf	eeprom_write@data,w
  3863     0E0B  008C               	movwf	12	;volatile
  3864     0E0C                     l1648:
  3865                           
  3866                           ;proje.c: 240:     EECON1bits.EEPGD = 0;
  3867     0E0C  1683               	bsf	3,5	;RP0=1, select bank3
  3868     0E0D  1703               	bsf	3,6	;RP1=1, select bank3
  3869     0E0E  138C               	bcf	12,7	;volsfr
  3870     0E0F                     l1650:
  3871                           
  3872                           ;proje.c: 241:     EECON1bits.WREN = 1;
  3873     0E0F  150C               	bsf	12,2	;volsfr
  3874     0E10                     l1652:
  3875                           
  3876                           ;proje.c: 242:     INTCONbits.GIE = 0;
  3877     0E10  138B               	bcf	11,7	;volatile
  3878     0E11                     l1654:
  3879                           
  3880                           ;proje.c: 243:     EECON2 = 0x55;
  3881     0E11  3055               	movlw	85
  3882     0E12  008D               	movwf	13	;volsfr
  3883     0E13                     l1656:
  3884                           
  3885                           ;proje.c: 244:     EECON2 = 0xAA;
  3886     0E13  30AA               	movlw	170
  3887     0E14  008D               	movwf	13	;volsfr
  3888     0E15                     l1658:
  3889                           
  3890                           ;proje.c: 245:     EECON1bits.WR = 1;
  3891     0E15  148C               	bsf	12,1	;volsfr
  3892     0E16                     l1660:
  3893                           
  3894                           ;proje.c: 246:     INTCONbits.GIE = 1;
  3895     0E16  178B               	bsf	11,7	;volatile
  3896     0E17                     l182:	
  3897                           ;proje.c: 247:     while(EECON1bits.WR);
  3898                           
  3899     0E17  188C               	btfsc	12,1	;volsfr
  3900     0E18  2E1A               	goto	u2071
  3901     0E19  2E1B               	goto	u2070
  3902     0E1A                     u2071:
  3903     0E1A  2E17               	goto	l182
  3904     0E1B                     u2070:
  3905     0E1B                     l184:
  3906                           
  3907                           ;proje.c: 248:     EECON1bits.WREN = 0;
  3908     0E1B  110C               	bcf	12,2	;volsfr
  3909     0E1C                     l185:
  3910     0E1C  0008               	return
  3911     0E1D                     __end_of_eeprom_write:
  3912                           
  3913                           	psect	text22
  3914     0DB9                     __ptext22:	
  3915 ;; *************** function _eeprom_read *****************
  3916 ;; Defined at:
  3917 ;;		line 231 in file "proje.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  address         1    wreg     unsigned char 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  address         1    0[COMMON] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      unsigned char 
  3924 ;; Registers used:
  3925 ;;		wreg
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       0       0       0       0
  3932 ;;      Locals:         1       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0
  3934 ;;      Totals:         1       0       0       0       0
  3935 ;;Total ram usage:        1 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_initGame
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944     0DB9                     _eeprom_read:	
  3945                           ;psect for function _eeprom_read
  3946                           
  3947                           
  3948                           ;incstack = 0
  3949                           ; Regs used in _eeprom_read: [wreg]
  3950                           ;eeprom_read@address stored from wreg
  3951     0DB9  00F0               	movwf	eeprom_read@address
  3952     0DBA                     l1640:
  3953                           
  3954                           ;proje.c: 232:     EEADR = address;
  3955     0DBA  0870               	movf	eeprom_read@address,w
  3956     0DBB  1283               	bcf	3,5	;RP0=0, select bank2
  3957     0DBC  1703               	bsf	3,6	;RP1=1, select bank2
  3958     0DBD  008D               	movwf	13	;volatile
  3959     0DBE                     l1642:
  3960                           
  3961                           ;proje.c: 233:     EECON1bits.RD = 1;
  3962     0DBE  1683               	bsf	3,5	;RP0=1, select bank3
  3963     0DBF  1703               	bsf	3,6	;RP1=1, select bank3
  3964     0DC0  140C               	bsf	12,0	;volsfr
  3965                           
  3966                           ;proje.c: 234:     return EEDATA;
  3967     0DC1  1283               	bcf	3,5	;RP0=0, select bank2
  3968     0DC2  1703               	bsf	3,6	;RP1=1, select bank2
  3969     0DC3  080C               	movf	12,w	;volatile
  3970     0DC4                     l179:
  3971     0DC4  0008               	return
  3972     0DC5                     __end_of_eeprom_read:
  3973                           
  3974                           	psect	text23
  3975     04FD                     __ptext23:	
  3976 ;; *************** function _getUserInput *****************
  3977 ;; Defined at:
  3978 ;;		line 92 in file "proje.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      unsigned char 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0
  3994 ;;      Temps:          2       0       0       0       0
  3995 ;;      Totals:         2       0       0       0       0
  3996 ;;Total ram usage:        2 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 1
  3999 ;; This function calls:
  4000 ;;		_delay_ms
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006     04FD                     _getUserInput:	
  4007                           ;psect for function _getUserInput
  4008                           
  4009     04FD                     l1698:	
  4010                           ;incstack = 0
  4011                           ; Regs used in _getUserInput: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4012                           
  4013                           
  4014                           ;proje.c: 93:     inputIndex = 0;
  4015     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  4016     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  4017     04FF  01DA               	clrf	_inputIndex
  4018     0500  01DB               	clrf	_inputIndex+1
  4019                           
  4020                           ;proje.c: 94:     while (inputIndex < level && gameState == GAME_RUNNING) {
  4021     0501  2DA8               	goto	l1756
  4022     0502                     l110:
  4023                           
  4024                           ;proje.c: 95:         if (!RB0) {
  4025     0502  1806               	btfsc	6,0	;volatile
  4026     0503  2D05               	goto	u2101
  4027     0504  2D06               	goto	u2100
  4028     0505                     u2101:
  4029     0505  2D33               	goto	l111
  4030     0506                     u2100:
  4031     0506                     l112:
  4032     0506  1C06               	btfss	6,0	;volatile
  4033     0507  2D09               	goto	u2111
  4034     0508  2D0A               	goto	u2110
  4035     0509                     u2111:
  4036     0509  2D06               	goto	l112
  4037     050A                     u2110:
  4038     050A                     l114:
  4039                           
  4040                           ;proje.c: 97:             RD0 = 1;
  4041     050A  1408               	bsf	8,0	;volatile
  4042     050B                     l1702:
  4043                           
  4044                           ;proje.c: 98:             delay_ms(200);
  4045     050B  30C8               	movlw	200
  4046     050C  00F0               	movwf	delay_ms@ms
  4047     050D  3000               	movlw	0
  4048     050E  00F1               	movwf	delay_ms@ms+1
  4049     050F  120A  158A  261D  120A  118A  	fcall	_delay_ms
  4050     0514                     l1704:
  4051                           
  4052                           ;proje.c: 99:             RD0 = 0;
  4053     0514  1283               	bcf	3,5	;RP0=0, select bank0
  4054     0515  1303               	bcf	3,6	;RP1=0, select bank0
  4055     0516  1008               	bcf	8,0	;volatile
  4056     0517                     l1706:
  4057                           
  4058                           ;proje.c: 100:             if (sequence[inputIndex++] != 1) {
  4059     0517  085B               	movf	_inputIndex+1,w
  4060     0518  00F5               	movwf	??_getUserInput+1
  4061     0519  085A               	movf	_inputIndex,w
  4062     051A  00F4               	movwf	??_getUserInput
  4063     051B  0ADA               	incf	_inputIndex,f
  4064     051C  1903               	skipnz
  4065     051D  0ADB               	incf	_inputIndex+1,f
  4066     051E  0874               	movf	??_getUserInput,w
  4067     051F  3EC0               	addlw	(low (_sequence| 0))& (0+255)
  4068     0520  0084               	movwf	4
  4069     0521  1383               	bcf	3,7	;select IRP bank1
  4070     0522  0300               	decf	0,w
  4071     0523  1903               	btfsc	3,2
  4072     0524  2D26               	goto	u2121
  4073     0525  2D27               	goto	u2120
  4074     0526                     u2121:
  4075     0526  2D29               	goto	l1712
  4076     0527                     u2120:
  4077     0527                     l1708:
  4078                           
  4079                           ;proje.c: 101:                 return 0;
  4080     0527  3000               	movlw	0
  4081     0528  2DBA               	goto	l116
  4082     0529                     l1712:
  4083                           
  4084                           ;proje.c: 103:             delay_ms(100);
  4085     0529  3064               	movlw	100
  4086     052A  00F0               	movwf	delay_ms@ms
  4087     052B  3000               	movlw	0
  4088     052C  00F1               	movwf	delay_ms@ms+1
  4089     052D  120A  158A  261D  120A  118A  	fcall	_delay_ms
  4090                           
  4091                           ;proje.c: 104:         }
  4092     0532  2DA8               	goto	l1756
  4093     0533                     l111:	
  4094                           ;proje.c: 105:         else if (!RB1) {
  4095                           
  4096     0533  1886               	btfsc	6,1	;volatile
  4097     0534  2D36               	goto	u2131
  4098     0535  2D37               	goto	u2130
  4099     0536                     u2131:
  4100     0536  2D5A               	goto	l118
  4101     0537                     u2130:
  4102     0537                     l119:
  4103     0537  1C86               	btfss	6,1	;volatile
  4104     0538  2D3A               	goto	u2141
  4105     0539  2D3B               	goto	u2140
  4106     053A                     u2141:
  4107     053A  2D37               	goto	l119
  4108     053B                     u2140:
  4109     053B                     l121:
  4110                           
  4111                           ;proje.c: 107:             RD1 = 1;
  4112     053B  1488               	bsf	8,1	;volatile
  4113     053C                     l1716:
  4114                           
  4115                           ;proje.c: 108:             delay_ms(200);
  4116     053C  30C8               	movlw	200
  4117     053D  00F0               	movwf	delay_ms@ms
  4118     053E  3000               	movlw	0
  4119     053F  00F1               	movwf	delay_ms@ms+1
  4120     0540  120A  158A  261D  120A  118A  	fcall	_delay_ms
  4121     0545                     l1718:
  4122                           
  4123                           ;proje.c: 109:             RD1 = 0;
  4124     0545  1283               	bcf	3,5	;RP0=0, select bank0
  4125     0546  1303               	bcf	3,6	;RP1=0, select bank0
  4126     0547  1088               	bcf	8,1	;volatile
  4127     0548                     l1720:
  4128                           
  4129                           ;proje.c: 110:             if (sequence[inputIndex++] != 2) {
  4130     0548  085B               	movf	_inputIndex+1,w
  4131     0549  00F5               	movwf	??_getUserInput+1
  4132     054A  085A               	movf	_inputIndex,w
  4133     054B  00F4               	movwf	??_getUserInput
  4134     054C  0ADA               	incf	_inputIndex,f
  4135     054D  1903               	skipnz
  4136     054E  0ADB               	incf	_inputIndex+1,f
  4137     054F  0874               	movf	??_getUserInput,w
  4138     0550  3EC0               	addlw	(low (_sequence| 0))& (0+255)
  4139     0551  0084               	movwf	4
  4140     0552  3002               	movlw	2
  4141     0553  1383               	bcf	3,7	;select IRP bank1
  4142     0554  0600               	xorwf	0,w
  4143     0555  1903               	btfsc	3,2
  4144     0556  2D58               	goto	u2151
  4145     0557  2D59               	goto	u2150
  4146     0558                     u2151:
  4147     0558  2D29               	goto	l1712
  4148     0559                     u2150:
  4149     0559  2D27               	goto	l1708
  4150     055A                     l118:	
  4151                           ;proje.c: 115:         else if (!RB2) {
  4152                           
  4153     055A  1906               	btfsc	6,2	;volatile
  4154     055B  2D5D               	goto	u2161
  4155     055C  2D5E               	goto	u2160
  4156     055D                     u2161:
  4157     055D  2D81               	goto	l124
  4158     055E                     u2160:
  4159     055E                     l125:
  4160     055E  1D06               	btfss	6,2	;volatile
  4161     055F  2D61               	goto	u2171
  4162     0560  2D62               	goto	u2170
  4163     0561                     u2171:
  4164     0561  2D5E               	goto	l125
  4165     0562                     u2170:
  4166     0562                     l127:
  4167                           
  4168                           ;proje.c: 117:             RD2 = 1;
  4169     0562  1508               	bsf	8,2	;volatile
  4170     0563                     l1730:
  4171                           
  4172                           ;proje.c: 118:             delay_ms(200);
  4173     0563  30C8               	movlw	200
  4174     0564  00F0               	movwf	delay_ms@ms
  4175     0565  3000               	movlw	0
  4176     0566  00F1               	movwf	delay_ms@ms+1
  4177     0567  120A  158A  261D  120A  118A  	fcall	_delay_ms
  4178     056C                     l1732:
  4179                           
  4180                           ;proje.c: 119:             RD2 = 0;
  4181     056C  1283               	bcf	3,5	;RP0=0, select bank0
  4182     056D  1303               	bcf	3,6	;RP1=0, select bank0
  4183     056E  1108               	bcf	8,2	;volatile
  4184     056F                     l1734:
  4185                           
  4186                           ;proje.c: 120:             if (sequence[inputIndex++] != 3) {
  4187     056F  085B               	movf	_inputIndex+1,w
  4188     0570  00F5               	movwf	??_getUserInput+1
  4189     0571  085A               	movf	_inputIndex,w
  4190     0572  00F4               	movwf	??_getUserInput
  4191     0573  0ADA               	incf	_inputIndex,f
  4192     0574  1903               	skipnz
  4193     0575  0ADB               	incf	_inputIndex+1,f
  4194     0576  0874               	movf	??_getUserInput,w
  4195     0577  3EC0               	addlw	(low (_sequence| 0))& (0+255)
  4196     0578  0084               	movwf	4
  4197     0579  3003               	movlw	3
  4198     057A  1383               	bcf	3,7	;select IRP bank1
  4199     057B  0600               	xorwf	0,w
  4200     057C  1903               	btfsc	3,2
  4201     057D  2D7F               	goto	u2181
  4202     057E  2D80               	goto	u2180
  4203     057F                     u2181:
  4204     057F  2D29               	goto	l1712
  4205     0580                     u2180:
  4206     0580  2D27               	goto	l1708
  4207     0581                     l124:	
  4208                           ;proje.c: 125:         else if (!RB3) {
  4209                           
  4210     0581  1986               	btfsc	6,3	;volatile
  4211     0582  2D84               	goto	u2191
  4212     0583  2D85               	goto	u2190
  4213     0584                     u2191:
  4214     0584  2DA8               	goto	l117
  4215     0585                     u2190:
  4216     0585                     l131:
  4217     0585  1D86               	btfss	6,3	;volatile
  4218     0586  2D88               	goto	u2201
  4219     0587  2D89               	goto	u2200
  4220     0588                     u2201:
  4221     0588  2D85               	goto	l131
  4222     0589                     u2200:
  4223     0589                     l133:
  4224                           
  4225                           ;proje.c: 127:             RD3 = 1;
  4226     0589  1588               	bsf	8,3	;volatile
  4227     058A                     l1744:
  4228                           
  4229                           ;proje.c: 128:             delay_ms(200);
  4230     058A  30C8               	movlw	200
  4231     058B  00F0               	movwf	delay_ms@ms
  4232     058C  3000               	movlw	0
  4233     058D  00F1               	movwf	delay_ms@ms+1
  4234     058E  120A  158A  261D  120A  118A  	fcall	_delay_ms
  4235     0593                     l1746:
  4236                           
  4237                           ;proje.c: 129:             RD3 = 0;
  4238     0593  1283               	bcf	3,5	;RP0=0, select bank0
  4239     0594  1303               	bcf	3,6	;RP1=0, select bank0
  4240     0595  1188               	bcf	8,3	;volatile
  4241     0596                     l1748:
  4242                           
  4243                           ;proje.c: 130:             if (sequence[inputIndex++] != 4) {
  4244     0596  085B               	movf	_inputIndex+1,w
  4245     0597  00F5               	movwf	??_getUserInput+1
  4246     0598  085A               	movf	_inputIndex,w
  4247     0599  00F4               	movwf	??_getUserInput
  4248     059A  0ADA               	incf	_inputIndex,f
  4249     059B  1903               	skipnz
  4250     059C  0ADB               	incf	_inputIndex+1,f
  4251     059D  0874               	movf	??_getUserInput,w
  4252     059E  3EC0               	addlw	(low (_sequence| 0))& (0+255)
  4253     059F  0084               	movwf	4
  4254     05A0  3004               	movlw	4
  4255     05A1  1383               	bcf	3,7	;select IRP bank1
  4256     05A2  0600               	xorwf	0,w
  4257     05A3  1903               	btfsc	3,2
  4258     05A4  2DA6               	goto	u2211
  4259     05A5  2DA7               	goto	u2210
  4260     05A6                     u2211:
  4261     05A6  2D29               	goto	l1712
  4262     05A7                     u2210:
  4263     05A7  2D27               	goto	l1708
  4264     05A8                     l117:
  4265     05A8                     l1756:
  4266                           
  4267                           ;proje.c: 94:     while (inputIndex < level && gameState == GAME_RUNNING) {
  4268     05A8  1283               	bcf	3,5	;RP0=0, select bank0
  4269     05A9  1303               	bcf	3,6	;RP1=0, select bank0
  4270     05AA  0867               	movf	_level+1,w
  4271     05AB  025B               	subwf	_inputIndex+1,w
  4272     05AC  1D03               	skipz
  4273     05AD  2DB0               	goto	u2225
  4274     05AE  0866               	movf	_level,w
  4275     05AF  025A               	subwf	_inputIndex,w
  4276     05B0                     u2225:
  4277     05B0  1803               	skipnc
  4278     05B1  2DB3               	goto	u2221
  4279     05B2  2DB4               	goto	u2220
  4280     05B3                     u2221:
  4281     05B3  2DB9               	goto	l1760
  4282     05B4                     u2220:
  4283     05B4                     l1758:
  4284     05B4  035F               	decf	_gameState,w
  4285     05B5  1903               	btfsc	3,2
  4286     05B6  2DB8               	goto	u2231
  4287     05B7  2DB9               	goto	u2230
  4288     05B8                     u2231:
  4289     05B8  2D02               	goto	l110
  4290     05B9                     u2230:
  4291     05B9                     l1760:
  4292                           
  4293                           ;proje.c: 136:     return 1;
  4294     05B9  3001               	movlw	1
  4295     05BA                     l116:
  4296     05BA  0008               	return
  4297     05BB                     __end_of_getUserInput:
  4298                           
  4299                           	psect	text24
  4300     0E94                     __ptext24:	
  4301 ;; *************** function _generateSequence *****************
  4302 ;; Defined at:
  4303 ;;		line 74 in file "proje.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;		None
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  i               2    6[BANK0 ] int 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4317 ;;      Params:         0       0       0       0       0
  4318 ;;      Locals:         0       2       0       0       0
  4319 ;;      Temps:          0       0       0       0       0
  4320 ;;      Totals:         0       2       0       0       0
  4321 ;;Total ram usage:        2 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; Hardware stack levels required when called: 2
  4324 ;; This function calls:
  4325 ;;		_rand
  4326 ;; This function is called by:
  4327 ;;		_main
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331     0E94                     _generateSequence:	
  4332                           ;psect for function _generateSequence
  4333                           
  4334     0E94                     l1662:	
  4335                           ;incstack = 0
  4336                           ; Regs used in _generateSequence: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4337                           
  4338                           
  4339                           ;proje.c: 75:     for (int i = 0; i < level; i++) {
  4340     0E94  1283               	bcf	3,5	;RP0=0, select bank0
  4341     0E95  1303               	bcf	3,6	;RP1=0, select bank0
  4342     0E96  01A6               	clrf	generateSequence@i
  4343     0E97  01A7               	clrf	generateSequence@i+1
  4344     0E98  2EAE               	goto	l1668
  4345     0E99                     l1664:
  4346                           
  4347                           ;proje.c: 76:         sequence[i] = (unsigned char)((rand() % 4) + 1);
  4348     0E99  0826               	movf	generateSequence@i,w
  4349     0E9A  3EC0               	addlw	(low (_sequence| 0))& (0+255)
  4350     0E9B  0084               	movwf	4
  4351     0E9C  120A  158A  27AF  120A  158A  	fcall	_rand
  4352     0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  4353     0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  4354     0EA3  0820               	movf	?_rand,w
  4355     0EA4  3903               	andlw	3
  4356     0EA5  3E01               	addlw	1
  4357     0EA6  1383               	bcf	3,7	;select IRP bank1
  4358     0EA7  0080               	movwf	0
  4359     0EA8                     l1666:
  4360                           
  4361                           ;proje.c: 77:     }
  4362     0EA8  3001               	movlw	1
  4363     0EA9  07A6               	addwf	generateSequence@i,f
  4364     0EAA  1803               	skipnc
  4365     0EAB  0AA7               	incf	generateSequence@i+1,f
  4366     0EAC  3000               	movlw	0
  4367     0EAD  07A7               	addwf	generateSequence@i+1,f
  4368     0EAE                     l1668:
  4369     0EAE  0867               	movf	_level+1,w
  4370     0EAF  0227               	subwf	generateSequence@i+1,w
  4371     0EB0  1D03               	skipz
  4372     0EB1  2EB4               	goto	u2085
  4373     0EB2  0866               	movf	_level,w
  4374     0EB3  0226               	subwf	generateSequence@i,w
  4375     0EB4                     u2085:
  4376     0EB4  1C03               	skipc
  4377     0EB5  2EB7               	goto	u2081
  4378     0EB6  2EB8               	goto	u2080
  4379     0EB7                     u2081:
  4380     0EB7  2E99               	goto	l1664
  4381     0EB8                     u2080:
  4382     0EB8                     l94:
  4383     0EB8  0008               	return
  4384     0EB9                     __end_of_generateSequence:
  4385                           
  4386                           	psect	text25
  4387     0FAF                     __ptext25:	
  4388 ;; *************** function _rand *****************
  4389 ;; Defined at:
  4390 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\rand.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  2    0[BANK0 ] int 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0, pclath, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4404 ;;      Params:         0       2       0       0       0
  4405 ;;      Locals:         0       0       0       0       0
  4406 ;;      Temps:          0       4       0       0       0
  4407 ;;      Totals:         0       6       0       0       0
  4408 ;;Total ram usage:        6 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; Hardware stack levels required when called: 1
  4411 ;; This function calls:
  4412 ;;		___lmul
  4413 ;; This function is called by:
  4414 ;;		_generateSequence
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418     0FAF                     _rand:	
  4419                           ;psect for function _rand
  4420                           
  4421     0FAF                     l1598:	
  4422                           ;incstack = 0
  4423                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  4424                           
  4425     0FAF  3001               	movlw	1
  4426     0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  4427     0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  4428     0FB2  00A2               	movwf	??_rand
  4429     0FB3  3000               	movlw	0
  4430     0FB4  00A3               	movwf	??_rand+1
  4431     0FB5  3000               	movlw	0
  4432     0FB6  00A4               	movwf	??_rand+2
  4433     0FB7  3000               	movlw	0
  4434     0FB8  00A5               	movwf	??_rand+3
  4435     0FB9  0863               	movf	_seed+3,w
  4436     0FBA  00F3               	movwf	___lmul@multiplier+3
  4437     0FBB  0862               	movf	_seed+2,w
  4438     0FBC  00F2               	movwf	___lmul@multiplier+2
  4439     0FBD  0861               	movf	_seed+1,w
  4440     0FBE  00F1               	movwf	___lmul@multiplier+1
  4441     0FBF  0860               	movf	_seed,w
  4442     0FC0  00F0               	movwf	___lmul@multiplier
  4443     0FC1  304C               	movlw	76
  4444     0FC2  00F7               	movwf	___lmul@multiplicand+3
  4445     0FC3  3095               	movlw	149
  4446     0FC4  00F6               	movwf	___lmul@multiplicand+2
  4447     0FC5  307F               	movlw	127
  4448     0FC6  00F5               	movwf	___lmul@multiplicand+1
  4449     0FC7  302D               	movlw	45
  4450     0FC8  00F4               	movwf	___lmul@multiplicand
  4451     0FC9  120A  118A  20BB  120A  158A  	fcall	___lmul
  4452     0FCE  0870               	movf	?___lmul,w
  4453     0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  4454     0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  4455     0FD1  07A2               	addwf	??_rand,f
  4456     0FD2  0871               	movf	?___lmul+1,w
  4457     0FD3  1803               	skipnc
  4458     0FD4  0F71               	incfsz	?___lmul+1,w
  4459     0FD5  2FD7               	goto	u1960
  4460     0FD6  2FD8               	goto	u1961
  4461     0FD7                     u1960:
  4462     0FD7  07A3               	addwf	??_rand+1,f
  4463     0FD8                     u1961:
  4464     0FD8  0872               	movf	?___lmul+2,w
  4465     0FD9  1803               	skipnc
  4466     0FDA  0F72               	incfsz	?___lmul+2,w
  4467     0FDB  2FDD               	goto	u1962
  4468     0FDC  2FDE               	goto	u1963
  4469     0FDD                     u1962:
  4470     0FDD  07A4               	addwf	??_rand+2,f
  4471     0FDE                     u1963:
  4472     0FDE  0873               	movf	?___lmul+3,w
  4473     0FDF  1803               	skipnc
  4474     0FE0  0A73               	incf	?___lmul+3,w
  4475     0FE1  07A5               	addwf	??_rand+3,f
  4476     0FE2  0825               	movf	??_rand+3,w
  4477     0FE3  00E3               	movwf	_seed+3
  4478     0FE4  0824               	movf	??_rand+2,w
  4479     0FE5  00E2               	movwf	_seed+2
  4480     0FE6  0823               	movf	??_rand+1,w
  4481     0FE7  00E1               	movwf	_seed+1
  4482     0FE8  0822               	movf	??_rand,w
  4483     0FE9  00E0               	movwf	_seed
  4484     0FEA                     l1600:
  4485     0FEA  0860               	movf	_seed,w
  4486     0FEB  00A2               	movwf	??_rand
  4487     0FEC  0861               	movf	_seed+1,w
  4488     0FED  00A3               	movwf	??_rand+1
  4489     0FEE  0862               	movf	_seed+2,w
  4490     0FEF  00A4               	movwf	??_rand+2
  4491     0FF0  0863               	movf	_seed+3,w
  4492     0FF1  00A5               	movwf	??_rand+3
  4493     0FF2  3011               	movlw	17
  4494     0FF3                     u1975:
  4495     0FF3  1003               	clrc
  4496     0FF4  0CA5               	rrf	??_rand+3,f
  4497     0FF5  0CA4               	rrf	??_rand+2,f
  4498     0FF6  0CA3               	rrf	??_rand+1,f
  4499     0FF7  0CA2               	rrf	??_rand,f
  4500     0FF8                     u1970:
  4501     0FF8  3EFF               	addlw	-1
  4502     0FF9  1D03               	skipz
  4503     0FFA  2FF3               	goto	u1975
  4504     0FFB  0823               	movf	??_rand+1,w
  4505     0FFC  00A1               	movwf	?_rand+1
  4506     0FFD  0822               	movf	??_rand,w
  4507     0FFE  00A0               	movwf	?_rand
  4508     0FFF                     l854:
  4509     0FFF  0008               	return
  4510     1000                     __end_of_rand:
  4511                           
  4512                           	psect	text26
  4513     00BB                     __ptext26:	
  4514 ;; *************** function ___lmul *****************
  4515 ;; Defined at:
  4516 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  multiplier      4    0[COMMON] unsigned long 
  4519 ;;  multiplicand    4    4[COMMON] unsigned long 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  product         4    9[COMMON] unsigned long 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  4    0[COMMON] unsigned long 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         8       0       0       0       0
  4532 ;;      Locals:         4       0       0       0       0
  4533 ;;      Temps:          1       0       0       0       0
  4534 ;;      Totals:        13       0       0       0       0
  4535 ;;Total ram usage:       13 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_rand
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544     00BB                     ___lmul:	
  4545                           ;psect for function ___lmul
  4546                           
  4547     00BB                     l1584:	
  4548                           ;incstack = 0
  4549                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4550                           
  4551     00BB  3000               	movlw	0
  4552     00BC  00FC               	movwf	___lmul@product+3
  4553     00BD  3000               	movlw	0
  4554     00BE  00FB               	movwf	___lmul@product+2
  4555     00BF  3000               	movlw	0
  4556     00C0  00FA               	movwf	___lmul@product+1
  4557     00C1  3000               	movlw	0
  4558     00C2  00F9               	movwf	___lmul@product
  4559     00C3                     l1586:
  4560     00C3  1C70               	btfss	___lmul@multiplier,0
  4561     00C4  28C6               	goto	u1911
  4562     00C5  28C7               	goto	u1910
  4563     00C6                     u1911:
  4564     00C6  28DE               	goto	l1590
  4565     00C7                     u1910:
  4566     00C7                     l1588:
  4567     00C7  0874               	movf	___lmul@multiplicand,w
  4568     00C8  07F9               	addwf	___lmul@product,f
  4569     00C9  0875               	movf	___lmul@multiplicand+1,w
  4570     00CA  1103               	clrz
  4571     00CB  1803               	skipnc
  4572     00CC  3E01               	addlw	1
  4573     00CD  1903               	skipnz
  4574     00CE  28D0               	goto	u1921
  4575     00CF  07FA               	addwf	___lmul@product+1,f
  4576     00D0                     u1921:
  4577     00D0  0876               	movf	___lmul@multiplicand+2,w
  4578     00D1  1103               	clrz
  4579     00D2  1803               	skipnc
  4580     00D3  3E01               	addlw	1
  4581     00D4  1903               	skipnz
  4582     00D5  28D7               	goto	u1922
  4583     00D6  07FB               	addwf	___lmul@product+2,f
  4584     00D7                     u1922:
  4585     00D7  0877               	movf	___lmul@multiplicand+3,w
  4586     00D8  1103               	clrz
  4587     00D9  1803               	skipnc
  4588     00DA  3E01               	addlw	1
  4589     00DB  1903               	skipnz
  4590     00DC  28DE               	goto	u1923
  4591     00DD  07FC               	addwf	___lmul@product+3,f
  4592     00DE                     u1923:
  4593     00DE                     l1590:
  4594     00DE  3001               	movlw	1
  4595     00DF  00F8               	movwf	??___lmul
  4596     00E0                     u1935:
  4597     00E0  1003               	clrc
  4598     00E1  0DF4               	rlf	___lmul@multiplicand,f
  4599     00E2  0DF5               	rlf	___lmul@multiplicand+1,f
  4600     00E3  0DF6               	rlf	___lmul@multiplicand+2,f
  4601     00E4  0DF7               	rlf	___lmul@multiplicand+3,f
  4602     00E5  0BF8               	decfsz	??___lmul,f
  4603     00E6  28E0               	goto	u1935
  4604     00E7                     l1592:
  4605     00E7  3001               	movlw	1
  4606     00E8                     u1945:
  4607     00E8  1003               	clrc
  4608     00E9  0CF3               	rrf	___lmul@multiplier+3,f
  4609     00EA  0CF2               	rrf	___lmul@multiplier+2,f
  4610     00EB  0CF1               	rrf	___lmul@multiplier+1,f
  4611     00EC  0CF0               	rrf	___lmul@multiplier,f
  4612     00ED  3EFF               	addlw	-1
  4613     00EE  1D03               	skipz
  4614     00EF  28E8               	goto	u1945
  4615     00F0  0873               	movf	___lmul@multiplier+3,w
  4616     00F1  0472               	iorwf	___lmul@multiplier+2,w
  4617     00F2  0471               	iorwf	___lmul@multiplier+1,w
  4618     00F3  0470               	iorwf	___lmul@multiplier,w
  4619     00F4  1D03               	skipz
  4620     00F5  28F7               	goto	u1951
  4621     00F6  28F8               	goto	u1950
  4622     00F7                     u1951:
  4623     00F7  28C3               	goto	l1586
  4624     00F8                     u1950:
  4625     00F8                     l1594:
  4626     00F8  087C               	movf	___lmul@product+3,w
  4627     00F9  00F3               	movwf	?___lmul+3
  4628     00FA  087B               	movf	___lmul@product+2,w
  4629     00FB  00F2               	movwf	?___lmul+2
  4630     00FC  087A               	movf	___lmul@product+1,w
  4631     00FD  00F1               	movwf	?___lmul+1
  4632     00FE  0879               	movf	___lmul@product,w
  4633     00FF  00F0               	movwf	?___lmul
  4634     0100                     l330:
  4635     0100  0008               	return
  4636     0101                     __end_of___lmul:
  4637                           
  4638                           	psect	text27
  4639     0F04                     __ptext27:	
  4640 ;; *************** function _Lcd_Init *****************
  4641 ;; Defined at:
  4642 ;;		line 184 in file "proje.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;		None
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0, pclath, cstack
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4656 ;;      Params:         0       0       0       0       0
  4657 ;;      Locals:         0       0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0
  4659 ;;      Totals:         0       0       0       0       0
  4660 ;;Total ram usage:        0 bytes
  4661 ;; Hardware stack levels used: 1
  4662 ;; Hardware stack levels required when called: 2
  4663 ;; This function calls:
  4664 ;;		_Lcd_Command
  4665 ;;		_delay_ms
  4666 ;; This function is called by:
  4667 ;;		_main
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671     0F04                     _Lcd_Init:	
  4672                           ;psect for function _Lcd_Init
  4673                           
  4674     0F04                     l1764:	
  4675                           ;incstack = 0
  4676                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4677                           
  4678                           
  4679                           ;proje.c: 185:     delay_ms(20);
  4680     0F04  3014               	movlw	20
  4681     0F05  00F0               	movwf	delay_ms@ms
  4682     0F06  3000               	movlw	0
  4683     0F07  00F1               	movwf	delay_ms@ms+1
  4684     0F08  120A  158A  261D  120A  158A  	fcall	_delay_ms
  4685                           
  4686                           ;proje.c: 186:     Lcd_Command(0x02);
  4687     0F0D  3002               	movlw	2
  4688     0F0E  120A  118A  238B  120A  158A  	fcall	_Lcd_Command
  4689                           
  4690                           ;proje.c: 187:     Lcd_Command(0x28);
  4691     0F13  3028               	movlw	40
  4692     0F14  120A  118A  238B  120A  158A  	fcall	_Lcd_Command
  4693                           
  4694                           ;proje.c: 188:     Lcd_Command(0x0C);
  4695     0F19  300C               	movlw	12
  4696     0F1A  120A  118A  238B  120A  158A  	fcall	_Lcd_Command
  4697                           
  4698                           ;proje.c: 189:     Lcd_Command(0x06);
  4699     0F1F  3006               	movlw	6
  4700     0F20  120A  118A  238B  120A  158A  	fcall	_Lcd_Command
  4701                           
  4702                           ;proje.c: 190:     Lcd_Command(0x01);
  4703     0F25  3001               	movlw	1
  4704     0F26  120A  118A  238B  120A  158A  	fcall	_Lcd_Command
  4705                           
  4706                           ;proje.c: 191:     delay_ms(2);
  4707     0F2B  3002               	movlw	2
  4708     0F2C  00F0               	movwf	delay_ms@ms
  4709     0F2D  3000               	movlw	0
  4710     0F2E  00F1               	movwf	delay_ms@ms+1
  4711     0F2F  120A  158A  261D  120A  158A  	fcall	_delay_ms
  4712     0F34                     l156:
  4713     0F34  0008               	return
  4714     0F35                     __end_of_Lcd_Init:
  4715                           
  4716                           	psect	text28
  4717     038B                     __ptext28:	
  4718 ;; *************** function _Lcd_Command *****************
  4719 ;; Defined at:
  4720 ;;		line 156 in file "proje.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  cmd             1    wreg     unsigned char 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  cmd             1    5[COMMON] unsigned char 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg, status,2, status,0, pclath, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4734 ;;      Params:         0       0       0       0       0
  4735 ;;      Locals:         1       0       0       0       0
  4736 ;;      Temps:          1       0       0       0       0
  4737 ;;      Totals:         2       0       0       0       0
  4738 ;;Total ram usage:        2 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; Hardware stack levels required when called: 1
  4741 ;; This function calls:
  4742 ;;		_delay_ms
  4743 ;; This function is called by:
  4744 ;;		_Lcd_Init
  4745 ;;		_Lcd_Clear
  4746 ;;		_Lcd_Set_Cursor
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750     038B                     _Lcd_Command:	
  4751                           ;psect for function _Lcd_Command
  4752                           
  4753                           
  4754                           ;incstack = 0
  4755                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+pclath+cstack]
  4756                           ;Lcd_Command@cmd stored from wreg
  4757     038B  00F5               	movwf	Lcd_Command@cmd
  4758     038C                     l1498:
  4759                           
  4760                           ;proje.c: 157:     RC0 = 0;
  4761     038C  1283               	bcf	3,5	;RP0=0, select bank0
  4762     038D  1303               	bcf	3,6	;RP1=0, select bank0
  4763     038E  1007               	bcf	7,0	;volatile
  4764     038F                     l1500:
  4765                           
  4766                           ;proje.c: 158:     RC2 = (cmd >> 4) & 1;
  4767     038F  0875               	movf	Lcd_Command@cmd,w
  4768     0390  00F4               	movwf	??_Lcd_Command
  4769     0391  3004               	movlw	4
  4770     0392                     u1425:
  4771     0392  1003               	clrc
  4772     0393  0CF4               	rrf	??_Lcd_Command,f
  4773     0394  3EFF               	addlw	-1
  4774     0395  1D03               	skipz
  4775     0396  2B92               	goto	u1425
  4776     0397  1874               	btfsc	??_Lcd_Command,0
  4777     0398  2B9A               	goto	u1431
  4778     0399  2B9E               	goto	u1430
  4779     039A                     u1431:
  4780     039A  1283               	bcf	3,5	;RP0=0, select bank0
  4781     039B  1303               	bcf	3,6	;RP1=0, select bank0
  4782     039C  1507               	bsf	7,2	;volatile
  4783     039D  2BA1               	goto	u1444
  4784     039E                     u1430:
  4785     039E  1283               	bcf	3,5	;RP0=0, select bank0
  4786     039F  1303               	bcf	3,6	;RP1=0, select bank0
  4787     03A0  1107               	bcf	7,2	;volatile
  4788     03A1                     u1444:
  4789                           
  4790                           ;proje.c: 159:     RC3 = (cmd >> 5) & 1;
  4791     03A1  0875               	movf	Lcd_Command@cmd,w
  4792     03A2  00F4               	movwf	??_Lcd_Command
  4793     03A3  3005               	movlw	5
  4794     03A4                     u1455:
  4795     03A4  1003               	clrc
  4796     03A5  0CF4               	rrf	??_Lcd_Command,f
  4797     03A6  3EFF               	addlw	-1
  4798     03A7  1D03               	skipz
  4799     03A8  2BA4               	goto	u1455
  4800     03A9  1874               	btfsc	??_Lcd_Command,0
  4801     03AA  2BAC               	goto	u1461
  4802     03AB  2BB0               	goto	u1460
  4803     03AC                     u1461:
  4804     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  4805     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  4806     03AE  1587               	bsf	7,3	;volatile
  4807     03AF  2BB3               	goto	u1474
  4808     03B0                     u1460:
  4809     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  4810     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  4811     03B2  1187               	bcf	7,3	;volatile
  4812     03B3                     u1474:
  4813                           
  4814                           ;proje.c: 160:     RC4 = (cmd >> 6) & 1;
  4815     03B3  0875               	movf	Lcd_Command@cmd,w
  4816     03B4  00F4               	movwf	??_Lcd_Command
  4817     03B5  3006               	movlw	6
  4818     03B6                     u1485:
  4819     03B6  1003               	clrc
  4820     03B7  0CF4               	rrf	??_Lcd_Command,f
  4821     03B8  3EFF               	addlw	-1
  4822     03B9  1D03               	skipz
  4823     03BA  2BB6               	goto	u1485
  4824     03BB  1874               	btfsc	??_Lcd_Command,0
  4825     03BC  2BBE               	goto	u1491
  4826     03BD  2BC2               	goto	u1490
  4827     03BE                     u1491:
  4828     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  4829     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  4830     03C0  1607               	bsf	7,4	;volatile
  4831     03C1  2BC5               	goto	u1504
  4832     03C2                     u1490:
  4833     03C2  1283               	bcf	3,5	;RP0=0, select bank0
  4834     03C3  1303               	bcf	3,6	;RP1=0, select bank0
  4835     03C4  1207               	bcf	7,4	;volatile
  4836     03C5                     u1504:
  4837                           
  4838                           ;proje.c: 161:     RC5 = (cmd >> 7) & 1;
  4839     03C5  0875               	movf	Lcd_Command@cmd,w
  4840     03C6  00F4               	movwf	??_Lcd_Command
  4841     03C7  3007               	movlw	7
  4842     03C8                     u1515:
  4843     03C8  1003               	clrc
  4844     03C9  0CF4               	rrf	??_Lcd_Command,f
  4845     03CA  3EFF               	addlw	-1
  4846     03CB  1D03               	skipz
  4847     03CC  2BC8               	goto	u1515
  4848     03CD  1874               	btfsc	??_Lcd_Command,0
  4849     03CE  2BD0               	goto	u1521
  4850     03CF  2BD4               	goto	u1520
  4851     03D0                     u1521:
  4852     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  4853     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  4854     03D2  1687               	bsf	7,5	;volatile
  4855     03D3  2BD7               	goto	u1534
  4856     03D4                     u1520:
  4857     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  4858     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  4859     03D6  1287               	bcf	7,5	;volatile
  4860     03D7                     u1534:
  4861     03D7                     l1502:
  4862                           
  4863                           ;proje.c: 162:     RC1 = 1; delay_ms(1); RC1 = 0; delay_ms(2);
  4864     03D7  1487               	bsf	7,1	;volatile
  4865     03D8                     l1504:
  4866     03D8  3001               	movlw	1
  4867     03D9  00F0               	movwf	delay_ms@ms
  4868     03DA  3000               	movlw	0
  4869     03DB  00F1               	movwf	delay_ms@ms+1
  4870     03DC  120A  158A  261D  120A  118A  	fcall	_delay_ms
  4871     03E1                     l1506:
  4872     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  4873     03E2  1303               	bcf	3,6	;RP1=0, select bank0
  4874     03E3  1087               	bcf	7,1	;volatile
  4875     03E4                     l1508:
  4876     03E4  3002               	movlw	2
  4877     03E5  00F0               	movwf	delay_ms@ms
  4878     03E6  3000               	movlw	0
  4879     03E7  00F1               	movwf	delay_ms@ms+1
  4880     03E8  120A  158A  261D  120A  118A  	fcall	_delay_ms
  4881     03ED                     l1510:
  4882                           
  4883                           ;proje.c: 163:     RC2 = (cmd >> 0) & 1;
  4884     03ED  1875               	btfsc	Lcd_Command@cmd,0
  4885     03EE  2BF0               	goto	u1541
  4886     03EF  2BF4               	goto	u1540
  4887     03F0                     u1541:
  4888     03F0  1283               	bcf	3,5	;RP0=0, select bank0
  4889     03F1  1303               	bcf	3,6	;RP1=0, select bank0
  4890     03F2  1507               	bsf	7,2	;volatile
  4891     03F3  2BF7               	goto	u1554
  4892     03F4                     u1540:
  4893     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  4894     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  4895     03F6  1107               	bcf	7,2	;volatile
  4896     03F7                     u1554:
  4897                           
  4898                           ;proje.c: 164:     RC3 = (cmd >> 1) & 1;
  4899     03F7  0875               	movf	Lcd_Command@cmd,w
  4900     03F8  00F4               	movwf	??_Lcd_Command
  4901     03F9  3001               	movlw	1
  4902     03FA                     u1565:
  4903     03FA  1003               	clrc
  4904     03FB  0CF4               	rrf	??_Lcd_Command,f
  4905     03FC  3EFF               	addlw	-1
  4906     03FD  1D03               	skipz
  4907     03FE  2BFA               	goto	u1565
  4908     03FF  1874               	btfsc	??_Lcd_Command,0
  4909     0400  2C02               	goto	u1571
  4910     0401  2C06               	goto	u1570
  4911     0402                     u1571:
  4912     0402  1283               	bcf	3,5	;RP0=0, select bank0
  4913     0403  1303               	bcf	3,6	;RP1=0, select bank0
  4914     0404  1587               	bsf	7,3	;volatile
  4915     0405  2C09               	goto	u1584
  4916     0406                     u1570:
  4917     0406  1283               	bcf	3,5	;RP0=0, select bank0
  4918     0407  1303               	bcf	3,6	;RP1=0, select bank0
  4919     0408  1187               	bcf	7,3	;volatile
  4920     0409                     u1584:
  4921                           
  4922                           ;proje.c: 165:     RC4 = (cmd >> 2) & 1;
  4923     0409  0875               	movf	Lcd_Command@cmd,w
  4924     040A  00F4               	movwf	??_Lcd_Command
  4925     040B  3002               	movlw	2
  4926     040C                     u1595:
  4927     040C  1003               	clrc
  4928     040D  0CF4               	rrf	??_Lcd_Command,f
  4929     040E  3EFF               	addlw	-1
  4930     040F  1D03               	skipz
  4931     0410  2C0C               	goto	u1595
  4932     0411  1874               	btfsc	??_Lcd_Command,0
  4933     0412  2C14               	goto	u1601
  4934     0413  2C18               	goto	u1600
  4935     0414                     u1601:
  4936     0414  1283               	bcf	3,5	;RP0=0, select bank0
  4937     0415  1303               	bcf	3,6	;RP1=0, select bank0
  4938     0416  1607               	bsf	7,4	;volatile
  4939     0417  2C1B               	goto	u1614
  4940     0418                     u1600:
  4941     0418  1283               	bcf	3,5	;RP0=0, select bank0
  4942     0419  1303               	bcf	3,6	;RP1=0, select bank0
  4943     041A  1207               	bcf	7,4	;volatile
  4944     041B                     u1614:
  4945                           
  4946                           ;proje.c: 166:     RC5 = (cmd >> 3) & 1;
  4947     041B  0875               	movf	Lcd_Command@cmd,w
  4948     041C  00F4               	movwf	??_Lcd_Command
  4949     041D  3003               	movlw	3
  4950     041E                     u1625:
  4951     041E  1003               	clrc
  4952     041F  0CF4               	rrf	??_Lcd_Command,f
  4953     0420  3EFF               	addlw	-1
  4954     0421  1D03               	skipz
  4955     0422  2C1E               	goto	u1625
  4956     0423  1874               	btfsc	??_Lcd_Command,0
  4957     0424  2C26               	goto	u1631
  4958     0425  2C2A               	goto	u1630
  4959     0426                     u1631:
  4960     0426  1283               	bcf	3,5	;RP0=0, select bank0
  4961     0427  1303               	bcf	3,6	;RP1=0, select bank0
  4962     0428  1687               	bsf	7,5	;volatile
  4963     0429  2C2D               	goto	u1644
  4964     042A                     u1630:
  4965     042A  1283               	bcf	3,5	;RP0=0, select bank0
  4966     042B  1303               	bcf	3,6	;RP1=0, select bank0
  4967     042C  1287               	bcf	7,5	;volatile
  4968     042D                     u1644:
  4969     042D                     l1512:
  4970                           
  4971                           ;proje.c: 167:     RC1 = 1; delay_ms(1); RC1 = 0; delay_ms(2);
  4972     042D  1487               	bsf	7,1	;volatile
  4973     042E                     l1514:
  4974     042E  3001               	movlw	1
  4975     042F  00F0               	movwf	delay_ms@ms
  4976     0430  3000               	movlw	0
  4977     0431  00F1               	movwf	delay_ms@ms+1
  4978     0432  120A  158A  261D  120A  118A  	fcall	_delay_ms
  4979     0437                     l1516:
  4980     0437  1283               	bcf	3,5	;RP0=0, select bank0
  4981     0438  1303               	bcf	3,6	;RP1=0, select bank0
  4982     0439  1087               	bcf	7,1	;volatile
  4983     043A                     l1518:
  4984     043A  3002               	movlw	2
  4985     043B  00F0               	movwf	delay_ms@ms
  4986     043C  3000               	movlw	0
  4987     043D  00F1               	movwf	delay_ms@ms+1
  4988     043E  120A  158A  261D  120A  118A  	fcall	_delay_ms
  4989     0443                     l150:
  4990     0443  0008               	return
  4991     0444                     __end_of_Lcd_Command:
  4992                           
  4993                           	psect	text29
  4994     0E1D                     __ptext29:	
  4995 ;; *************** function _delay_ms *****************
  4996 ;; Defined at:
  4997 ;;		line 68 in file "proje.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  ms              2    0[COMMON] unsigned int 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5011 ;;      Params:         2       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0
  5013 ;;      Temps:          2       0       0       0       0
  5014 ;;      Totals:         4       0       0       0       0
  5015 ;;Total ram usage:        4 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_showSequence
  5021 ;;		_getUserInput
  5022 ;;		_checkInvalidButtonPress
  5023 ;;		_Lcd_Command
  5024 ;;		_Lcd_Char
  5025 ;;		_Lcd_Init
  5026 ;;		_Lcd_Clear
  5027 ;;		_updateHighScore
  5028 ;;		_waitForStart
  5029 ;;		_main
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033     0E1D                     _delay_ms:	
  5034                           ;psect for function _delay_ms
  5035                           
  5036     0E1D                     l1448:	
  5037                           ;incstack = 0
  5038                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  5039                           
  5040                           
  5041                           ;proje.c: 69:     while (ms--) {
  5042     0E1D  2E27               	goto	l1452
  5043     0E1E                     l1450:
  5044                           
  5045                           ;proje.c: 70:         _delay((unsigned long)((1)*(8000000/4000.0)));
  5046     0E1E  3003               	movlw	3
  5047     0E1F  00F3               	movwf	??_delay_ms+1
  5048     0E20  3097               	movlw	151
  5049     0E21  00F2               	movwf	??_delay_ms
  5050     0E22                     u2357:
  5051     0E22  0BF2               	decfsz	??_delay_ms,f
  5052     0E23  2E22               	goto	u2357
  5053     0E24  0BF3               	decfsz	??_delay_ms+1,f
  5054     0E25  2E22               	goto	u2357
  5055     0E26  2E27               	nop2
  5056     0E27                     l1452:
  5057                           
  5058                           ;proje.c: 69:     while (ms--) {
  5059     0E27  3001               	movlw	1
  5060     0E28  02F0               	subwf	delay_ms@ms,f
  5061     0E29  3000               	movlw	0
  5062     0E2A  1C03               	skipc
  5063     0E2B  03F1               	decf	delay_ms@ms+1,f
  5064     0E2C  02F1               	subwf	delay_ms@ms+1,f
  5065     0E2D  0A70               	incf	delay_ms@ms,w
  5066     0E2E  1D03               	skipz
  5067     0E2F  2E34               	goto	u1361
  5068     0E30  0A71               	incf	delay_ms@ms+1,w
  5069     0E31  1D03               	btfss	3,2
  5070     0E32  2E34               	goto	u1361
  5071     0E33  2E35               	goto	u1360
  5072     0E34                     u1361:
  5073     0E34  2E1E               	goto	l1450
  5074     0E35                     u1360:
  5075     0E35                     l88:
  5076     0E35  0008               	return
  5077     0E36                     __end_of_delay_ms:
  5078     0002                     ___latbits      equ	2
  5079     007E                     btemp           set	126	;btemp
  5080     007E                     wtemp0          set	126
  5081                           
  5082                           	psect	config
  5083                           
  5084                           ;Config register CONFIG @ 0x2007
  5085                           ;	Oscillator Selection bits
  5086                           ;	FOSC = HS, HS oscillator
  5087                           ;	Watchdog Timer Enable bit
  5088                           ;	WDTE = OFF, WDT disabled
  5089                           ;	Power-up Timer Enable bit
  5090                           ;	PWRTE = OFF, PWRT disabled
  5091                           ;	Brown-out Reset Enable bit
  5092                           ;	BOREN = ON, BOR enabled
  5093                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5094                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5095                           ;	Data EEPROM Memory Code Protection bit
  5096                           ;	CPD = OFF, Data EEPROM code protection off
  5097                           ;	Flash Program Memory Write Enable bits
  5098                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5099                           ;	In-Circuit Debugger Mode bit
  5100                           ;	DEBUG = 0x1, unprogrammed default
  5101                           ;	Flash Program Memory Code Protection bit
  5102                           ;	CP = OFF, Code protection off
  5103     2007                     	org	8199
  5104     2007  3F7A               	dw	16250

Data Sizes:
    Strings     168
    Constant    0
    Data        4
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      72
    BANK1            80      0      42
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Lcd_Number@buffer(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Lcd_Number@buffer(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    Lcd_String@str	PTR const unsigned char  size(2) Largest target is 18
		 -> Lcd_Number@buffer(BANK0[10]), STR_1(CODE[7]), STR_10(CODE[12]), STR_11(CODE[11]), 
		 -> STR_12(CODE[17]), STR_13(CODE[16]), STR_14(CODE[9]), STR_15(CODE[11]), 
		 -> STR_16(CODE[7]), STR_17(CODE[8]), STR_2(CODE[18]), STR_4(CODE[7]), 
		 -> STR_5(CODE[8]), STR_6(CODE[6]), STR_7(CODE[12]), STR_8(CODE[8]), 
		 -> STR_9(CODE[16]), 

    S668$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Lcd_Number@buffer(BANK0[10]), 

    S668$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> Lcd_Number@buffer(BANK0[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _waitForStart->_Lcd_Set_Cursor
    _checkInvalidButtonPress->_Lcd_Set_Cursor
    _Lcd_Set_Cursor->_Lcd_Command
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _Lcd_String->_Lcd_Char
    _Lcd_Char->_delay_ms
    _Lcd_Clear->_Lcd_Command
    _showSequence->_delay_ms
    _initGame->_eeprom_write
    _getUserInput->_delay_ms
    _rand->___lmul
    _Lcd_Init->_Lcd_Command
    _Lcd_Command->_delay_ms

Critical Paths under _main in BANK0

    _main->_updateHighScore
    _updateScoreDisplay->_Lcd_Number
    _updateHighScore->_Lcd_Number
    _Lcd_Number->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _generateSequence->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11897
                                             50 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                         _Lcd_Number
                     _Lcd_Set_Cursor
                         _Lcd_String
                           _delay_ms
                   _generateSequence
                       _getUserInput
                           _initGame
                          _resetGame
                       _showSequence
                              _srand
                    _updateHighScore
                 _updateScoreDisplay
                       _waitForStart
 ---------------------------------------------------------------------------------
 (1) _waitForStart                                         0     0      0    2310
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                         _Lcd_String
            _checkInvalidButtonPress
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _checkInvalidButtonPress                              0     0      0    1155
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                         _Lcd_String
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _updateScoreDisplay                                   0     0      0    2859
                          _Lcd_Clear
                         _Lcd_Number
                     _Lcd_Set_Cursor
                         _Lcd_String
 ---------------------------------------------------------------------------------
 (1) _updateHighScore                                      5     5      0    3016
                                             45 BANK0      5     5      0
                          _Lcd_Clear
                         _Lcd_Number
                     _Lcd_Set_Cursor
                         _Lcd_String
                           _delay_ms
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       3     2      1     401
                                              6 COMMON     3     2      1
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Number                                          12    10      2    1761
                                             33 BANK0     12    10      2
                         _Lcd_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             19    15      4    1333
                                             16 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             5     1      4    1128
                                             13 COMMON     1     1      0
                                             12 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           13     9      4    1003
                                              0 BANK0     12     8      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     161
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_String                                           2     0      2     351
                                              6 COMMON     2     0      2
                           _Lcd_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Char                                             2     2      0     289
                                              4 COMMON     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     346
                        _Lcd_Command
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _showSequence                                         4     4      0     103
                                              4 COMMON     4     4      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _resetGame                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initGame                                             3     3      0     127
                                              2 COMMON     3     3      0
                        _eeprom_read
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         2     1      1      53
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getUserInput                                         2     2      0      57
                                              4 COMMON     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _generateSequence                                     2     2      0     140
                                              6 BANK0      2     2      0
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2      94
                                              0 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8      94
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0     346
                        _Lcd_Command
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _Lcd_Command                                          2     2      0     289
                                              4 COMMON     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             4     2      2      57
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Command
       _delay_ms
     _delay_ms
   _Lcd_Init
     _Lcd_Command
     _delay_ms
   _Lcd_Number
     _Lcd_String
       _Lcd_Char
         _delay_ms
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___lwdiv
           ___lwmod
           _fputc
             _putch
   _Lcd_Set_Cursor
     _Lcd_Command
   _Lcd_String
   _delay_ms
   _generateSequence
     _rand
       ___lmul
   _getUserInput
     _delay_ms
   _initGame
     _eeprom_read
     _eeprom_write
   _resetGame
   _showSequence
     _delay_ms
   _srand
   _updateHighScore
     _Lcd_Clear
     _Lcd_Number
     _Lcd_Set_Cursor
     _Lcd_String
     _delay_ms
     _eeprom_write
   _updateScoreDisplay
     _Lcd_Clear
     _Lcd_Number
     _Lcd_Set_Cursor
     _Lcd_String
   _waitForStart
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_String
     _checkInvalidButtonPress
       _Lcd_Clear
       _Lcd_Set_Cursor
       _Lcd_String
       _delay_ms
     _delay_ms

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      42     52.5%
BITBANK1            80      0       0      0.0%
BANK0               80     52      72     90.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     128      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jun 03 13:11:47 2025

                              pc 0002                               l94 0EB8                               l88 0E35  
                             fsr 0004         ?_checkInvalidButtonPress 0070                              l100 0284  
                            l110 0502                              l102 0292                              l111 0533  
                            l103 02A0                              l112 0506                              l104 02AE  
                            l121 053B                              l114 050A                              l106 02F0  
                            l210 01AB                              l131 0585                              l124 0581  
                            l116 05BA                              l212 01AF                              l133 0589  
                            l117 05A8                              l125 055E                              l205 0198  
                            l150 0443                              l118 055A                              l127 0562  
                            l119 0537                              l215 0DE0                              l207 019E  
                            l144 01F7                              l224 0717                              l153 04FC  
                            l330 0100                              l170 0F03                              l147 0215  
                            l156 0F34                              l164 0E04                              l173 0E4E  
                            l182 0E17                              l190 0E70                              l159 0DF0  
                            l184 0E1B                              l176 0152                              l185 0E1C  
                            l179 0DC4                              l197 023B                              l606 0F6C  
                            l198 0280                              l823 0EDD                              l816 067E  
                            l808 05FB                              l851 0DD1                              l835 038A  
                            l596 0FAE                              l854 0FFF                              l846 0DAC  
                            l779 0E93                              _RB0 0030                              _RB1 0031  
                            _RB2 0032                              _RC0 0038                              _RB3 0033  
                            _RC1 0039                              _RD0 0040                              _RC2 003A  
                            _RB4 0034                              _RD1 0041                              _RC3 003B  
                            _RD2 0042                              _RC4 003C                              _RD3 0043  
                            _RC5 003D                   ??_getUserInput 0074               eeprom_read@address 0070  
                            fsr0 0004                              indf 0000              __end_of_Lcd_Command 0444  
                           l1400 0F96                             l1402 0F9C                             l1500 038F  
                           l1404 0F9D                             l1420 0F47                             l1412 0F35  
                           l1510 03ED                             l1502 03D7                             l1406 0FA4  
                           l1422 0F4B                             l1414 0F3B                             l1430 0F68  
                           l1512 042D                             l1504 03D8                             l1600 0FEA  
                           l1520 0445                             l1408 0FAA                             l1424 0F55  
                           l1416 0F3E                             l1440 0304                             l1450 0E1E  
                           l1514 042E                             l1506 03E1                             l1530 049D  
                           l1522 0448                             l1426 0F5B                             l1418 0F45  
                           l1442 031C                             l1434 02F1                             l1610 01BF  
                           l1452 0E27                             l1516 0437                             l1508 03E4  
                           l1540 04F3                             l1532 04A6                             l1524 0490  
                           l1428 0F62                             l1444 034E                             l1436 02F7  
                           l1460 05D3                             l1620 01EE                             l1612 01C3  
                           l1604 01B0                             l1518 043A                             l1702 050B  
                           l1534 04E6                             l1526 0491                             l1390 0F75  
                           l1438 02FD                             l1470 05FD                             l1462 05D7  
                           l1454 05BB                             l1542 0EB9                             l1630 0212  
                           l1622 01FD                             l1614 01C7                             l1606 01B7  
                           l1448 0E1D                             l1720 0548                             l1712 0529  
                           l1704 0514                             l1640 0DBA                             l1552 0DE1  
                           l1536 04E7                             l1528 049A                             l1392 0F78  
                           l1480 0648                             l1472 0613                             l1464 05DB  
                           l1456 05CB                             l1544 0EBE                             l1560 0DFE  
                           l1800 0245                             l1624 0201                             l1616 01D4  
                           l1608 01BB                             l1730 0563                             l1706 0517  
                           l1642 0DBE                             l1650 0E0F                             l1538 04F0  
                           l1562 0EDE                             l1394 0F7F                             l1386 0F6D  
                           l1482 064C                             l1474 0628                             l1466 05E7  
                           l1458 05CF                             l1546 0ECD                             l1570 0E71  
                           l1554 0DF2                             l1810 026C                             l1802 024A  
                           l1626 0205                             l1618 01DD                             l1634 0214  
                           l1732 056C                             l1716 053C                             l1708 0527  
                           l1660 0E16                             l1652 0E10                             l1564 0EDF  
                           l1396 0F81                             l1388 0F6F                             l1476 062E  
                           l1468 05F5                             l1492 0665                             l1548 0ED9  
                           l1580 0E8A                             l1572 0E75                             l1556 0DF7  
                           l1812 0277                             l1804 0252                             l1628 0209  
                           l1820 0163                             l1900 0771                             l1590 00DE  
                           l1662 0E94                             l1734 056F                             l1718 0545  
                           l1654 0E11                             l1646 0E06                             l1670 0281  
                           l1566 0EED                             l1398 0F85                             l1478 0634  
                           l1486 0653                             l1574 0E79                             l1638 0E36  
                           l1558 0DFB                             l1806 025B                             l1830 0189  
                           l1822 016C                             l1814 0153                             l1910 07BE  
                           l1902 0782                             l1592 00E7                             l1584 00BB  
                           l1664 0E99                             l1760 05B9                             l1744 058A  
                           l1656 0E13                             l1648 0E0C                             l1840 0DD6  
                           l1680 02A1                             l1672 0285                             l1568 0EF3  
                           l1488 065E                             l1576 0E7B                             l1808 0263  
                           l1832 0192                             l1824 0174                             l1816 0156  
                           l1904 078C                             l1498 038C                             l1594 00F8  
                           l1586 00C3                             l1666 0EA8                             l1746 0593  
                           l1658 0E15                             l1842 0DDA                             l1690 02BC  
                           l1682 02AA                             l1674 028E                             l1578 0E7D  
                           l1770 0117                             l1826 017E                             l1818 015B  
                           l1906 0799                             l1914 07C8                             l1850 0688  
                           l1764 0F04                             l1588 00C7                             l1668 0EAE  
                           l1748 0596                             l1756 05A8                             l1780 0E4F  
                           l1684 02AF                             l1676 0293                             l1692 02CE  
                           l1844 0DC5                             l1772 0122                             l1836 01A2  
                           l1908 07A2                             l1860 06A5                             l1852 068B  
                           l1598 0FAF                             l1758 05B4                             l1782 0E56  
                           l1838 0DD2                             l1694 02DE                             l1686 02B8  
                           l1678 029C                             l1790 0216                             l1774 012B  
                           l1766 0101                             l1870 06C3                             l1862 06AA  
                           l1854 068D                             l1846 067F                             l1784 0E5B  
                           l1696 02E4                             l1792 0222                             l1776 013E  
                           l1768 010E                             l1880 06F0                             l1872 06C8  
                           l1864 06B0                             l1856 0692                             l1848 0683  
                           l1698 04FD                             l1786 0E5F                             l1794 022F  
                           l1778 0147                             l1890 0736                             l1882 06FA  
                           l1874 06D1                             l1866 06B5                             l1858 0697  
                           l1788 0E67                             l1796 0237                             l1892 0747  
                           l1884 0711                             l1876 06D6                             l1868 06BE  
                           l1798 023D                             l1894 0750                             l1886 0720  
                           l1878 06E7                             l1888 072D                             l1896 075B  
                           l1898 0768                             STR_1 00A4                             STR_2 0013  
                           STR_3 00B8                             STR_4 00AB                             STR_5 0095  
                           STR_6 00B2                             STR_7 0056                             STR_8 008D  
                           STR_9 0046                             u1200 0F85                             u2000 01BF  
                           u1201 0F84                             u2001 01BE                             u2010 01C3  
                           u2011 01C2                             u2100 0506                             u1220 0F96  
                           u1300 0F68                             u2020 01C7                             u2101 0505  
                           u1221 0F95                             u1301 0F67                             u2021 01C6  
                           u2110 050A                             u1310 02F7                             u2030 01FD  
                           u2111 0509                             u1215 0F86                             u1311 02F6  
                           u2031 01FC                             u2200 0589                             u2120 0527  
                           u1240 0FAA                             u1320 02FD                             u1400 0633  
                           u2040 0201                             u2201 0588                             u2121 0526  
                           u1241 0FA9                             u1225 0F92                             u1321 02FC  
                           u1401 0632                             u2041 0200                             u2210 05A7  
                           u2130 0537                             u1250 0F3B                             u1330 031C  
                           u1410 0652                             u2050 0205                             u2211 05A6  
                           u2131 0536                             u1235 0F9E                             u1251 0F3A  
                           u1331 031B                             u1411 0651                             u2051 0204  
                           u2220 05B4                             u2140 053B                             u1180 0F75  
                           u1340 034E                             u2060 0209                             u2300 01A2  
                           u2221 05B3                             u2141 053A                             u1181 0F74  
                           u1341 034D                             u2061 0208                             u2301 01A1  
                           u1430 039E                             u2230 05B9                             u2150 0559  
                           u2070 0E1B                             u1270 0F4B                             u1350 036F  
                           u2310 06FA                             u1431 039A                             u2231 05B8  
                           u2151 0558                             u2071 0E1A                             u1271 0F4A  
                           u2311 06F9                             u1360 0E35                             u1600 0418  
                           u1520 03D4                             u1504 03C5                             u2080 0EB8  
                           u2160 055E                             u2240 0E5B                             u1280 0F55  
                           u2320 0711                             u1361 0E34                             u1601 0414  
                           u1521 03D0                             u1425 0392                             u2081 0EB7  
                           u2225 05B0                             u2161 055D                             u2241 0E5A  
                           u1281 0F54                             u1265 0F3F                             u1345 034A  
                           u2321 0710                             u2170 0562                             u2090 02F0  
                           u1370 05CB                             u2250 0222                             u2330 0720  
                           u1515 03C8                             u2171 0561                             u2091 02EF  
                           u1195 0F79                             u1371 05CA                             u2251 0221  
                           u2331 071F                             u1540 03F4                             u1460 03B0  
                           u1444 03A1                             u2180 0580                             u1380 05E7  
                           u2260 022F                             u2340 07CF                             u1541 03F0  
                           u1461 03AC                             u2085 0EB4                             u2181 057F  
                           u1285 0F51                             u1381 05E6                             u2261 022E  
                           u2341 07CE                             u1630 042A                             u1614 041B  
                           u1534 03D7                             u2190 0585                             u1390 062E  
                           u2270 0188                             u1631 0426                             u1455 03A4  
                           u2191 0584                             u2095 02EC                             u1295 0F5C  
                           u1391 062D                             u2255 021E                             u2271 0187  
                           u1800 04BF                             u1720 047B                             u1704 046C  
                           u2280 0198                             u1625 041E                             u1801 04BB  
                           u1721 0477                             u2281 0197                             u1570 0406  
                           u1554 03F7                             u1490 03C2                             u1474 03B3  
                           u2290 019E                             u1571 0402                             u1491 03BE  
                           u1715 046F                             u2291 019D                             u1644 042D  
                           u1660 0457                             u1900 0F03                             u2357 0E22  
                           u1565 03FA                             u1485 03B6                             u1661 0453  
                           u1901 0F02                             u1910 00C7                             u1830 04D1  
                           u1814 04C2                             u1750 048D                             u1734 047E  
                           u1911 00C6                             u1831 04CD                             u1751 0489  
                           u1655 044B                             u1584 0409                             u1921 00D0  
                           u1825 04C5                             u1745 0481                             u1922 00D7  
                           u1770 04AD                             u1690 0469                             u1674 045A  
                           u1595 040C                             u1923 00DE                             u1771 04A9  
                           u1691 0465                             u1860 04E3                             u1844 04D4  
                           u1764 0490                             u1861 04DF                             u1685 045D  
                           u1950 00F8                             u1951 00F7                             u1935 00E0  
                           u1855 04D7                             u1960 0FD7                             u1784 04B0  
                           u1880 0ED9                             u1945 00E8                             u1961 0FD8  
                           u1881 0ED8                             u1970 0FF8                             u1962 0FDD  
                           u1874 04E6                             u1890 0DF7                             u1963 0FDE  
                           u1795 04B3                             u1891 0DF6                             u1980 01B7  
                           u1981 01B6                             u1990 01BB                             u1975 0FF3  
                           u1991 01BA          __end_of_updateHighScore 0281                             _TMR0 0001  
                 ??_eeprom_write 0071                             _dbuf 00A0                             _main 067F  
                           _rand 0FAF                             _seed 0060                             _prec 0056  
                           btemp 007E                             start 0000                       _Lcd_Number 0E36  
                     _Lcd_String 0EDE                            ?_main 0070                            ?_rand 0020  
                          _EEADR 010D                            STR_10 0062                            STR_11 006E  
                          STR_12 0025                            STR_13 0036                            STR_14 0084  
                          STR_15 0079                            STR_16 009D                            STR_17 008D  
                __end_of___lwdiv 0FAF                  __end_of___lwmod 0F6D                     vfpfcnvrt@fmt 0022  
                          _PORTD 0008                            _TRISB 0086                            _TRISC 0087  
                          _TRISD 0088       updateHighScore@scoreToSave 0051              ___lmul@multiplicand 0074  
                          _flags 005E                            _level 0066                            _fputc 02F1  
                          _score 005C                            _srand 0DC5                            _width 0054  
                          _putch 0DAC                            pclath 000A                 _generateSequence 0E94  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 0E94  
               __end_of_Lcd_Char 04FD                 __end_of_Lcd_Init 0F35                  __initialization 07D3  
                   __end_of_main 07D3                     __end_of_rand 1000                      _Lcd_Command 038B  
                         ??_main 0052                           ??_rand 0022                           _ADCON1 009F  
                         ?_fputc 0070                           _EEDATA 010C                           _EECON2 018D  
                         ?_srand 0070                           ?_putch 0070              eeprom_write@address 0071  
               ?_updateHighScore 0070                 __end_of_delay_ms 0E36             __end_of_getUserInput 05BB  
                   vfprintf@cfmt 007D                           ___lmul 00BB                        ??___lwdiv 0074  
               __end_of_initGame 0E71                        ??___lwmod 0074                      ?_Lcd_Number 0041  
           __end_of_eeprom_write 0E1D                      ?_Lcd_String 0076                           fputc@c 0070  
            initGame@storedScore 0074                           srand@s 0070                           putch@c 0070  
               __end_of_vfprintf 0EDE                        ??_sprintf 0034          __end_of__initialization 07FC  
              __end_of_Lcd_Clear 0DF1                   __pcstackCOMMON 0070                     __pidataBANK0 0DAD  
                  __end_of_fputc 038B                    __end_of_srand 0DD2                    __end_of_putch 0DAD  
                 _Lcd_Set_Cursor 0DF1                   _OPTION_REGbits 0081                        ?_Lcd_Char 0070  
                      ?_Lcd_Init 0070                          ??_fputc 0074                          ??_srand 0072  
                        ??_putch 0070                       __pbssBANK0 0054                       __pbssBANK1 00A0  
                     __pmaintext 067F                          ?___lmul 0070                   ___lmul@product 0079  
       __end_of_generateSequence 0EB9           __end_of_Lcd_Set_Cursor 0E05                        ?_delay_ms 0070  
                     ??_Lcd_Char 0074                       ??_Lcd_Init 0076                       __stringtab 0003  
                      ?_initGame 0070                    ?_waitForStart 0070                          ___lwdiv 0F6D  
                        ___lwmod 0F35                        ?_vfprintf 002C                     ?_Lcd_Command 0070  
                ?_Lcd_Set_Cursor 0076                          __ptext1 0153                          __ptext2 01B0  
                        __ptext3 0101                          __ptext4 0216                          __ptext5 0DF1  
                        __ptext6 0E36                          __ptext7 0E71                          __ptext8 0EB9  
                        __ptext9 05BB                     _getUserInput 04FD                       _inputIndex 005A  
                     ??_delay_ms 0072                          _sprintf 0E71                          clrloop0 0DB2  
                     delay_ms@ms 0070             end_of_initialization 07FC                       ??_initGame 0072  
              __end_of_resetGame 0DE1                          fputc@fp 0072                     _eeprom_write 0E05  
                 ??_waitForStart 0079                    ?_showSequence 0070                __end_of_vfpfcnvrt 067F  
               vfpfcnvrt@convarg 0026                       ??_vfprintf 007D                     ??_Lcd_Number 007E  
                   ??_Lcd_String 0078          _checkInvalidButtonPress 01B0                    ??_eeprom_read 0070  
             __end_of_Lcd_Number 0E4F                   ??_showSequence 0074       __end_of_updateScoreDisplay 0153  
             __end_of_Lcd_String 0F04                        _Lcd_Clear 0DE1                   __end_of___lmul 0101  
                    vfpfcnvrt@ap 0023                      vfpfcnvrt@cp 002A                      vfpfcnvrt@fp 0020  
            start_initialization 07D3                      vfprintf@fmt 002E                       ?_Lcd_Clear 0070  
                       ??___lmul 0078              __end_of_eeprom_read 0DC5                      __pdataBANK0 0064  
              ?_generateSequence 0070             __end_of_waitForStart 01B0               ??_generateSequence 007D  
      ??_checkInvalidButtonPress 0079                        ___latbits 0002                    __pcstackBANK0 0020  
                  Lcd_String@str 0076                 eeprom_write@data 0070                 ___lwdiv@dividend 0072  
                      _gameState 005F                 ??_Lcd_Set_Cursor 0077                 Lcd_Number@buffer 0043  
                       ?___lwdiv 0070                         ?___lwmod 0070                        _highScore 0058  
               Lcd_Number@number 0041                        __pstrings 0003                ??_updateHighScore 004D  
           __end_of_showSequence 02F1                     Lcd_Char@data 0075                 ___lwdiv@quotient 0074  
                       ?_sprintf 0030                        clear_ram0 0DB1                      _eeprom_read 0DB9  
__end_of_checkInvalidButtonPress 0216                        _resetGame 0DD2                      ??_Lcd_Clear 0076  
                      _showSpeed 0064                        _vfpfcnvrt 05BB                      __stringbase 0012  
                       _Lcd_Char 0444                         _Lcd_Init 0F04                       vfpfcnvrt@c 002B  
              ___lmul@multiplier 0070                generateSequence@i 0026             Lcd_Set_Cursor@column 0076  
                     _EECON1bits 018C                       ?_resetGame 0070                       vfprintf@ap 002F  
                     vfprintf@fp 002C                       ?_vfpfcnvrt 0020               __end_of__stringtab 0013  
             _updateScoreDisplay 0101                       sprintf@fmt 0031                         _delay_ms 0E1D  
                ___lwdiv@divisor 0070              ?_updateScoreDisplay 0070                  ___lwdiv@counter 0076  
                       __ptext10 02F1                         __ptext11 0DAC                         __ptext20 0E4F  
                       __ptext12 0F35                         __ptext21 0E05                         __ptext13 0F6D  
                       __ptext22 0DB9                         __ptext14 0EDE                         __ptext23 04FD  
                       __ptext15 0444                         __ptext24 0E94                         __ptext16 0DE1  
                       __ptext25 0FAF                         __ptext17 0DC5                         __ptext26 00BB  
                       __ptext18 0281                         __ptext27 0F04                         __ptext19 0DD2  
                       __ptext28 038B                         __ptext29 0E1D                         _initGame 0E4F  
            _updateHighScore$227 004F                     _waitForStart 0153             ??_updateScoreDisplay 007E  
                       _sequence 00C0                         _vfprintf 0EB9                       _INTCONbits 000B  
                      sprintf@ap 0035                 ___lwmod@dividend 0072                      ??_resetGame 0070  
                      stringcode 000D                  _updateHighScore 0216                     _showSequence 0281  
                    ??_vfpfcnvrt 0024                    ??_Lcd_Command 0074                   Lcd_Command@cmd 0075  
                       sprintf@f 0036                         sprintf@s 0030                  ___lwmod@divisor 0070  
                  ?_getUserInput 0070                  ___lwmod@counter 0074                         stringdir 000D  
                       stringtab 0003                Lcd_Set_Cursor@pos 0078                Lcd_Set_Cursor@row 0077  
                  ?_eeprom_write 0070                    showSequence@i 0076                     ?_eeprom_read 0070  
